-- phpMyAdmin SQL Dump
-- version 3.2.4
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2013 年 03 月 12 日 03:46
-- 服务器版本: 5.1.44
-- PHP 版本: 5.3.1

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `myblog`
--

-- --------------------------------------------------------

--
-- 表的结构 `mb_administrator`
--

CREATE TABLE IF NOT EXISTS `mb_administrator` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(30) NOT NULL,
  `password` char(32) NOT NULL,
  `datetime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- 转存表中的数据 `mb_administrator`
--

INSERT INTO `mb_administrator` (`id`, `username`, `password`, `datetime`) VALUES
(1, 'xiaozhe', '31efe5c727df3e9f116cd46fbb5b2626', '2013-03-09 22:44:29');

-- --------------------------------------------------------

--
-- 表的结构 `mb_blog`
--

CREATE TABLE IF NOT EXISTS `mb_blog` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `c_id` int(10) unsigned NOT NULL,
  `tags` varchar(100) NOT NULL,
  `comment_conf` smallint(3) NOT NULL,
  `click` int(10) unsigned NOT NULL DEFAULT '0',
  `active` tinyint(1) unsigned NOT NULL DEFAULT '1',
  `datetime` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `c_id` (`c_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=287 ;

--
-- 转存表中的数据 `mb_blog`
--

INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(163, 'PHP操作XML的经验', '<p>\r\n	最近接了一个项目，很多功能需要以xml为接口来回进行一系列的操作。现在附下我的一点经验。<br />\r\n情况一：当是你收到xml信息进行处理的时候,可以用以下步骤 ：<br />\r\n//输出严格的xml格式&nbsp;<br />\r\n&nbsp;header ( ''Content-type: text/xml'' );<br />\r\n&nbsp;echo pack ( "C3" , 0xef, 0xbb, 0xbf );<br />\r\n&nbsp;//通过php输入流得到数据&nbsp;<br />\r\n&nbsp;$userinfo = file_get_contents(''php://input'');<br />\r\n//将得到的字符串数据对象化&nbsp;<br />\r\n&nbsp;$xml_obj = simplexml_load_string($userinfo);<br />\r\n&nbsp;$xml_arr = xmltoarray($xml_obj);<br />\r\n然后使用下面函数进行处理。<br />\r\n<br />\r\nfunction xmltoarray($object, &amp;$tmparr=array()) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;if (is_object($object)) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmparr = get_object_vars($object);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;}<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;foreach ($tmparr as $k =&gt; $v) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is_array($v)) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmparr[$k] = xmltoarray($v, $tmparr[$k]);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} elseif (is_object($v)) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmparr[$k] = xmltoarray($v, $tmparr[$k]);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmparr[$k] = $v;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;}<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;return $tmparr;<br />\r\n}<br />\r\n<br />\r\n<br />\r\n情况二：我以curl发送请求时，他们返回的xml不能进行对象化，所以我在w3c找到了\r\n</p>\r\n<h1>\r\n	xml_parse_into_struct() 函数\r\n</h1>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	他可以将传回来的信息序列化成数组。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n&lt;?php// xml 文件&nbsp;$xmlfile = ''test.xml'';\r\n&nbsp;$xmlparser = xml_parser_create();\r\n&nbsp;// 打开文件并读取数据&nbsp;$fp = fopen($xmlfile, ''r'');\r\n&nbsp;$xmldata = fread($fp, filesize($xmlfile));\r\n&nbsp;xml_parse_into_struct($xmlparser,$xmldata,$values);&nbsp;xml_parser_free($xmlparser);\r\n&nbsp;print_r($values);\r\n&nbsp;?&gt;\r\n<div>\r\n	<br />\r\n</div>', 9, 'php,xml', 1, 0, 1, '2013-03-10 11:46:25'),
(164, '有关curl的一些代码', '<div>\r\n	<span style="font-size:14px;">$ch = curl_init();</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_URL, $url); &nbsp;</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">curl_setopt ($ch, CURLOPT_CAINFO, $_SERVER["DOCUMENT_ROOT"]."/application/cacert.pem");</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5);&nbsp;</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_FOLLOWLOCATION , true);</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_MAXREDIRS &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 5);</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">$pageSourceString &nbsp;= curl_exec($ch);</span> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">curl_close($ch);</span> \r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;$ch = curl_init();\r\n&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;curl_setopt($ch, CURLOPT_URL, $url);&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;curl_setopt($ch, CURLOPT_HTTPHEADER, array(''Content-Type''=&gt;''text/xml''));\r\n&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\r\n&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);\r\n&nbsp;&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_POST, 1);\r\n&nbsp;&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);\r\n&nbsp;&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n&nbsp;&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$res&nbsp;= curl_exec($ch);\r\n&nbsp;&nbsp;$res = trim($res);\r\n&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">curl_close($ch);\r\n&nbsp;&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">file_put_contents(''response_deposit.xml'',$res);</span>\r\n</p>', 9, 'curl,php', 1, 0, 1, '2013-03-10 11:48:35'),
(165, 'Github的使用和原理', '<p style="color:#555555;font-family:simsun;font-size:14px;background-color:#FFFFFF;">\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a0101bz1u&amp;url=http://s11.sinaimg.cn/orignal/788e5b7agd6cf6a9623ba" target="_blank"><img src="http://s11.sinaimg.cn/mw690/788e5b7agd6cf6a9623ba&amp;690" alt="Github的使用和原理" title="Github的使用和原理" /></a>\r\n</p>\r\n<p style="color:#555555;font-family:simsun;font-size:14px;background-color:#FFFFFF;">\r\n	<strong><span style="line-height:24px;font-size:16px;">Git常用操作命令收集：</span></strong>\r\n</p>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	<span style="line-height:19px;font-size:small;"><strong>1)&nbsp;远程仓库相关命令</strong></span>\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	检出仓库：$&nbsp;git&nbsp;clone&nbsp;git://github.com/jquery/jquery.git\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	查看远程仓库：$&nbsp;git&nbsp;remote&nbsp;-v\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	添加远程仓库：$&nbsp;git&nbsp;remote&nbsp;add&nbsp;[name]&nbsp;[url]\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	删除远程仓库：$&nbsp;git&nbsp;remote&nbsp;rm&nbsp;[name]\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	修改远程仓库：$&nbsp;git&nbsp;remote&nbsp;set-url&nbsp;--push&nbsp;[name]&nbsp;[newUrl]\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	拉取远程仓库：$&nbsp;git&nbsp;pull&nbsp;[remoteName]&nbsp;[localBranchName]\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	推送远程仓库：$&nbsp;git&nbsp;push&nbsp;[remoteName]&nbsp;[localBranchName]\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	*&nbsp;如果想把本地的某个分支test提交到远程仓库，并作为远程仓库的master分支，或者作为另外一个名叫test的分支，如下：\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	<div style="padding:0px;margin:0px;">\r\n		<div style="padding:0px;margin:0px;">\r\n			$&nbsp;git&nbsp;push&nbsp;origin&nbsp;test:master&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;提交本地test分支作为远程的master分支\r\n		</div>\r\n		<div style="padding:0px;margin:0px;">\r\n			$&nbsp;git&nbsp;push&nbsp;origin&nbsp;test:test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;提交本地test分支作为远程的test分支\r\n		</div>\r\n		<div style="padding:0px;margin:0px;">\r\n		</div>\r\n		<div style="padding:0px;margin:0px;">\r\n			<div style="padding:0px;margin:0px;">\r\n				<strong><span style="line-height:19px;font-size:small;">2）分支(branch)操作相关命令</span></strong>\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				查看本地分支：$&nbsp;git&nbsp;branch\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				查看远程分支：$&nbsp;git&nbsp;branch&nbsp;-r\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				创建本地分支：$&nbsp;git&nbsp;branch&nbsp;[name]&nbsp;----注意新分支创建后不会自动切换为当前分支\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				切换分支：$&nbsp;git&nbsp;checkout&nbsp;[name]\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				创建新分支并立即切换到新分支：$&nbsp;git&nbsp;checkout&nbsp;-b&nbsp;[name]\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				删除分支：$&nbsp;git&nbsp;branch&nbsp;-d&nbsp;[name]&nbsp;----&nbsp;-d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				合并分支：$&nbsp;git&nbsp;merge&nbsp;[name]&nbsp;----将名称为[name]的分支与当前分支合并\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				创建远程分支(本地分支push到远程)：$&nbsp;git&nbsp;push&nbsp;origin&nbsp;[name]\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				删除远程分支：$&nbsp;git&nbsp;push&nbsp;origin&nbsp;:heads/[name]&nbsp;或&nbsp;$&nbsp;git&nbsp;push&nbsp;origin&nbsp;:[name]&nbsp;\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				*&nbsp;创建空的分支：(执行命令之前记得先提交你当前分支的修改，否则会被强制删干净没得后悔)\r\n			</div>\r\n			<div style="padding:0px;margin:0px;">\r\n				<div style="padding:0px;margin:0px;">\r\n					$&nbsp;git&nbsp;symbolic-ref&nbsp;HEAD&nbsp;refs/heads/[name]\r\n				</div>\r\n				<div style="padding:0px;margin:0px;">\r\n					$&nbsp;rm&nbsp;.git/index\r\n				</div>\r\n				<div style="padding:0px;margin:0px;">\r\n					$&nbsp;git&nbsp;clean&nbsp;-fdx\r\n				</div>\r\n				<div style="padding:0px;margin:0px;">\r\n				</div>\r\n				<div style="padding:0px;margin:0px;">\r\n					<div style="padding:0px;margin:0px;">\r\n						<strong><span style="line-height:19px;font-size:small;">3）版本(tag)操作相关命令</span></strong>\r\n					</div>\r\n					<div style="padding:0px;margin:0px;">\r\n						查看版本：$&nbsp;git&nbsp;tag\r\n					</div>\r\n					<div style="padding:0px;margin:0px;">\r\n						创建版本：$&nbsp;git&nbsp;tag&nbsp;[name]\r\n					</div>\r\n					<div style="padding:0px;margin:0px;">\r\n						删除版本：$&nbsp;git&nbsp;tag&nbsp;-d&nbsp;[name]\r\n					</div>\r\n					<div style="padding:0px;margin:0px;">\r\n						查看远程版本：$&nbsp;git&nbsp;tag&nbsp;-r\r\n					</div>\r\n					<div style="padding:0px;margin:0px;">\r\n						创建远程版本(本地版本push到远程)：$&nbsp;git&nbsp;push&nbsp;origin&nbsp;[name]\r\n					</div>\r\n					<div style="padding:0px;margin:0px;">\r\n						删除远程版本：$&nbsp;git&nbsp;push&nbsp;origin&nbsp;:refs/tags/[name]\r\n					</div>\r\n					<div style="padding:0px;margin:0px;">\r\n						合并远程仓库的tag到本地：$&nbsp;git&nbsp;pull&nbsp;origin&nbsp;--tags\r\n					</div>\r\n					<div style="padding:0px;margin:0px;">\r\n						上传本地tag到远程仓库：$&nbsp;git&nbsp;push&nbsp;origin&nbsp;--tags\r\n					</div>\r\n					<div style="padding:0px;margin:0px;">\r\n						创建带注释的tag：$&nbsp;git&nbsp;tag&nbsp;-a&nbsp;[name]&nbsp;-m&nbsp;''yourMessage''\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p style="color:#555555;font-family:simsun;font-size:14px;background-color:#FFFFFF;">\r\n	&nbsp;\r\n</p>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	<strong><span style="line-height:19px;font-size:small;">4)&nbsp;子模块(submodule)相关操作命令</span></strong>\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	添加子模块：$&nbsp;git&nbsp;submodule&nbsp;add&nbsp;[url]&nbsp;[path]&nbsp;&nbsp;如：$&nbsp;git&nbsp;submodule&nbsp;add&nbsp;git://github.com/soberh/ui-libs.git&nbsp;src/main/webapp/ui-libs\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	初始化子模块：$&nbsp;git&nbsp;submodule&nbsp;init&nbsp;&nbsp;----只在首次检出仓库时运行一次就行\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	更新子模块：$&nbsp;git&nbsp;submodule&nbsp;update&nbsp;----每次更新或切换分支后都需要运行一下\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	删除子模块：（分4步走哦）\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	1)&nbsp;$&nbsp;git&nbsp;rm&nbsp;--cached&nbsp;[path]\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	2)&nbsp;编辑“.gitmodules”文件，将子模块的相关配置节点删除掉\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	3)&nbsp;编辑“&nbsp;.git/config”文件，将子模块的相关配置节点删除掉\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	4)&nbsp;手动删除子模块残留的目录\r\n</div>\r\n<p style="color:#555555;font-family:simsun;font-size:14px;background-color:#FFFFFF;">\r\n	&nbsp;\r\n</p>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	<strong><span style="line-height:19px;font-size:small;">5）忽略一些文件、文件夹不提交</span></strong>\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	在仓库根目录下创建名称为“.gitignore”的文件，写入不需要的文件夹名或文件，每个元素占一行即可，如\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	target\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	bin\r\n</div>\r\n<div style="color:#555555;font-size:14px;padding:0px;background-color:#FFFFFF;margin:0px;font-family:微软雅黑, verdana, sans-serif, 宋体;">\r\n	*.db\r\n</div>', 10, 'github,linux', 1, 0, 1, '2013-03-10 11:50:18'),
(166, 'Mac OS X 环境变量的设置', '<div style="text-align:left;">\r\n	<span style="font-size:14px;line-height:1.5;">办法如下（本人在mac os x server上验证通过）：</span>\r\n</div>\r\n<span style="font-size:14px;">\r\n<div style="text-align:left;">\r\n	<span style="line-height:1.5;">全局环境变量设在/etc/profile中；</span>\r\n</div>\r\n</span>\r\n<div style="text-align:left;">\r\n	<span style="font-size:14px;line-height:1.5;"></span><span style="font-size:14px;line-height:1.5;"></span><span style="font-size:14px;line-height:1.5;"></span><span style="font-size:14px;line-height:1.5;">用户个人的环境变量：在$HOME/创建 .profile 文件，写入相应的 export ....就可以了。</span>\r\n</div>\r\n<p>\r\n	<div style="text-align:left;">\r\n		<br />\r\n	</div>\r\n	<div style="text-align:left;">\r\n		<span style="font-size:14px;">例如：</span>\r\n	</div>\r\n	<div style="text-align:left;">\r\n		<span style="font-size:14px;">$ vim ~/.profile ;&nbsp;</span>\r\n	</div>\r\n	<p style="text-align:left;">\r\n		<span style="font-size:14px;">然后在里面输入 ：</span>\r\n	</p>\r\n	<p style="text-align:left;">\r\n		<span style="font-size:14px;">&nbsp;export PATH=/opt/subversion/bin:$PATH 。</span>\r\n	</p>\r\n	<p style="text-align:left;">\r\n		<span style="font-size:14px;">&nbsp;则将/opt/subversion/bin设置为了用户个人大环境变量</span>\r\n	</p>\r\n	<div>\r\n		<div style="text-align:left;">\r\n			<br />\r\n		</div>\r\n<span style="font-size:14px;">\r\n		<div style="text-align:left;">\r\n			<span style="line-height:1.5;">最后不要忘了source ./.profile。</span>\r\n		</div>\r\n</span>\r\n	</div>\r\n</p>', 11, 'mac', 1, 0, 1, '2013-03-10 11:51:28'),
(167, 'PHP自定义本地访问域名', '<div>\r\n	<span style="font-size:14px;">1.修改Window的hosts文件</span>\r\n</div>\r\n<div>\r\n	<div>\r\n		<span style="font-size:14px;"># Copyright (c) 1993-2009 Microsoft Corp.</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">#</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># This is a sample HOSTS file used by Microsoft TCP/IP for Windows.</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">#</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># This file contains the mappings of IP addresses to host names. Each</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># entry should be kept on an individual line. The IP address should</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># be placed in the first column followed by the corresponding host name.</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># The IP address and the host name should be separated by at least one</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># space.</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">#</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># Additionally, comments (such as these) may be inserted on individual</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># lines or following the machine name denoted by a ''#'' symbol.</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">#</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># For example:</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">#</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;102.54.94.97 &nbsp;&nbsp;&nbsp;&nbsp;rhino.acme.com &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# source server</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;38.25.63.10 &nbsp;&nbsp;&nbsp;&nbsp;x.acme.com &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# x client host</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># localhost name resolution is handled within DNS itself.</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># 127.0.0.1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;localhost</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;"># ::1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;localhost</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">127.0.0.1 www.localproject.com</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">127.0.0.1 zocle.localproject.com</span>\r\n	</div>\r\n</div>\r\n<div>\r\n	<br />\r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">2.修改Apache配置文件httpd-vhosts.conf</span>\r\n</div>\r\n<div>\r\n	<div>\r\n		<span style="font-size:14px;">&lt;VirtualHost *:80&gt;</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;DocumentRoot "D:/xampp/htdocs/Zocle"</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;ServerName zocle.localproject.com</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;ServerAlias zocle.localproject.com</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">&lt;/VirtualHost&gt;</span>\r\n	</div>\r\n	<div>\r\n		<br />\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">&lt;VirtualHost *:80&gt;</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;DocumentRoot "D:/xampp/htdocs/"</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;ServerName www.localproject.com</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;ServerAlias www.localproject.com</span>\r\n	</div>\r\n	<div>\r\n		<span style="font-size:14px;">&lt;/VirtualHost&gt;</span>\r\n	</div>\r\n</div>', 9, '域名,php', 1, 0, 1, '2013-03-10 11:53:06'),
(168, 'ubuntu下SVN服务器安装配置 ', '<p>\r\n	<span style="font-size:14px;">一、SVN安装</span><br />\r\n<span style="font-size:14px;"> 1.安装包</span><br />\r\n<span style="font-size:14px;"> 1.$&nbsp;sudo&nbsp;apt-get&nbsp;install&nbsp;subversion</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.创建项目目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;sudo&nbsp;mkdir&nbsp;/home/xiaozhe/svn</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;cd&nbsp;/home/xiaozhe/svn/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;sudo&nbsp;mkdir&nbsp;mypro</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 3.创建svn文件仓库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;sudo&nbsp;svnadmin&nbsp;create&nbsp;/home/xiaozhe/svn/mypro</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.导入项目到svn文件仓库&nbsp;(可有可无)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;sudo&nbsp;svn&nbsp;import&nbsp;-m&nbsp;""&nbsp;你的文件夹路径&nbsp;file:///home/xiaozhe/svn/mypro</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.访问权限设置</span><br />\r\n<span style="font-size:14px;"> 修改&nbsp;/home/xiaozhe/svn/mypro/conf目录下：</span><br />\r\n<span style="font-size:14px;"> svnserve.conf&nbsp;、passwd&nbsp;个文件,行最前端不允许有空格</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 编辑svnserve.conf文件,把如下面行取消注释，并需要顶格</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">anon-access&nbsp;=&nbsp;read</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">auth-access&nbsp;=&nbsp;write</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> password-db&nbsp;=&nbsp;passwd</span><br />\r\n<br />\r\n<br />\r\n<span style="font-size:14px;"> 编辑passwd&nbsp;&nbsp;如下:</span><br />\r\n<span style="font-size:14px;"> [users]</span><br />\r\n<span style="font-size:14px;"> andy&nbsp;=&nbsp;andy</span><br />\r\n<span style="font-size:14px;"></span><br />\r\n<br />\r\n<span style="font-size:14px;"> 6.&nbsp;开启svnserve,以SVN根目录开启：</span><br />\r\n<span style="font-size:14px;"> $&nbsp;svnserve&nbsp;-d&nbsp;-r&nbsp;/home/xiaozhe/svn</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.检查是否正常启动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;netstat&nbsp;-ntlp</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以看到有一个端口为3690的地址，表示启动成功</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">（如果使用Apache连接，则跳过下步）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8.局域网访问，checkout出来SVN库的文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">svn&nbsp;checkout&nbsp;svn://SvnIp地址/mypro</span><br />\r\n<span style="font-size:14px;"> 或者简写为：</span><br />\r\n<span style="font-size:14px;"> svn&nbsp;co&nbsp;svn://SvnIp地址/mypro</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二、</span><a href="http://yangyongquan.com/2009/04/configure-subversion-with-apache-in-ubuntu.html"><span style="font-size:14px;">在Ubuntu下使用Apache配置Subversion</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.安装必要软件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;sudo&nbsp;apt-get&nbsp;install&nbsp;subversion&nbsp;libapache2-svn&nbsp;apache2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.修改apache配置文件/etc/apache2/mods-available/dav_svn.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;Location&nbsp;/svn/mypro&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">DAV&nbsp;svn</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">SVNPath&nbsp;/home/xiaozhe/svn/mypro</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">AuthType&nbsp;Basic</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">AuthName&nbsp;"myproject&nbsp;subversion&nbsp;repository"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">AuthUserFile&nbsp;/etc/subversion/passwd</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#&lt;LimitExcept&nbsp;GET&nbsp;PROPFIND&nbsp;OPTIONS&nbsp;REPORT&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Require&nbsp;valid-user</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#&lt;/LimitExcept&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/Location&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果需要用户每次登录时都进行用户密码验证，请将&lt;LimitExcept&nbsp;GET&nbsp;PROPFIND&nbsp;OPTIONS&nbsp;REPORT&gt;与&lt;/LimitExcept&gt;两行注释掉。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当您添加了上面的内容，您必须重新起动&nbsp;Apache&nbsp;2&nbsp;Web&nbsp;服务器，请输入下面的命令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;sudo&nbsp;/etc/init.d/apache2&nbsp;restart</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.创建&nbsp;/etc/subversion/passwd&nbsp;文件，该文件包含了用户授权的详细信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;sudo&nbsp;htpasswd&nbsp;-c&nbsp;/etc/subversion/passwd&nbsp;user_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">它会提示您输入密码，当您输入了密码，该用户就建立了。“-c”选项表示创建新的/etc/subversion/passwd文件，所以user_name所指的用户将是文件中唯一的用户。如果要添加其他用户，则去掉“-c”选项即可：$&nbsp;sudo&nbsp;htpasswd&nbsp;/etc/subversion/passwd&nbsp;other_user_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.您可以通过下面的命令来访问文件仓库：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;svn&nbsp;co&nbsp;http://hostname/svn/myproject&nbsp;myproject&nbsp;--username&nbsp;user_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者通过浏览器：http://hostname/svn/myproject</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">三、ubuntu&nbsp;SVN命令大全</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1、将文件checkout到本地目录&nbsp;svn&nbsp;checkout&nbsp;path（path&nbsp;是服务器上的目录）</span><br />\r\n<span style="font-size:14px;"> &nbsp;例如：$&nbsp;svn&nbsp;checkout&nbsp;svn://192.168.1.1/pro</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;简写：$&nbsp;svn&nbsp;co&nbsp;svn://192.168.1.1/pro</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、往版本库中添加新的文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;$&nbsp;svnadd&nbsp;file</span><br />\r\n<span style="font-size:14px;"> &nbsp;$&nbsp;svn&nbsp;add&nbsp;test.php(添加test.php)</span><br />\r\n<span style="font-size:14px;"> &nbsp;$&nbsp;svn&nbsp;add&nbsp;*.php(添加当前目录下所有的php文件)&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3、将改动的文件提交到版本库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;svn&nbsp;commit&nbsp;-m&nbsp;"LogMessage"&nbsp;[-N]&nbsp;[--no-unlock]&nbsp;PATH(如果选择了保持锁,就使用–no-&nbsp;unlock开关)</span><br />\r\n<span style="font-size:14px;"> &nbsp;例如：$&nbsp;svn&nbsp;commit&nbsp;-m&nbsp;''add&nbsp;test&nbsp;file&nbsp;for&nbsp;my&nbsp;test''&nbsp;test.php</span><br />\r\n<span style="font-size:14px;"> &nbsp;简写：$&nbsp;svn&nbsp;ci</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4、更新到某个版本</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;svn&nbsp;update&nbsp;-rm&nbsp;path</span><br />\r\n<span style="font-size:14px;"> &nbsp;例如：$&nbsp;svn&nbsp;update如果后面没有目录，默认将当前目录以及子目录下的所有文件都更新到最新版本。</span><br />\r\n<span style="font-size:14px;"> $&nbsp;svn&nbsp;update&nbsp;-r&nbsp;200&nbsp;test.php(将版本库中的文件test.php还原到版本200)</span><br />\r\n<span style="font-size:14px;"> $&nbsp;svn&nbsp;update&nbsp;test.php(更新，于版本库同步。如果在提交的时候提示过期的话，是因为冲突，需要先update，修改文&nbsp;件，然后清除$&nbsp;svn&nbsp;resolved，最后再提交commit)&nbsp;简写：svn&nbsp;up</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5、删除文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;svn&nbsp;delete&nbsp;path&nbsp;-m&nbsp;''delete&nbsp;test&nbsp;fle''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;例如：$&nbsp;svn&nbsp;delete&nbsp;test.php&nbsp;然后再$&nbsp;svn&nbsp;ci&nbsp;-m&nbsp;''delete&nbsp;test&nbsp;file''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;简写：svn&nbsp;(del,&nbsp;remove,&nbsp;rm)&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6、比较差异</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;$&nbsp;svn&nbsp;diff&nbsp;path(将修改的文件与基础版本比较)</span><br />\r\n<span style="font-size:14px;"> &nbsp;例如：$&nbsp;svn&nbsp;diff&nbsp;test.php</span><br />\r\n<span style="font-size:14px;"> &nbsp;$&nbsp;svn&nbsp;diff&nbsp;-r&nbsp;m:n&nbsp;path(对版本m和版本n比较差异)</span><br />\r\n<span style="font-size:14px;"> &nbsp;例如：svn&nbsp;diff&nbsp;-r&nbsp;200:201&nbsp;test.php</span><br />\r\n<span style="font-size:14px;"> &nbsp;简写：svn&nbsp;di&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7、查看文件或者目录状态</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1）svn&nbsp;status&nbsp;path（目录下的文件和子目录的状态，正常状态不显示）</span><br />\r\n<span style="font-size:14px;"> &nbsp;【?：不在svn的控制中；M：内容被修改；C：发生冲突；A：预定加入到版本库；K：被锁定】</span><br />\r\n<span style="font-size:14px;"> &nbsp;2）svn&nbsp;status&nbsp;-v&nbsp;path(显示&nbsp;文件和子目录状态)</span><br />\r\n<span style="font-size:14px;"> &nbsp;第一列保持相同，第二列显示工作版本号，第三和第四列显示最后一次修改的版本号和修改人。</span><br />\r\n<span style="font-size:14px;"> &nbsp;注：svn&nbsp;status、svn&nbsp;diff和&nbsp;svn&nbsp;revert这三条命令在没有网络的情况下也可以执行的，原因是svn在本地的.svn中保留了本地版本的原始拷贝。</span><br />\r\n<span style="font-size:14px;"> &nbsp;简写：svn&nbsp;st&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8、解决冲突</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;svn&nbsp;resolved:&nbsp;移除工作副本的目录或文件的“冲突”状态。</span><br />\r\n<span style="font-size:14px;"> &nbsp;用法:&nbsp;$&nbsp;resolved&nbsp;PATH…</span><br />\r\n<span style="font-size:14px;"> &nbsp;注意:&nbsp;本子命令不会依语法来解决冲突或是移除冲突标记；它只是移除冲突的</span><br />\r\n<span style="font-size:14px;"> &nbsp;相关文件，然后让&nbsp;PATH&nbsp;可以再次提交。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">四、同步更新&nbsp;[勾子]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">同步程序思路：用户提交程序到SVN，SVN触发hooks,按不同的hooks进行处理，这里用到的是post-commit，利用post-commit到代码检出到SVN服务器的本地硬盘目录，再通过rsync同步到远程的WEB服务器上。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">知识点：</span><br />\r\n<span style="font-size:14px;"> 1、SVN的hooks</span><br />\r\n<span style="font-size:14px;"> #&nbsp;start-commit&nbsp;提交前触发事务</span><br />\r\n<span style="font-size:14px;"> #&nbsp;pre-commit&nbsp;提交完成前触发事务</span><br />\r\n<span style="font-size:14px;"> #&nbsp;post-commit&nbsp;提交完成时触发事务</span><br />\r\n<span style="font-size:14px;"> #&nbsp;pre-revprop-change&nbsp;版本属性修改前触发事务</span><br />\r\n<span style="font-size:14px;"> #&nbsp;post-revprop-change&nbsp;版本属性修改后触发事务</span><br />\r\n<span style="font-size:14px;"> 通过上面这些名称编写的脚本就就可以实现多种功能了，相当强大。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 2、同步命令rsync的具体参数使用</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 3、具有基个语言的编程能力bash&nbsp;python&nbsp;perl都可以实现</span><br />\r\n<span style="font-size:14px;"> post-commit脚本</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">编辑文件：sudo&nbsp;vim&nbsp;/home/xiaozhe/svn/mypro/hooks/post-commit</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：编辑完成post-commit后，执行：$&nbsp;sudo&nbsp;chmod&nbsp;755&nbsp;post-commit</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">内容：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#!/bin/sh</span><br />\r\n<span style="font-size:14px;"> export&nbsp;LANG=zh_CN.UTF-8</span><br />\r\n<span style="font-size:14px;"> sudo&nbsp;/usr/bin/svn&nbsp;update&nbsp;/var/www/myblog&nbsp;--username&nbsp;xiaozhe&nbsp;--password&nbsp;xiaozhe</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或更加复杂的同步更新</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#Set&nbsp;variable</span><br />\r\n<span style="font-size:14px;"> SVN=/usr/bin/svn</span><br />\r\n<span style="font-size:14px;"> WEB=/home/test_nokia/</span><br />\r\n<span style="font-size:14px;"> RSYNC=/usr/bin/rsync</span><br />\r\n<span style="font-size:14px;"> LOG=/tmp/rsync_test_nokia.log</span><br />\r\n<span style="font-size:14px;"> WEBIP="192.168.0.23"</span><br />\r\n<span style="font-size:14px;"> export&nbsp;LANG=en_US.UTF-8</span><br />\r\n<span style="font-size:14px;"> &nbsp;</span><br />\r\n<span style="font-size:14px;"> #update&nbsp;the&nbsp;code&nbsp;from&nbsp;the&nbsp;SVN</span><br />\r\n<span style="font-size:14px;"> $SVN&nbsp;update&nbsp;$WEB&nbsp;--username&nbsp;user&nbsp;--password&nbsp;&nbsp;password</span><br />\r\n<span style="font-size:14px;"> #If&nbsp;the&nbsp;previous&nbsp;command&nbsp;completed&nbsp;successfully,&nbsp;to&nbsp;continue&nbsp;the&nbsp;following</span><br />\r\n<span style="font-size:14px;"> if&nbsp;[&nbsp;$?&nbsp;==&nbsp;0&nbsp;]</span><br />\r\n<span style="font-size:14px;"> then</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;""&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&gt;&nbsp;$LOG</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;`date`&nbsp;&gt;&gt;&nbsp;$LOG</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"##############################"&nbsp;&gt;&gt;&nbsp;$LOG</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;chown&nbsp;-R&nbsp;nobody:nobody&nbsp;/home/test_nokia/</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#Synchronization&nbsp;code&nbsp;from&nbsp;the&nbsp;SVN&nbsp;server&nbsp;to&nbsp;the&nbsp;WEB&nbsp;server,&nbsp;notes:by&nbsp;the&nbsp;key</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;$RSYNC&nbsp;-vaztpH&nbsp;&nbsp;--timeout=90&nbsp;&nbsp;&nbsp;--exclude-from=/home/svn/exclude.list&nbsp;$WEB&nbsp;root@$WEBIP:/www/&nbsp;&gt;&gt;&nbsp;$LOG</span><br />\r\n<span style="font-size:14px;"> fi</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 以上是具体的post-commit程序</span><br />\r\n<span style="font-size:14px;"> 注意事项：</span><br />\r\n<span style="font-size:14px;"> 1、一定要定义变量，主要是用过的命令的路径。因为SVN的考虑的安全问题，没有调用系统变量，如果手动执行是没有问题，但SVN自动执行就会无法执行了。</span><br />\r\n<span style="font-size:14px;"> 2、SVN&nbsp;update&nbsp;之前一定要先手动checkout一份出来，还有这里一定要添加用户和密码如果只是手动一样会更新，但自动一样的不行。</span><br />\r\n<span style="font-size:14px;"> 3、加上了对前一个命令的判断，如果update的时候出了问题，程序没有退出的话还会继续同步代码到WEB服务器上，这样会造成代码有问题</span><br />\r\n<span style="font-size:14px;"> 4、记得要设置所属用户，因为rsync可以同步文件属性，而且我们的WEB服务器一般都不是root用户，用户不正确会造成WEB程序无法正常工作。</span><br />\r\n<span style="font-size:14px;"> 5、建议最好记录日志，出错的时候可以很快的排错</span><br />\r\n<span style="font-size:14px;"> 6、最后最关键的数据同步，rsync的相关参数一定要清楚，这个就不说了。注意几个场景：</span><br />\r\n<span style="font-size:14px;"> 这里的环境是SVN服务器与WEB服务器是开的</span><br />\r\n<span style="font-size:14px;"> 把SVN服务器定义为源服务器&nbsp;WEB服务器为目的服务器</span><br />\r\n<span style="font-size:14px;"> 场景一、如果目的WEB服务器为综合的混杂的，像只有一个WEB静态资源，用户提交的，自动生成的都在WEB的一个目录下，建议不要用–delete这个参数</span><br />\r\n<span style="font-size:14px;"> 上面这个程序就是这样，实现的是源服务器到目的服务器的更新和添加，而没有删除操作，WEB服务器的内容会多于源SVN的服务器的</span><br />\r\n<span style="font-size:14px;"> 场景二、实现镜像，即目的WEB服务器与源SVN服务器一样的数据，SVN上任何变化WEB上一样的变化，就需要–delete参数</span><br />\r\n<span style="font-size:14px;"> 场景三、不需要同步某些子目录，可能有些目录是缓存的临时垃圾目录，或者是专用的图片目录（而不是样式或者排版的）要用exclude这个参数</span><br />\r\n<span style="font-size:14px;"> 注意：这个参数的使用不用写绝对路径，只要目录名称就行&nbsp;aa代表文件&nbsp;aa/&nbsp;代表目录&nbsp;，缺点就是如果有多个子目录都是一样的名称那么这些名称就都不会被同步</span><br />\r\n<span style="font-size:14px;"> 建议用–exclude-from=/home/svn/exclude.list&nbsp;用文件的形式可以方便的添加和删除</span><br />\r\n<span style="font-size:14px;"> exclude.list</span><br />\r\n<br />\r\n<span style="font-size:14px;"> .svn/</span><br />\r\n<span style="font-size:14px;"> .DS_Store</span><br />\r\n<span style="font-size:14px;"> images/</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 利用SVN的钩子还可以写出很多的程序来控制SVN&nbsp;如代码提交前查看是否有写日志，是否有tab，有将换成空格，是否有不允许上传的文件，是否有超过限制大小的文件等等。</span>\r\n</p>', 10, 'ubuntu,svn,linux', 1, 0, 1, '2013-03-10 11:54:05');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(169, 'Ubuntu下CoreSeek搜索系统建立指南PHP+MySQL', '<p>\r\n	<span style="font-size:14px;">第一步：安装</span><br />\r\n<span style="font-size:14px;"> 　　安装coreseek请参考：</span><a href="http://www.coreseek.cn/products-install/"><span style="font-size:14px;">BSD、Linux、Windows系统安装测试说明文档</span></a><span style="font-size:14px;">；</span><br />\r\n<span style="font-size:14px;"> 　　安装后，请确保安装测试说明文档中的各项测试都可以通过，以便coreseek做好准备，为你服务！</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 第二步：配置：</span><br />\r\n<span style="font-size:14px;"> 　　在BSD/Linux安装包的testpack/etc目录下，放置了演示的配置文件；</span><br />\r\n<span style="font-size:14px;"> 　　在Windows安装包的etc目录下，也放置了演示的配置文件；</span><br />\r\n<span style="font-size:14px;"> 　　如果是mysql数据库，可以将csft_mysql.conf拷贝为自己的配置文件，然后进行修改！其他数据库可以参考python数据源；</span><br />\r\n<span style="font-size:14px;"> 　　要查看配置的细节，可以访问</span><a href="http://www.coreseek.cn/products-install/#docs"><span style="font-size:14px;">Coreseek/Sphinx(0.9)中文手册</span></a><span style="font-size:14px;">了解详情和具体的配置参数。</span><br />\r\n<span style="font-size:14px;"> 　　配置文件的核心，为source和index配置，两者是成对出现的；如果需要设置针对多种情况或者多个数据表的索引，则可针对每一个编写对应的source和index配置；</span><br />\r\n<span style="font-size:14px;"> 　　source表示从何处取得原始数据，也就是数据源；index表示取得数据后如何索引；</span><br />\r\n<span style="font-size:14px;"> 　　source配置中，请确保可以使用给出的数据库服务器地址、用户、密码连接到对应的数据库，执行获取数据的SQL语句可以得到数据；否则coreseek无法得到数据，也就无法提供服务了。</span><br />\r\n<span style="font-size:14px;"> 　　一般情况下，sql_query给出读取数据的SQL语句，第一列为自增的ID字段，然后可以包括字符串字段，整数数值字段；整数数值字段需要在后面使用sql_attr_uint明确标注，有多个则分别标注即可。&nbsp;</span><br />\r\n<span style="font-size:14px;"> 　　index配置中，需要注意修改path参数，确保不与其他的搜索服务发生冲突；最后的search的配置中，也要修改对应的路径参数和端口参数，以防止冲突发生；</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">第三步：测试</span><br />\r\n<span style="font-size:14px;"> 　　首先，索引：使用bin目录下的indexer，执行：indexer&nbsp;-c&nbsp;配置文件的路径&nbsp;index名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#&nbsp;/usr/local/coreseek/bin/indexer&nbsp;-c&nbsp;etc/csft.conf&nbsp;--all&nbsp;&nbsp;&nbsp;&nbsp;##--all表示全部索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##Windows下面为bin\\indexer&nbsp;-c&nbsp;etc\\csft.conf&nbsp;--all</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##以下为正常索引全部数据时的提示信息：部分数据信息根据实际数据情况变化</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Coreseek&nbsp;Fulltext&nbsp;3.2&nbsp;[&nbsp;Sphinx&nbsp;0.9.9-release&nbsp;(r2117)]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2007-2010,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Beijing&nbsp;Choice&nbsp;Software&nbsp;Technologies&nbsp;Inc&nbsp;(http://www.coreseek.com)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;config&nbsp;file&nbsp;''etc/csft.conf''...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;indexing&nbsp;index&nbsp;''索引名称''...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;collected&nbsp;3&nbsp;docs,&nbsp;0.0&nbsp;MB</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;sorted&nbsp;0.0&nbsp;Mhits,&nbsp;100.0%&nbsp;done</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;total&nbsp;3&nbsp;docs,&nbsp;7585&nbsp;bytes</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;total&nbsp;0.075&nbsp;sec,&nbsp;101043&nbsp;bytes/sec,&nbsp;39.96&nbsp;docs/sec</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;total&nbsp;2&nbsp;reads,&nbsp;0.000&nbsp;sec,&nbsp;5.6&nbsp;kb/call&nbsp;avg,&nbsp;0.0&nbsp;msec/call&nbsp;avg</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;total&nbsp;7&nbsp;writes,&nbsp;0.000&nbsp;sec,&nbsp;3.9&nbsp;kb/call&nbsp;avg,&nbsp;0.0&nbsp;msec/call&nbsp;avg</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果出现以上对应的提示，则表示配置正确，可以正常索引;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　随后，启动搜索：使用bin目录下的searchd，执行：searchd&nbsp;-c&nbsp;配置文件的路径&nbsp;--console</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#&nbsp;/usr/local/coreseek/bin/searchd&nbsp;-c&nbsp;etc/csft.conf&nbsp;--console</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##Windows下面为bin\\searchd&nbsp;-c&nbsp;etc\\csft.conf&nbsp;--console</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##以下为正常开启搜索服务时的提示信息：其中的port可以在配置文件中修改</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Coreseek&nbsp;Fulltext&nbsp;3.2&nbsp;[&nbsp;Sphinx&nbsp;0.9.9-release&nbsp;(r2117)]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2007-2010,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Beijing&nbsp;Choice&nbsp;Software&nbsp;Technologies&nbsp;Inc&nbsp;(http://www.coreseek.com)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;config&nbsp;file&nbsp;''etc/csft.conf''...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;listening&nbsp;on&nbsp;all&nbsp;interfaces,&nbsp;port=9312</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　如要继续测试搜索功能，请不要停止searchd，否则其他程序将无法连接到搜索服务端</span><br />\r\n<span style="font-size:14px;"> 　　BSD/Linux环境下，测试成功后：</span><br />\r\n<span style="font-size:14px;"> 　　　　如要后台运行服务，则使用：searchd&nbsp;-c&nbsp;配置文件的路径，将searchd作为后台服务运行；</span><br />\r\n<span style="font-size:14px;"> 　　　　如果要停止后台服务，则使用：searchd&nbsp;-c&nbsp;配置文件的路径&nbsp;--stop；</span><br />\r\n<span style="font-size:14px;"> 　　　　如果要更新后台服务的索引，则使用：indexer&nbsp;-c&nbsp;配置文件的路径&nbsp;index名称</span><br />\r\n<span style="font-size:14px;"> 　　然后，可以参考</span><a href="http://www.coreseek.cn/products-install/"><span style="font-size:14px;">安装测试说明文档</span></a><span style="font-size:14px;">使用bin目录下的search进行测试，检查搜索是否可以正常进行；</span><a></a><br />\r\n<br />\r\n<span style="font-size:14px;"> 　　如果要将搜索结果应用到自己的程序之中，请使用api目录下对应的api接口测试。PHP接口的测试如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//注意文件的编码格式需要保存为为UTF-8格式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">require&nbsp;(&nbsp;"sphinxapi.php"&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cl&nbsp;=&nbsp;new&nbsp;SphinxClient&nbsp;();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cl-&gt;SetServer&nbsp;(&nbsp;''127.0.0.1'',&nbsp;9312);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//以下设置用于返回数组形式的结果</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cl-&gt;SetArrayResult&nbsp;(&nbsp;true&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//取从头开始的前20条数据，0,20类似SQl语句的LIMIT&nbsp;0,20</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cl-&gt;SetLimits(0,20);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//在做索引时，没有进行&nbsp;sql_attr_类型&nbsp;设置的字段，可以作为“搜索字符串”，进行全文搜索</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$res&nbsp;=&nbsp;$cl-&gt;Query&nbsp;(&nbsp;''搜索字符串'',&nbsp;"*"&nbsp;);&nbsp;&nbsp;&nbsp;&nbsp;//"*"表示在所有索引里面同时搜索，"索引名称（例如test或者test,test2）"则表示搜索指定的</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//如果需要搜索指定全文字段的内容，可以使用</span><a href="http://www.coreseek.cn/docs/coreseek_3.2-sphinx_0.9.9.html#extended-syntax"><span style="font-size:14px;">扩展匹配模式</span></a><span style="font-size:14px;">：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//$cl-&gt;SetMatchMode(SPH_MATCH_EXTENDED);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//$res=cl-&gt;Query(&nbsp;''@title&nbsp;(测试)''&nbsp;,&nbsp;"*");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//$res=cl-&gt;Query(&nbsp;''@title&nbsp;(测试)&nbsp;@content&nbsp;(''网络'')''&nbsp;,&nbsp;"*");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">echo&nbsp;''</span>\r\n</p>\r\n<span style="font-size:14px;">'';print_r($res[''matches'']);print_r($res);print_r($cl-&gt;GetLastError());print_r($cl-&gt;GetLastWarning());echo&nbsp;'''';</span>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 　　返回结果之中（可见本页面最后的”搜索结果示例“），将包含match和word部分，match部分表示搜索到的结果，word部分表示搜索字符串的切分结果，total表示搜索到的结果总数；</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 　　如果total为0，可以print_r($cl)查看搜索服务器是否返回了错误提示信息，或者检查搜索字符串是否真的可以匹配信息。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 　　match之中，包含了获取到的数据的ID信息，以及所包含的整数字段的属性信息，根据ID信息，可以从数据库之中，取到对应的原始数据的信息，以供页面显示或者其他程序使用；&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MySQL读取示例：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">SELECT&nbsp;*&nbsp;FROM&nbsp;数据表&nbsp;WHERE&nbsp;ID&nbsp;IN(id1,id2,id3...,idn)&nbsp;ORDER&nbsp;BY&nbsp;FIND_IN_SET(ID,"id1,id2,id3...,idn")</span><br />\r\n<br />\r\n<br />\r\n<span style="font-size:14px;"> 　　具体的搜索API，还包括排序、过滤等，可以访问</span><a href="http://www.coreseek.cn/products-install/#docs"><span style="font-size:14px;">Coreseek/Sphinx(0.9)中文手册</span></a><span style="font-size:14px;">了解API详情和具体的使用方式。&nbsp;</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 　　然后，你就可以在你的其他用用之中，包含以上的代码，并根据自己的需要，将用户或者其他代码传递的参数应用到搜索上面来，并根据返回的结果获取对应的数据进行显示或者处理！&nbsp;</span>\r\n</p>', 10, 'coreseek,ubuntu,linux', 1, 0, 1, '2013-03-10 11:55:25'),
(170, 'Ubuntu下安装CoreSeek', '<p>\r\n	<span style="font-size:14px;">ubuntu-10.04的安装环境</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">coreseek安装需要预装的软件：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">shell&gt;apt-get&nbsp;install&nbsp;make&nbsp;gcc&nbsp;g++&nbsp;automake&nbsp;libtool&nbsp;m4&nbsp;autoconf&nbsp;mysql-client&nbsp;libmysqlclient15-dev&nbsp;libxml2-dev&nbsp;libexpat1-dev</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一、基础安装：（此时尚不支持MySQL，完成第二步数据源支持后就支持）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;wget&nbsp;</span><a href="http://www.coreseek.cn/news/7/101/"><span style="font-size:14px;">www.coreseek.cn/uploads/csft/3.2/coreseek-3.2.14.tar.gz</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;tar&nbsp;-xzvf&nbsp;coreseek-3.2.14.tar.gz</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##切换到root用户，确保拥有完整的权限来安装软件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;su&nbsp;root</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;cd&nbsp;coreseek-3.2.14</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##中文测试环境检查：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;&nbsp;locale</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##以下为核心项，locale为zh_CN.UTF-8，就可以正常显示和输入中文；</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##如果不能正常显示中文，则后面的中文测试部分无法正常进行，但不会影响coreseek的实际功能；</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">LANG=zh_CN.UTF-8</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">LC_ALL="zh_CN.UTF-8"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##确保可以正常显示，否则请检查当前环境的locale配置，以及当前环境或者客户端已设置好支持UTF-8中文字符显示</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;cat&nbsp;testpack/var/test/test.xml</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##安装coreseek开发的mmseg，为coreseek提供中文分词功能</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;cd&nbsp;mmseg-3.2.14</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##ubuntu环境下，需要使用ACLOCAL_FLAGS="-I&nbsp;/usr/share/aclocal"&nbsp;./bootstrap</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./bootstrap</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./configure&nbsp;--prefix=/usr/local/mmseg3</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;make&nbsp;&amp;&amp;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##如果提示libtool:&nbsp;unrecognized&nbsp;option&nbsp;`--tag=CC''&nbsp;，请查看</span><a href="http://www.coreseek.cn/products-install/faq/#qa24"><span style="font-size:14px;">libtool问题解决方案</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##安装完成后，mmseg使用的词典和配置文件，将自动安装到/usr/local/mmseg3/etc中</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##中文分词测试，显示不正常，请检查当前环境下的locale和UTF-8中文字符显示设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;&nbsp;/usr/local/mmseg3/bin/mmseg&nbsp;-d&nbsp;/usr/local/mmseg3/etc&nbsp;src/t1.txt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;中文/x&nbsp;分/x&nbsp;词/x&nbsp;测试/x&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;中国人/x&nbsp;上海市/x&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Word&nbsp;Splite&nbsp;took:&nbsp;1&nbsp;ms.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##安装coreseek：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;cd&nbsp;csft-3.2.14</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##执行configure，进行编译配置：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;sh&nbsp;buildconf.sh</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./configure&nbsp;--prefix=/usr/local/coreseek&nbsp;--without-python&nbsp;--without-unixodbc&nbsp;--with-mmseg&nbsp;--with-mmseg-includes=/usr/local/mmseg3/include/mmseg/&nbsp;--with-mmseg-libs=/usr/local/mmseg3/lib/&nbsp;--without-mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##注意，如果是coreseek4.x/sphinx1.x版本，请将--without-mysql更改为--with-mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;make&nbsp;&amp;&amp;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##配置测试，测试是否可以正确运行</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;/usr/local/coreseek/bin/indexer&nbsp;-c&nbsp;/usr/local/coreseek/etc/sphinx-min.conf.dist</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##以下为正常测试时的提示信息：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Coreseek&nbsp;Fulltext&nbsp;3.2&nbsp;[&nbsp;Sphinx&nbsp;0.9.9-release&nbsp;(r2117)]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2007-2010,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Beijing&nbsp;Choice&nbsp;Software&nbsp;Technologies&nbsp;Inc&nbsp;(http://www.coreseek.com)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;config&nbsp;file&nbsp;''/usr/local/coreseek/etc/sphinx-min.conf.dist''...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;total&nbsp;0&nbsp;reads,&nbsp;0.000&nbsp;sec,&nbsp;0.0&nbsp;kb/call&nbsp;avg,&nbsp;0.0&nbsp;msec/call&nbsp;avg</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;total&nbsp;0&nbsp;writes,&nbsp;0.000&nbsp;sec,&nbsp;0.0&nbsp;kb/call&nbsp;avg,&nbsp;0.0&nbsp;msec/call&nbsp;avg</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##csft-4.0版显示：ERROR:&nbsp;nothing&nbsp;to&nbsp;do.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##至此，coreseek基础环境可以正常安装，我们可以开始后续的工作啦。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##注意：基础环境仅支持xml数据源；如需要mysql或者python数据源，请继续按照下面的步骤操作！！！</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二、数据源支持：支持MySQL数据源</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##ubuntu9/10:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;apt-get&nbsp;install&nbsp;mysql-client&nbsp;libmysqlclient15-dev&nbsp;&nbsp;&nbsp;libxml2-dev&nbsp;libexpat1-dev</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##重新编译安装coreseek，以支持mysql数据源和xml数据源</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;cd&nbsp;csft-3.2.14</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;make&nbsp;clean</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./configure&nbsp;--prefix=/usr/local/coreseek&nbsp;&nbsp;--without-unixodbc&nbsp;--with-mmseg&nbsp;--with-mmseg-includes=/usr/local/mmseg3/include/mmseg/&nbsp;--with-mmseg-libs=/usr/local/mmseg3/lib/&nbsp;--with-mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;make&nbsp;&amp;&amp;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##如果出现错误提示：“ERROR:&nbsp;cannot&nbsp;find&nbsp;MySQL&nbsp;include&nbsp;files.......To&nbsp;disable&nbsp;MySQL&nbsp;support,&nbsp;use&nbsp;--without-mysql&nbsp;option.“，可按照如下方法处理：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##请找到头文件mysql.h所在的目录，一般是/usr/local/mysql/include，请替换为实际的</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##请找到库文件libmysqlclient.a所在的目录，一般是/usr/local/mysql/lib，请替换为实际的</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##configure参数加上：--with-mysql-includes=/usr/local/mysql/include&nbsp;--with-mysql-libs=/usr/local/mysql/lib，执行后，重新编译安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">三、coreseek中文全文检索测试</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;cd&nbsp;testpack</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;&nbsp;/usr/local/coreseek/bin/indexer&nbsp;-c&nbsp;etc/csft.conf&nbsp;--all</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##正常索引全部数据：（csft-4.0版类似）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;/usr/local/coreseek/bin/search&nbsp;-c&nbsp;etc/csft.conf&nbsp;-a&nbsp;服务</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##以下为正常测试搜索关键词"服务"的数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Coreseek&nbsp;Fulltext&nbsp;3.2&nbsp;[&nbsp;Sphinx&nbsp;0.9.9-release&nbsp;(r2117)]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Copyright&nbsp;(c)&nbsp;2007-2011,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Beijing&nbsp;Choice&nbsp;Software&nbsp;Technologies&nbsp;Inc&nbsp;(http://www.coreseek.com)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;using&nbsp;config&nbsp;file&nbsp;''etc/csft.conf''...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index&nbsp;''xml'':&nbsp;query&nbsp;''服务&nbsp;'':&nbsp;returned&nbsp;1&nbsp;matches&nbsp;of&nbsp;1&nbsp;total&nbsp;in&nbsp;0.015&nbsp;sec</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">displaying&nbsp;matches:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.&nbsp;document=3,&nbsp;weight=1,&nbsp;published=Wed&nbsp;Mar&nbsp;31&nbsp;21:01:00&nbsp;2010,&nbsp;author_id=2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">words:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.&nbsp;''服务'':&nbsp;1&nbsp;documents,&nbsp;1&nbsp;hits</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;&nbsp;/usr/local/coreseek/bin/searchd&nbsp;-c&nbsp;etc/csft.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##以下为正常开启搜索服务时的提示信息：（csft-4.0版类似）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Coreseek&nbsp;Fulltext&nbsp;3.2&nbsp;[&nbsp;Sphinx&nbsp;0.9.9-release&nbsp;(r2117)]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Copyright&nbsp;(c)&nbsp;2007-2010,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Beijing&nbsp;Choice&nbsp;Software&nbsp;Technologies&nbsp;Inc&nbsp;(http://www.coreseek.com)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;config&nbsp;file&nbsp;''etc/csft.conf''...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;listening&nbsp;on&nbsp;all&nbsp;interfaces,&nbsp;port=9312</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##如要停止搜索服务，/usr/local/coreseek/bin/searchd&nbsp;-c&nbsp;etc/csft.conf&nbsp;--stop</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##如要已启动服务，要更新索引，/usr/local/coreseek/bin/indexer&nbsp;-c&nbsp;etc/csft.conf&nbsp;--all&nbsp;--rotate</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">##然后，请参考csft-3.2.14下api目录中的相关文件，使用PHP、Python、Ruby、Java来测试搜索服务；也可以前往&lt;&nbsp;a&nbsp;href="/products-install/step_by_step/"&gt;搜索服务建立三步曲，查看第三步使用PHP测试。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	<p>\r\n		<span style="font-size:14px;">源码包内容说明：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">目录说明：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">csft-x.y.z：coreseek源代码</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">mmseg-i.j.k：mmseg源代码</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">testpack：测试配置和数据包</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">testpack测试说明：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">目录说明：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">api：api接口和测试脚本</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">etc：配置文件</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">etc/pysource：python数据源脚本</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">var：运行数据</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">var/data：索引文件</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">var/log：搜索日志</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">var/test：测试源数据</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">csft&nbsp;通用测试：（3.2.x与4.x均支持）</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">配置1：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试对象：xml数据源，中文分词与搜索</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;对应配置：etc/csft.conf</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试数据：var/test/test.xml</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;PHP程序：api/test_coreseek.php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;在线说明：</span><a href="http://www.coreseek.cn/products-install/install_on_bsd_linux/"><span style="font-size:14px;">http://www.coreseek.cn/products-install/install_on_bsd_linux/</span></a>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">配置2：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试对象：xml数据源，单字切分与搜索</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;对应配置：etc/csft_cjk.conf</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试数据：var/test/test.xml</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;PHP程序：api/test_coreseek.php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;在线说明：</span><a href="http://www.coreseek.cn/products-install/ngram_len_cjk/"><span style="font-size:14px;">http://www.coreseek.cn/products-install/ngram_len_cjk/</span></a>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">配置3：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试对象：mysql数据源，中文分词与搜索</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;对应配置：etc/csft_mysql.conf</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试数据：var/test/documents.sql</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;PHP程序：api/test_coreseek.php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试说明：请先将测试数据导入数据库，并设置好配置文件中的MySQL用户密码数据库</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;在线说明：</span><a href="http://www.coreseek.cn/products-install/mysql/"><span style="font-size:14px;">http://www.coreseek.cn/products-install/mysql/</span></a>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">配置4：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试对象：python数据源，中文分词与搜索</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;对应配置：etc/csft_demo_python.conf</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;数据脚本：etc/pysource/csft_demo/__init__.py</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;PHP程序：api/test_coreseek.php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试说明：请先安装Python&nbsp;2.6&nbsp;(x86)</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;在线说明：</span><a href="http://www.coreseek.cn/products-install/python/"><span style="font-size:14px;">http://www.coreseek.cn/products-install/python/</span></a>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">配置5：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试对象：python+mssql数据源，中文分词与搜索</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;对应配置：etc/csft_demo_python_pymssql.conf</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;数据脚本：etc/pysource/csft_demo_pymssql/__init__.py</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;PHP程序：api/test_coreseek.php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试说明：请先安装Python&nbsp;2.6&nbsp;(x86)、pymssql（py2.6）</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;在线说明：</span><a href="http://www.coreseek.cn/products-install/python/"><span style="font-size:14px;">http://www.coreseek.cn/products-install/python/</span></a>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">coreseek-4.y.z&nbsp;新增测试：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">配置6：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试对象：RT实时索引，中文分词与搜索</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;对应配置：etc/csft_rtindex.conf</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;PHP程序：api/test_coreseek_rtindex.php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;在线说明：</span><a href="http://www.coreseek.cn/products-install/rt-indexes/"><span style="font-size:14px;">http://www.coreseek.cn/products-install/rt-indexes/</span></a>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">配置7：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;测试对象：RT实时索引，单字切分与搜索</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;对应配置：etc/csft_rtindex_cjk.conf</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;PHP程序：api/test_coreseek_rtindex.php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;在线说明：</span><a href="http://www.coreseek.cn/products-install/rt-indexes/"><span style="font-size:14px;">http://www.coreseek.cn/products-install/rt-indexes/</span></a>\r\n	</p>\r\n</div>', 10, 'coreseek,ubuntu,linux', 1, 0, 1, '2013-03-10 11:55:53'),
(171, 'Coreseek支持中文utf8全文检索', '<p style="text-align:left;">\r\n	<span style="font-size:14px;">第一步：操作在source里面</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">Coreseek-3.2.14与4.0.1更新</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">http://www.coreseek.cn/news/12/99/</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">增加sql_query_info_pre指令：</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#索引数据前，设置正确的字符集</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">sql_query_pre&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;SET&nbsp;NAMES&nbsp;utf8</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#查询数据库，获取需要索引的数据</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">sql_query&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;SELECT&nbsp;id,title&nbsp;FROM&nbsp;documents</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">......</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#命令行查询时，设置正确的字符集</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">sql_query_info_pre&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;SET&nbsp;NAMES&nbsp;utf8</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#命令行查询时，从数据库读取原始数据信息</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">sql_query_info&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;SELECT&nbsp;*&nbsp;FROM&nbsp;documents&nbsp;WHERE&nbsp;id=$id</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">第二步：操作在index里面</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">coreseek默认安装时，即csft.conf中的charset_type&nbsp;=&nbsp;sbcs。进行中文搜索的时候会失败或者乱码。因为sbcs的定义是“Single&nbsp;Byte(单字节)。Character&nbsp;Set&nbsp;单字节字符集”，这样是不符合我们的需求的，所以我们需要中文的utf-8。根据文档中的描述，charset_type&nbsp;的另一个选项是utf-8，但实际上这对于中文是不行的。</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">1.首先复制mmseg源代码中的data文件夹到你的mmseg的安装目录中，可以不这么做，但是data目录必须有。</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#&nbsp;cp&nbsp;-R&nbsp;mmseg-3.1/data/&nbsp;&nbsp;/usr/local/mmseg/&nbsp;&nbsp;(这里可以根据你的情况设定具体的路径)</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">2.然后进入刚才的路径，生成字典文件</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#cd&nbsp;/usr/local/mmseg/data</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#&nbsp;/usr/local/mmseg/bin/mmseg&nbsp;-u&nbsp;unigram.txt</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">会生成一个unigram.txt.uni文件，将这个文件改名或者复制为uni.lib在当前文件夹</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#&nbsp;cp&nbsp;unigram.txt.uni&nbsp;uni.lib</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">3.现在修改csft.conf文件</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#&nbsp;vi&nbsp;/usr/local/coreseek/etc/sphinx.conf</span>\r\n</p>\r\n<p>\r\n	<div style="text-align:left;">\r\n		<span style="line-height:1.5;font-size:14px;">查找charset_type并修改为：</span>\r\n	</div>\r\n	<div style="text-align:left;">\r\n		<span style="line-height:1.5;font-size:14px;">charset_type&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;zh_cn.utf-8</span>\r\n	</div>\r\n	<div style="text-align:left;">\r\n		<span style="line-height:1.5;font-size:14px;">同时添加一行：</span>\r\n	</div>\r\n	<div style="text-align:left;">\r\n		<span style="line-height:1.5;font-size:14px;">charset_dictpath&nbsp;&nbsp;=&nbsp;/usr/local/mmseg/data</span>\r\n	</div>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">现在向默认的mysql数据库中插入一条中文信息。注意需要utf8_general_ci编码。</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">4.重建索引</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">/usr/local/coreseek/bin/indexer&nbsp;--config&nbsp;/usr/local/coreseek/etc/sphinx.conf&nbsp;test1&nbsp;--rotate</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">a.--rotate参数可以在不停searchd的情况下索引，不然会提示错误</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">b.如果出现&nbsp;cannot&nbsp;open&nbsp;/usr/local/mmseg/data/mmseg.ini&nbsp;错误</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">解决办法</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">#vi&nbsp;/usr/local/coreseek/data/dict/mmseg.ini</span>\r\n</p>\r\n<p style="text-align:left;">\r\n	<span style="font-size:14px;">输入以下</span>\r\n</p>\r\n<p>\r\n	<div style="text-align:left;">\r\n		<span style="line-height:1.5;font-size:14px;">[mmseg]</span>\r\n	</div>\r\n	<div style="text-align:left;">\r\n		<span style="line-height:1.5;font-size:14px;">merge_number_and_ascii=1;</span>\r\n	</div>\r\n	<div style="text-align:left;">\r\n		<span style="line-height:1.5;font-size:14px;">number_and_ascii_joint=-;</span>\r\n	</div>\r\n	<div style="text-align:left;">\r\n		<span style="line-height:1.5;font-size:14px;">compress_space=0;</span>\r\n	</div>\r\n	<div style="text-align:left;">\r\n		<span style="line-height:1.5;font-size:14px;">seperate_number_ascii=1;</span>\r\n	</div>\r\n</p>', 10, 'coreseek,ubuntu,linux', 1, 0, 1, '2013-03-10 11:56:41'),
(172, 'ubuntu apt-get 安装的程序', '<p>\r\n	<span style="font-size:14px;">安装包下载到 \\var\\cache\\apt\\archives 。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看安装的一些路径：dpkg -L 包名 这里的包名是你用apt-get安装时的名称，不是文件名</span>\r\n</p>', 10, 'ubuntu,linux', 1, 0, 1, '2013-03-10 11:58:22'),
(173, 'Mysql：bit类型的查询与插入', '<p>\r\n	<span style="font-size:14px;">Mysql关于bit类型的用法：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">位字段值</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用b''value''符号写位字段值。value是一个用0和1写成的二进制值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">位字段符号可以方便指定分配给BIT列的值：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;CREATE TABLE test (id BIT(8));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;INSERT INTO test VALUES(2)</span><br />\r\n<span style="font-size:14px;"> mysql&gt;&nbsp;INSERT INTO test VALUES(5)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;SELECT * FROM test</span>\r\n</p>\r\n<span style="font-size:14px;">id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> ---------&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> b''10''&nbsp;</span><br />\r\n<span style="font-size:14px;"> b''101''&nbsp;</span><br />\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql：bit类型的查询与插入</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql有种字段类型是bit。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如何查询呢？</span><br />\r\n<span style="font-size:14px;"> mysql&gt; select * from test;</span><br />\r\n<span style="font-size:14px;"> id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> ---------&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> b''10''&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> b''101''&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt; select id+0 from test;&nbsp;&nbsp;&nbsp;&nbsp;//这是可以看到十进制的</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;id+0&nbsp;</span><br />\r\n<span style="font-size:14px;"> --------</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5</span><br />\r\n<span style="font-size:14px;"> 2 rows in set (0.00 sec)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt; select bin(id+0) from test;&nbsp;&nbsp;//这是可以看到二进制的</span><br />\r\n<span style="font-size:14px;"> bin(id+0)&nbsp;</span><br />\r\n<span style="font-size:14px;"> -----------&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 101&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 2 rows in set (0.00 sec)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt; select oct(id+0) from test; // 这是八进制的</span><br />\r\n<span style="font-size:14px;"> oct(id+0)&nbsp;</span><br />\r\n<span style="font-size:14px;"> -----------</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 2 rows in set (0.00 sec)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt; select hex(id+0) from test; //这是十六进制的</span><br />\r\n<span style="font-size:14px;"> hex(id+0)&nbsp;</span><br />\r\n<span style="font-size:14px;"> -----------</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 5&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 2 rows in set (0.00 sec)</span>\r\n</p>', 12, 'mysql', 1, 0, 1, '2013-03-10 11:59:16');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(174, 'Sphinx 在 windows 下安装使用', '<p>\r\n	<span style="font-size:14px;">前一阵子尝试使用了一下 Sphinx ，一个能够被各种语言 (PHP/Python/R y/etc) 方便调用的全文检索系统。网上的资料大多是在 linux 环境下的安装使用，当然，作为生产环境很有必要部署在 *nix 环境下，作为学习测试，还是 windows 环境比较方便些。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">本文旨在提供一种便捷的方式让 Sphinx 在 windows 下安装配置以支持中文全文检索，配置部分在 linux 下通用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一、关于 Sphinx</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Sphinx 是一个在 GPLv2 下发布的一个全文检索引擎，商业授权（例如 , 嵌入到其他程序中）需要联系作者（ Sphinxsearch.com ）以获得商业授权。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般而言， Sphinx 是一个独立的搜索引擎，意图为其他应用提供高速、低空间占用、高结果相关度的全文搜索功能。 Sphinx 可以非常容易的与 SQL 数据库和脚本语言集成。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当前系统内置 MySQL 和 PostgreSQL 数据库数据源的支持，也支持从标准输入读取特定格式的 XML 数据。通过修改源代码，用户可以自行增加新的数据源（例如：其他类型的 DBMS 的原生支持）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">搜索 API 支持 PHP 、 Python 、 Perl 、 R y 和 Java ，并且也可以用作 MySQL 存储引擎。搜索 API 非常简单，可以在若干个小时之 内移植到新的语言上。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Sphinx 特性：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">高速的建立索引 ( 在当代 CPU 上，峰值性能可达到 10MB/ 秒 );</span><br />\r\n<span style="font-size:14px;"> 高性能的搜索 ( 在 2–4GB 的文本数据上，平均每次检索响应时间小于 0.1 秒 );</span><br />\r\n<span style="font-size:14px;"> 可处理海量数据 ( 目前已知可以处理超过 100GB 的文本数据 , 在单一 CPU 的系统上可处理 100M 文档 );</span><br />\r\n<span style="font-size:14px;"> 提供了优秀的相关度算法，基于短语相似度和统计（ BM25 ）的复合 Ranking 方法 ;</span><br />\r\n<span style="font-size:14px;"> 支持分布式搜索 ;</span><br />\r\n<span style="font-size:14px;"> 提供文件的摘录生成 ;</span><br />\r\n<span style="font-size:14px;"> 可作为 MySQL 的存储引擎提供搜索服务 ;</span><br />\r\n<span style="font-size:14px;"> 支持布尔、短语、词语相似度等多种检索模式 ;</span><br />\r\n<span style="font-size:14px;"> 文档支持多个全文检索字段 ( 最大不超过 32 个 );</span><br />\r\n<span style="font-size:14px;"> 文档支持多个额外的属性信息 ( 例如：分组信息，时间戳等 );</span><br />\r\n<span style="font-size:14px;"> 停止词查询 ;</span><br />\r\n<span style="font-size:14px;"> 支持单一字节编码和 UTF-8 编码 ;</span><br />\r\n<span style="font-size:14px;"> 原生的 MySQL 支持 ( 同时支持 MyISAM 和 InnoDB);</span><br />\r\n<span style="font-size:14px;"> 原生的 PostgreSQL 支持 .</span><br />\r\n<span style="font-size:14px;"> 二、 Sphinx 在 windows 上的安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1. 直接在&nbsp;</span><a href="http://www.sphinxsearch.com/downloads.html"><span style="font-size:14px;">http://www.sphinxsearch.com/downloads.html</span></a><span style="font-size:14px;">&nbsp;找 到最新的 windows 版本，我这里下的是 Win32 release binaries with MySQL support ，下载后解压在 D:\\sphinx 目录下；</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2. 在 D:\\sphinx\\ 下新建一个 data 目录用来存放索引文件， 一个 log 目录方日志文件，复制 D:\\sphinx\\sphinx.conf.in 到 D:\\sphinx\\bin\\sphinx.conf （注意修改文件 名）；</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3. 修改 D:\\sphinx\\bin\\sphinx.conf ，我这里 列出需要修改的几个：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= mysql # 数据源，我这里是mysql</span><br />\r\n<span style="font-size:14px;"> sql_host&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= localhost # 数据库服务器</span><br />\r\n<span style="font-size:14px;"> sql_user&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= root # 数据库用户名</span><br />\r\n<span style="font-size:14px;"> sql_pass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= '''' # 数据库密码</span><br />\r\n<span style="font-size:14px;"> sql_db&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= test # 数据库</span><br />\r\n<span style="font-size:14px;"> sql_port&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 3306 # 数据库端口</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sql_qry_pre&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= SET NAMES utf8 # 去掉此行前面的注释，如果你的数据库是t8 编码的</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index test1</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> # 放索引的目录</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;path&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= D:/sphinx/data/</span><br />\r\n<span style="font-size:14px;"> # 编码</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;charset_type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= utf-8</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;#&nbsp;&nbsp;指定utf-8 的编码表</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;charset_table&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0..9, A..Z-&gt;a..z, _, a..z, U+410..U+42F-&gt;U+430..U+44F, U+430..U+44F</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;# 简单分词，只支持0 和1 ，如果要搜索中文，请指定为1</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;ngram_len&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1</span><br />\r\n<span style="font-size:14px;"> # 需要分词的字符，如果要搜索中文，去掉前面的注释</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;ngram_chars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= U+3000..U+2FA1F</span><br />\r\n<span style="font-size:14px;"> }</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;"># 搜索服务需要修改的部分</span><br />\r\n<span style="font-size:14px;"> searchd</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;# 日志</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;log&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= D:/sphinx/log/searchd.log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;"># PID file, searchd process ID file name</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;pid_file&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= D:/sphinx/log/searchd.pid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;"># windows 下启动searchd 服务一定要注释掉这个</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;# seamless_rotate&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1</span><br />\r\n<span style="font-size:14px;"> }</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4. 导入测试数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sql 文件在 D:/sphinx/example.sql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C:\\Program Files\\MySQL\\MySQL Server 5.0\\bin&gt;mysql -uroot test&lt;d:/sphinx/example.sql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5. 建立索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D:\\sphinx\\bin&gt;indexer.exe test1 ( 备注 :test1 为 sphinx.conf 的 index test1() )</span><br />\r\n<span style="font-size:14px;"> Sphinx 0.9.8-release (r1533)</span><br />\r\n<span style="font-size:14px;"> Copyright (c) 2001-2008, Andrew Aksyonoff</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">using config file ‘./sphinx.conf’…</span><br />\r\n<span style="font-size:14px;"> indexing index ‘test1′…</span><br />\r\n<span style="font-size:14px;"> collected 4 docs, 0.0 MB</span><br />\r\n<span style="font-size:14px;"> sorted 0.0 Mhits, 100.0% done</span><br />\r\n<span style="font-size:14px;"> total 4 docs, 193 bytes</span><br />\r\n<span style="font-size:14px;"> total 0.101 sec, 1916.30 bytes/sec, 39.72 docs/sec</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D:\\sphinx\\bin&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6. 搜索 ’test’ 试试</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D:\\sphinx\\bin&gt;search.exe test1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">显示结果如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">using config file ‘./sphinx.conf’…</span><br />\r\n<span style="font-size:14px;"> index ‘test1′: qry ‘test ‘: returned 3 matches of 3 total in 0.000 sec</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">displaying matches:</span><br />\r\n<span style="font-size:14px;"> 1. document=1, weight=2, group_id=1, date_added=Wed Nov 26 14:58:59 2008</span><br />\r\n<span style="font-size:14px;"> id=1</span><br />\r\n<span style="font-size:14px;"> group_id=1</span><br />\r\n<span style="font-size:14px;"> group_id2=5</span><br />\r\n<span style="font-size:14px;"> date_added=2008-11-26 14:58:59</span><br />\r\n<span style="font-size:14px;"> title=test one</span><br />\r\n<span style="font-size:14px;"> content=this is my test document number one. also checking search within</span><br />\r\n<span style="font-size:14px;"> phrases.</span><br />\r\n<span style="font-size:14px;"> 2. document=2, weight=2, group_id=1, date_added=Wed Nov 26 14:58:59 2008</span><br />\r\n<span style="font-size:14px;"> id=2</span><br />\r\n<span style="font-size:14px;"> group_id=1</span><br />\r\n<span style="font-size:14px;"> group_id2=6</span><br />\r\n<span style="font-size:14px;"> date_added=2008-11-26 14:58:59</span><br />\r\n<span style="font-size:14px;"> title=test two</span><br />\r\n<span style="font-size:14px;"> content=this is my test document number two</span><br />\r\n<span style="font-size:14px;"> 3. document=4, weight=1, group_id=2, date_added=Wed Nov 26 14:58:59 2008</span><br />\r\n<span style="font-size:14px;"> id=4</span><br />\r\n<span style="font-size:14px;"> group_id=2</span><br />\r\n<span style="font-size:14px;"> group_id2=8</span><br />\r\n<span style="font-size:14px;"> date_added=2008-11-26 14:58:59</span><br />\r\n<span style="font-size:14px;"> title=doc number four</span><br />\r\n<span style="font-size:14px;"> content=this is to test groups</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">words:</span><br />\r\n<span style="font-size:14px;"> 1. ‘test’: 3 documents, 5 hits</span><br />\r\n<span style="font-size:14px;"> D:\\sphinx\\bin&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6. 测试中文搜索</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改 test 数据库中 documents 数据表，</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">UPDATE `test`.`documents` SET `title` = ‘ 测试中文 ’, `content` = ‘this is my test document number two ，应该搜的到吧 ’ WHERE `documents`.`id` = 2;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">重建索引：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D:\\sphinx\\bin&gt;indexer.exe test1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">搜索 ’ 中文 ’ 试试：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D:\\sphinx\\bin&gt;search.exe 中文</span><br />\r\n<span style="font-size:14px;"> Sphinx 0.9.8-release (r1533)</span><br />\r\n<span style="font-size:14px;"> Copyright (c) 2001-2008, Andrew Aksyonoff</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">using config file ‘./sphinx.conf’…</span><br />\r\n<span style="font-size:14px;"> index ‘test1′: qry ‘ 中文 ‘: returned 0 matches of 0 total in 0.000 sec</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">words:</span><br />\r\n<span style="font-size:14px;"> D:\\sphinx\\bin&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">貌似没有搜到，这是因为 windows 命令行中的编码是 gbk ，当然搜不出来。我们可以用程序试试，在 D:\\sphinx\\api 下新建一个 foo.php 的文件，注意 utf-8 编码</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;?php</span><br />\r\n<span style="font-size:14px;"> require ’sphinxapi.php’;</span><br />\r\n<span style="font-size:14px;"> $s = new SphinxClient();</span><br />\r\n<span style="font-size:14px;"> $s-&gt;SetServer(’localhost’,9312);</span><br />\r\n<span style="font-size:14px;"> $result = $s-&gt;Qry(’ 中文 ’);</span><br />\r\n<span style="font-size:14px;"> var_dump($result);</span><br />\r\n<span style="font-size:14px;"> ?&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">启动 Sphinx searchd 服务</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D:\\sphinx\\bin&gt;searchd.exe</span><br />\r\n<span style="font-size:14px;"> Sphinx 0.9.8-release (r1533)</span><br />\r\n<span style="font-size:14px;"> Copyright (c) 2001-2008, Andrew Aksyonoff</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">WARNING: forcing –console mode on Windows</span><br />\r\n<span style="font-size:14px;"> using config file ‘./sphinx.conf’…</span><br />\r\n<span style="font-size:14px;"> creating server socket on 0.0.0.0:9312</span><br />\r\n<span style="font-size:14px;"> accepting connections</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">执行 PHP 查询：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">访问&nbsp;</span><a href="http://www.test.com/sphinx/api/foo.php"><span style="font-size:14px;">http://www.test.com/sphinx/api/foo.php</span></a><span style="font-size:14px;">&nbsp;( 自己配置的虚拟主机 )</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用 CORESEEK 分词</span><br />\r\n<span style="font-size:14px;"> 1 、下载&nbsp;</span><a href="http://www.coreseek.cn/news/5/89/"><span style="font-size:14px;">http://www.coreseek.cn/news/5/89/</span></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2 、安装系统依赖的软件包</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">系统的基础组件需要如下的软件包：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;- Active Python 2.5 (&nbsp;</span><a href="http://www.activestate.com/Prodts/activepython/"><span style="font-size:14px;">http://www.activestate.com/Prod ts/activepython/</span></a><span style="font-size:14px;">&nbsp;)</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;- MySQL_Python 1.2.2 (</span><a href="http://sourceforge.net/project/showfiles.php?group_id=22307"><span style="font-size:14px;">http://sourceforge.net/project/showfiles.php?group_id=22307</span></a><span style="font-size:14px;">&nbsp;） 验证 可以不装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装完前面两个组件后，系统可以运行，但是需要手工修改配置文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装配置界面需要的软件包：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">- gtk-dev 2.12.9 (</span><a href="http://sourceforge.net/project/showfiles.php?group_id=98754"><span style="font-size:14px;">http://sourceforge.net/project/showfiles.php?group_id=98754</span></a><span style="font-size:14px;">&nbsp;) 验证可以不装</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;- pycairo 1.4.12 (</span><a href="http://ftp.acc.umu.se/p/GNOME/binaries/win32/pycairo/1.4/"><span style="font-size:14px;">http://ftp.acc.umu.se/p /GNOME/binaries/win32/pycairo/1.4/</span></a><span style="font-size:14px;">&nbsp;)</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;- pygobject 2.14.1 (</span><a href="http://ftp.acc.umu.se/p/GNOME/binaries/win32/pygobject/2.14/"><span style="font-size:14px;">http://ftp.acc.umu.se/p /GNOME/binaries/win32/pygobject/2.14/</span></a><span style="font-size:14px;">&nbsp;)</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;- pygtk 2.12.1 (</span><a href="http://ftp.acc.umu.se/p/GNOME/binaries/win32/pygtk/2.12"><span style="font-size:14px;">http://ftp.acc.umu.se/p /GNOME/binaries/win32/pygtk/2.12</span></a><span style="font-size:14px;">&nbsp;) )</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果您下载的是完整版，前面提到的全部文件应该能在preq 子目录中找到。</span><br />\r\n<span style="font-size:14px;"> 安装前面提到的全部软件包（注意：必须先安装Python 和gtk)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意: 必须是Active Python ，Python 官方的版本缺少系统需要的Win32 扩展支持，将导致系统无法工作。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意： 完成本步后，必须重新启动您的计算机。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3 、解压 csft 到你认为的目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4 、csft 文件内配与 sphinx 的内容大致相同 ( 配置详细见:sphinx+mysql (1) , (2) )</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5 、创建词典文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">\\bin\\mmseg -u \\data\\unigram.txt&nbsp;&nbsp;&nbsp;&nbsp;# 词库是动态的，指定目录就可以</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">·&nbsp;&nbsp;&nbsp;把生成的文件改名为uni.lib ，</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6 、导入sample.sql 数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7 、建立索引 index.exe --all&nbsp;&nbsp;&nbsp;（详情见 sphinx + mysql(1) ）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">以下分支说明如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">---------------------------------------------------------------</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A ：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8 、安装SPHINXSE FOR MYSQL</span>\r\n</p>\r\n<p>\r\n	<a href="http://www.sphinxsearch.com/downloads/mysql-5.0.45-sphinxse-0.9.8-win32.zip"><span style="font-size:14px;">http://www.sphinxsearch.com/downloads/mysql-5.0.45-sphinxse-0.9.8-win32.zip</span></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下载后，解压然后覆盖MYSQL 目录，就OK 。 ( 注意mysql 版本必须相同)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">进入mysql 运行 show engines; 查看表的类型是否存在 sphinx</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9 、创建Sphinx 存储引擎表</span><br />\r\n<span style="font-size:14px;"> CREATE TABLE `sphinx` (</span><br />\r\n<span style="font-size:14px;"> `id` int(11) NOT NULL,</span><br />\r\n<span style="font-size:14px;"> `weight` int(11) NOT NULL,</span><br />\r\n<span style="font-size:14px;"> `qry` varchar(255) NOT NULL,</span><br />\r\n<span style="font-size:14px;"> `group_id` int(11) NOT NULL,</span><br />\r\n<span style="font-size:14px;"> KEY `Qry` (`Qry`)</span><br />\r\n<span style="font-size:14px;"> ) ENGINE=SPHINX CONNECTION=''sphinx://localhost:3312/test1'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">与 一般mysql 表不同的是ENGINE=SPHINX CONNECTION=''sphinx://localhost:3312/test1''; ，这里表示这个表采用SPHINXSE 引擎，与sphinx 的连接串是''sphinx://localhost:3312/test1 ，test1 是索引名称</span><br />\r\n<span style="font-size:14px;"> 根据sphinx 官方说明，这个表必须至少有三个字段，字段起什么名称无所谓，但类型的顺序必须是integer,integer,varchar ，分别表示记录标识document ID, 匹配权重weight 与查询qry ，同时document ID 与qry 必须建索引。另外这个表还可以建立几个字段，这几个字段的只能是integer 或TIMESTAMP 类型，字段是与sphinx 的结果集绑定的，因此字段的名称必须与在sphinx.conf 中定义的属性名称一致，否则取出来的将是Null 值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10 、MySQL SphinxSE 全文检索存储引擎SQL 语句使用方法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装SphinxSE 存储引擎后首先需新建一张特殊的指定"ENGINE=SPHINX" 检索表，如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CREATE TABLE ArticleFulltext (</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INTEGER NOT NULL,</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;Weight&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INTEGER NOT NULL,</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;Qry&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VARCHAR(3072) NOT NULL,</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;...</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;INDEX (Qry)</span><br />\r\n<span style="font-size:14px;"> ) ENGINE=SPHINX CONNECTION="sphinx://localhost:3312/test";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">·&nbsp;&nbsp;&nbsp;其中表名和字段名可以是任意名称，但前三个属性的类型必须为INT 、INT 和VARCHAR 。也可以拥有更多的属性，类型必须为INT 或TIMESTAMP ，名称必须与Sphinx 配置文件对应，用于返回检索结果的更多信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">·&nbsp;&nbsp;&nbsp;创建该表后即可使用如下的SQL 语句在MySQL 中进行全文检索：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">·&nbsp;&nbsp;&nbsp;SELECT * FROM ArticleFulltext WHERE Qry='' 全文检索条件'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">·&nbsp;&nbsp;&nbsp;查询返回结果即为全文检索的结果，包括文档ID 、权重，若ArticleFulltext 表包含了更多属性还包含命中结果的其它信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">·&nbsp;&nbsp;&nbsp;通过SQL 联接操作可以很容易的实现融合检索，如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">·&nbsp;&nbsp;&nbsp;SELECT ID, Title</span><br />\r\n<span style="font-size:14px;"> FROM Article, ArticleFulltext</span><br />\r\n<span style="font-size:14px;"> WHERE ArticleFulltext.ID = Article.ID and Qry = '' 博客''</span><br />\r\n<span style="font-size:14px;"> AND P lishTime &gt; ''2007-03-01'' AND ReferCount &gt; 0</span><br />\r\n<span style="font-size:14px;"> ORDER BY Weight * 0.5 + ReferCount * 0.5;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">·&nbsp;&nbsp;&nbsp;上述SQL 语句即可检索出2007 年3 月1 日以来包含'' 博客'' 关键字且并引用过的文章，且按全文检索权重和引用数综合计算所得的权重进行排序。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">·&nbsp;&nbsp;&nbsp;由此可见，通过将全文检索系统提供的功能以存储引擎的形式嵌入到关系数据库MySQL 中可以很方便的提供融合检索功能，虽然功能限制较多，也不失为一种聪明便捷的方式。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11, 将SPHINX 生成WINDOWS 服务</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">searchd --install --config "csft.conf"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12. 启动服务 net start |searchd( 或者其它服务名)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">---------------------------------------------------------------</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B ：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置sphinx.conf 文件，支持中文编码</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> charset_type = zh_cn.utf-8</span><br />\r\n<span style="font-size:14px;"> charset_dictpath = D:\\csft3.1\\bin&nbsp;&nbsp;&nbsp;# 分词 lib 库文件的目录</span><br />\r\n<span style="font-size:14px;"> min_infix_len = 0</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a href="http://lzj0470.javaeye.com/blog/552014"><span style="font-size:14px;">sphinx 问题集合</span></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">平台是在windows 2003,sphinx-0.9.8,my5.0</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">初学者来说，想成功查询，可能遇到几个问题。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">启动searchd.exe时。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1、FATAL: no readable config file (looked in./sphinx.conf)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">找不到sphinx.conf。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">解决办法:E:\\sphinx\\bin&gt;searchd --config e:/sphinx/sphinx.conf(需要写入绝对路径)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、SELECT * FROM sphinx WHERE Qry=''groups'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">提示该问题。Unable to connect to foreign data source: failed to connect to</span><br />\r\n<span style="font-size:14px;"> searchd (host=localhost, port=3312)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">解决办法:命令行，运行 E:\\sphinx\\bin&gt;searchd --config e:/sphinx/sphinx.conf(需要写入绝对路径)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3、SELECT * FROM sphinx WHERE Qry=''groups'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">提 示该问题。There was a problem processing the qry on the foreign data source. Data source error: bad searchd response length (length=775173376)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">解决办法：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在创建专业表时，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CREATE TABLE `sphinx` (</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;`id` int(11) NOT NULL,</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;`weight` int(11) NOT NULL,</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;`qry` varchar(255) NOT NULL,</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;KEY `Qry` (`Qry`)</span><br />\r\n<span style="font-size:14px;"> ) ENGINE=SPHINX DEFAULT CHARSET=utf8 CONNECTION=''sphinx://localhost:3306/cgfinal'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">连接CONNECTION不是3306端口，而是3312端口。</span>\r\n</p>', 9, 'sphinx,php', 1, 0, 1, '2013-03-10 12:00:14'),
(175, 'JQuery获取浏览器窗口的可视区域高度和宽度,滚动条高度 ', '<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					&nbsp;alert($(window).height());&nbsp;//浏览器时下窗口可视区域高度\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					alert($(document).height());&nbsp;//浏览器时下窗口文档的高度\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					alert($(document.body).height());//浏览器时下窗口文档body的高度\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					alert($(document.body).outerHeight(true));//浏览器时下窗口文档body的总高度 包括border padding margin\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					alert($(window).width());&nbsp;//浏览器时下窗口可视区域宽度\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					alert($(document).width());//浏览器时下窗口文档对于象宽度\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					alert($(document.body).width());//浏览器时下窗口文档body的高度\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					alert($(document.body).outerWidth(true));//浏览器时下窗口文档body的总宽度 包括border padding margin\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					&nbsp;&nbsp;\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					alert($(document).scrollTop());&nbsp;//获取滚动条到顶部的垂直高度\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>\r\n<div>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<br />\r\n				</td>\r\n				<td>\r\n					alert($(document).scrollLeft());&nbsp;//获取滚动条到左边的垂直宽度\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>', 13, 'Jquery', 1, 3, 1, '2013-03-10 12:02:38'),
(176, 'javascript函数设置默认值', '<p>\r\n	function&nbsp;read_file(file,&nbsp;delete_after&nbsp;=&nbsp;false)&nbsp;\r\n</p>\r\n<p>\r\n	{&nbsp;// Code&nbsp;}&nbsp;\r\n</p>\r\n<p>\r\n	当然，这样写你在火狐上是没问题的，但是在IE9和谷歌浏览器都会报错，因为javascript函数不允许这样设置默认值。\r\n</p>\r\n<p>\r\n	&nbsp;如果你要设置一个变量的默认值为false，则可以这样写：\r\n</p>\r\n<p>\r\n	function&nbsp;foo(a,&nbsp;b)&nbsp;{&nbsp;&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;typeof&nbsp;a&nbsp;!==&nbsp;''undefined''&nbsp;?&nbsp;a&nbsp;:&nbsp;false;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;&nbsp; &nbsp; &nbsp; b&nbsp;=&nbsp;typeof&nbsp;b&nbsp;!==&nbsp;''undefined''&nbsp;?&nbsp;b&nbsp;:&nbsp;''default_b'';&nbsp;\r\n</p>\r\n<p>\r\n	&nbsp;}\r\n</p>\r\n<p>\r\n	<br />\r\n</p>', 13, '函数', 1, 0, 1, '2013-03-10 12:06:16'),
(177, 'ThinkPHP中结果唯一性的作法 ', '<p>\r\n	代码如下：\r\n</p>\r\n<p>\r\n	<span style="line-height:1.5;">&nbsp;$financelist = $finance-&gt;relation(true)-&gt;where($map)-&gt;distinct(true)-&gt;field(''sid'')&nbsp;-&gt;order(''id desc'')-&gt;limit($page-&gt;firstRow.'',''.$page-&gt;listRows)-&gt;select();</span>\r\n</p>', 14, 'thinkphp,php', 1, 0, 1, '2013-03-10 12:07:15'),
(178, 'event keycode大全 ', '<h4>\r\n	<span style="font-size:14px;">event.keycode大全(javascript)</span>\r\n</h4>\r\n<span style="font-size:14px;">keycode 8 = BackSpace BackSpace</span><br />\r\n<span style="font-size:14px;"> keycode 9 = Tab Tab</span><br />\r\n<span style="font-size:14px;"> keycode 12 = Clear</span><br />\r\n<span style="font-size:14px;"> keycode 13 = Enter</span><br />\r\n<span style="font-size:14px;"> keycode 16 = Shift_L</span><br />\r\n<span style="font-size:14px;"> keycode 17 = Control_L</span><br />\r\n<span style="font-size:14px;"> keycode 18 = Alt_L</span><br />\r\n<span style="font-size:14px;"> keycode 19 = Pause</span><br />\r\n<span style="font-size:14px;"> keycode 20 = Caps_Lock</span><br />\r\n<span style="font-size:14px;"> keycode 27 = Escape Escape</span><br />\r\n<span style="font-size:14px;"> keycode 32 = space space</span><br />\r\n<span style="font-size:14px;"> keycode 33 = Prior</span><br />\r\n<span style="font-size:14px;"> keycode 34 = Next</span><br />\r\n<span style="font-size:14px;"> keycode 35 = End</span><br />\r\n<span style="font-size:14px;"> keycode 36 = Home</span><br />\r\n<span style="font-size:14px;"> keycode 37 = Left</span><br />\r\n<span style="font-size:14px;"> keycode 38 = Up</span><br />\r\n<span style="font-size:14px;"> keycode 39 = Right</span><br />\r\n<span style="font-size:14px;"> keycode 40 = Down</span><br />\r\n<span style="font-size:14px;"> keycode 41 = Select</span><br />\r\n<span style="font-size:14px;"> keycode 42 = Print</span><br />\r\n<span style="font-size:14px;"> keycode 43 = Execute</span><br />\r\n<span style="font-size:14px;"> keycode 45 = Insert</span><br />\r\n<span style="font-size:14px;"> keycode 46 = Delete</span><br />\r\n<span style="font-size:14px;"> keycode 47 = Help</span><br />\r\n<span style="font-size:14px;"> keycode 48 = 0 equal braceright</span><br />\r\n<span style="font-size:14px;"> keycode 49 = 1 exclam onesuperior</span><br />\r\n<span style="font-size:14px;"> keycode 50 = 2 quotedbl twosuperior</span><br />\r\n<span style="font-size:14px;"> keycode 51 = 3 section threesuperior</span><br />\r\n<span style="font-size:14px;"> keycode 52 = 4 dollar</span><br />\r\n<span style="font-size:14px;"> keycode 53 = 5 percent</span><br />\r\n<span style="font-size:14px;"> keycode 54 = 6 ampersand</span><br />\r\n<span style="font-size:14px;"> keycode 55 = 7 slash braceleft</span><br />\r\n<span style="font-size:14px;"> keycode 56 = 8 parenleft bracketleft</span><br />\r\n<span style="font-size:14px;"> keycode 57 = 9 parenright bracketright</span><br />\r\n<span style="font-size:14px;"> keycode 65 = a A</span><br />\r\n<span style="font-size:14px;"> keycode 66 = b B</span><br />\r\n<span style="font-size:14px;"> keycode 67 = c C</span><br />\r\n<span style="font-size:14px;"> keycode 68 = d D</span><br />\r\n<span style="font-size:14px;"> keycode 69 = e E EuroSign</span><br />\r\n<span style="font-size:14px;"> keycode 70 = f F</span><br />\r\n<span style="font-size:14px;"> keycode 71 = g G</span><br />\r\n<span style="font-size:14px;"> keycode 72 = h H</span><br />\r\n<span style="font-size:14px;"> keycode 73 = i I</span><br />\r\n<span style="font-size:14px;"> keycode 74 = j J</span><br />\r\n<span style="font-size:14px;"> keycode 75 = k K</span><br />\r\n<span style="font-size:14px;"> keycode 76 = l L</span><br />\r\n<span style="font-size:14px;"> keycode 77 = m M mu</span><br />\r\n<span style="font-size:14px;"> keycode 78 = n N</span><br />\r\n<span style="font-size:14px;"> keycode 79 = o O</span><br />\r\n<span style="font-size:14px;"> keycode 80 = p P</span><br />\r\n<span style="font-size:14px;"> keycode 81 = q Q at</span><br />\r\n<span style="font-size:14px;"> keycode 82 = r R</span><br />\r\n<span style="font-size:14px;"> keycode 83 = s S</span><br />\r\n<span style="font-size:14px;"> keycode 84 = t T</span><br />\r\n<span style="font-size:14px;"> keycode 85 = u U</span><br />\r\n<span style="font-size:14px;"> keycode 86 = v V</span><br />\r\n<span style="font-size:14px;"> keycode 87 = w W</span><br />\r\n<span style="font-size:14px;"> keycode 88 = x X</span><br />\r\n<span style="font-size:14px;"> keycode 89 = y Y</span><br />\r\n<span style="font-size:14px;"> keycode 90 = z Z</span><br />\r\n<span style="font-size:14px;"> keycode 96 = KP_0 KP_0</span><br />\r\n<span style="font-size:14px;"> keycode 97 = KP_1 KP_1</span><br />\r\n<span style="font-size:14px;"> keycode 98 = KP_2 KP_2</span><br />\r\n<span style="font-size:14px;"> keycode 99 = KP_3 KP_3</span><br />\r\n<span style="font-size:14px;"> keycode 100 = KP_4 KP_4</span><br />\r\n<span style="font-size:14px;"> keycode 101 = KP_5 KP_5</span><br />\r\n<span style="font-size:14px;"> keycode 102 = KP_6 KP_6</span><br />\r\n<span style="font-size:14px;"> keycode 103 = KP_7 KP_7</span><br />\r\n<span style="font-size:14px;"> keycode 104 = KP_8 KP_8</span><br />\r\n<span style="font-size:14px;"> keycode 105 = KP_9 KP_9</span><br />\r\n<span style="font-size:14px;"> keycode 106 = KP_Multiply KP_Multiply</span><br />\r\n<span style="font-size:14px;"> keycode 107 = KP_Add KP_Add</span><br />\r\n<br />\r\n<span style="font-size:14px;"> keycode 108 = KP_Separator KP_Separator&nbsp;</span><br />\r\n<span style="font-size:14px;"> keycode 109 = KP_Subtract KP_Subtract</span><br />\r\n<span style="font-size:14px;"> keycode 110 = KP_Decimal KP_Decimal</span><br />\r\n<span style="font-size:14px;"> keycode 111 = KP_Divide KP_Divide</span><br />\r\n<span style="font-size:14px;"> keycode 112 = F1</span><br />\r\n<span style="font-size:14px;"> keycode 113 = F2</span><br />\r\n<span style="font-size:14px;"> keycode 114 = F3</span><br />\r\n<span style="font-size:14px;"> keycode 115 = F4</span><br />\r\n<span style="font-size:14px;"> keycode 116 = F5</span><br />\r\n<span style="font-size:14px;"> keycode 117 = F6</span><br />\r\n<span style="font-size:14px;"> keycode 118 = F7</span><br />\r\n<span style="font-size:14px;"> keycode 119 = F8</span><br />\r\n<span style="font-size:14px;"> keycode 120 = F9</span><br />\r\n<span style="font-size:14px;"> keycode 121 = F10</span><br />\r\n<span style="font-size:14px;"> keycode 122 = F11</span><br />\r\n<span style="font-size:14px;"> keycode 123 = F12</span><br />\r\n<span style="font-size:14px;"> keycode 124 = F13</span><br />\r\n<span style="font-size:14px;"> keycode 125 = F14</span><br />\r\n<span style="font-size:14px;"> keycode 126 = F15</span><br />\r\n<span style="font-size:14px;"> keycode 127 = F16</span><br />\r\n<span style="font-size:14px;"> keycode 128 = F17</span><br />\r\n<span style="font-size:14px;"> keycode 129 = F18</span><br />\r\n<span style="font-size:14px;"> keycode 130 = F19</span><br />\r\n<span style="font-size:14px;"> keycode 131 = F20</span><br />\r\n<span style="font-size:14px;"> keycode 132 = F21</span><br />\r\n<span style="font-size:14px;"> keycode 133 = F22</span><br />\r\n<span style="font-size:14px;"> keycode 134 = F23</span><br />\r\n<span style="font-size:14px;"> keycode 135 = F24</span><br />\r\n<span style="font-size:14px;"> keycode 136 = Num_Lock</span><br />\r\n<span style="font-size:14px;"> keycode 137 = Scroll_Lock</span><br />\r\n<span style="font-size:14px;"> keycode 187 = acute grave</span><br />\r\n<span style="font-size:14px;"> keycode 188 = comma semicolon</span><br />\r\n<span style="font-size:14px;"> keycode 189 = minus underscore</span><br />\r\n<span style="font-size:14px;"> keycode 190 = period colon</span><br />\r\n<span style="font-size:14px;"> keycode 192 = numbersign apostrophe</span><br />\r\n<span style="font-size:14px;"> keycode 210 = plusminus hyphen macron</span><br />\r\n<span style="font-size:14px;"> keycode 211 =</span><br />\r\n<span style="font-size:14px;"> keycode 212 = copyright registered</span><br />\r\n<span style="font-size:14px;"> keycode 213 = guillemotleft guillemotright</span><br />\r\n<span style="font-size:14px;"> keycode 214 = masculine ordfeminine</span><br />\r\n<span style="font-size:14px;"> keycode 215 = ae AE</span><br />\r\n<span style="font-size:14px;"> keycode 216 = cent yen</span><br />\r\n<span style="font-size:14px;"> keycode 217 = questiondown exclamdown</span><br />\r\n<span style="font-size:14px;"> keycode 218 = onequarter onehalf threequarters</span><br />\r\n<span style="font-size:14px;"> keycode 220 = less greater bar</span><br />\r\n<span style="font-size:14px;"> keycode 221 = plus asterisk asciitilde</span><br />\r\n<span style="font-size:14px;"> keycode 227 = multiply division</span><br />\r\n<br />\r\n<span style="font-size:14px;"> keycode 228 = acircumflex Acircumflex&nbsp;</span><br />\r\n<span style="font-size:14px;"> keycode 229 = ecircumflex Ecircumflex</span><br />\r\n<span style="font-size:14px;"> keycode 230 = icircumflex Icircumflex</span><br />\r\n<span style="font-size:14px;"> keycode 231 = ocircumflex Ocircumflex</span><br />\r\n<span style="font-size:14px;"> keycode 232 = ucircumflex Ucircumflex</span><br />\r\n<span style="font-size:14px;"> keycode 233 = ntilde Ntilde</span><br />\r\n<span style="font-size:14px;"> keycode 234 = yacute Yacute</span><br />\r\n<span style="font-size:14px;"> keycode 235 = oslash Ooblique</span><br />\r\n<span style="font-size:14px;"> keycode 236 = aring Aring</span><br />\r\n<span style="font-size:14px;"> keycode 237 = ccedilla Ccedilla</span><br />\r\n<span style="font-size:14px;"> keycode 238 = thorn THORN</span><br />\r\n<span style="font-size:14px;"> keycode 239 = eth ETH</span><br />\r\n<span style="font-size:14px;"> keycode 240 = diaeresis cedilla currency</span><br />\r\n<span style="font-size:14px;"> keycode 241 = agrave Agrave atilde Atilde</span><br />\r\n<span style="font-size:14px;"> keycode 242 = egrave Egrave</span><br />\r\n<span style="font-size:14px;"> keycode 243 = igrave Igrave</span><br />\r\n<span style="font-size:14px;"> keycode 244 = ograve Ograve otilde Otilde</span><br />\r\n<span style="font-size:14px;"> keycode 245 = ugrave Ugrave</span><br />\r\n<span style="font-size:14px;"> keycode 246 = adiaeresis Adiaeresis</span><br />\r\n<span style="font-size:14px;"> keycode 247 = ediaeresis Ediaeresis</span><br />\r\n<span style="font-size:14px;"> keycode 248 = idiaeresis Idiaeresis</span><br />\r\n<span style="font-size:14px;"> keycode 249 = odiaeresis Odiaeresis</span><br />\r\n<span style="font-size:14px;"> keycode 250 = udiaeresis Udiaeresis</span><br />\r\n<span style="font-size:14px;"> keycode 251 = ssharp question backslash</span><br />\r\n<span style="font-size:14px;"> keycode 252 = asciicircum degree</span><br />\r\n<span style="font-size:14px;"> keycode 253 = 3 sterling</span><br />\r\n<span style="font-size:14px;"> keycode 254 = Mode_switch</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 使用event对象的keyCode属性判断输入的键值&nbsp;</span><br />\r\n<span style="font-size:14px;"> eg：if(event.keyCode==13)alert(“enter!”);</span>', 13, 'keycode', 1, 0, 1, '2013-03-10 12:07:47');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(179, 'ThinkPHP3.1快速入门（13）自动完成', '<p>\r\n	<span style="font-size:14px;">自动完成是ThinkPHP提供用来完成数据自动处理和过滤的方法，使用create方法创建数据对象的时候会自动完成数据处理。</span><br />\r\n<span style="font-size:14px;"> 因此，在ThinkPHP使用create方法来创建数据对象是更加安全的方式，而不是直接通过add或者save方法实现数据写入。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">规则定义</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">自动完成通常用来完成默认字段写入，安全字段过滤以及业务逻辑的自动处理等，和自动验证的定义方式类似，自动完成的定义也支持静态定义和动态定义两种方式。</span><br />\r\n<span style="font-size:14px;"> 静态方式：在模型类里面通过$_auto属性定义处理规则。</span><br />\r\n<span style="font-size:14px;"> 动态方式：使用模型类的auto方法动态创建自动处理规则。</span><br />\r\n<span style="font-size:14px;"> 两种方式的定义规则都采用：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(完成字段1,完成规则,[完成条件,附加规则]),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(完成字段2,完成规则,[完成条件,附加规则]),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">说明</span><br />\r\n<span style="font-size:14px;"> 完成字段：（必须）需要进行处理的数据表实际字段名称。</span><br />\r\n<span style="font-size:14px;"> 完成规则：（必须）需要处理的规则，配合附加规则完成。</span><br />\r\n<span style="font-size:14px;"> 完成时间：（可选）包括：</span><br />\r\n<span style="font-size:14px;"> Model::&nbsp;MODEL_INSERT或者1&nbsp;新增数据的时候处理（默认）</span><br />\r\n<span style="font-size:14px;"> Model::&nbsp;MODEL_UPDATE或者2更新数据的时候处理</span><br />\r\n<span style="font-size:14px;"> Model::&nbsp;MODEL_BOTH或者3所有情况都进行处理</span><br />\r\n<span style="font-size:14px;"> 附加规则：（可选）包括：</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">function</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">使用函数，表示填充的内容是一个函数名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">callback</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">回调方法&nbsp;，表示填充的内容是一个当前模型的方法</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">field</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">用其它字段填充，表示填充的内容是一个其他字段的值</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">string</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">字符串（默认方式）</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">静态定义</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">预先在模型类里面定义好自动完成的规则，我们称之为静态定义。例如，我们在模型类定义_auto属性：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6&nbsp;class&nbsp;UserModel&nbsp;extends&nbsp;Model{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$_auto&nbsp;=&nbsp;array&nbsp;(&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''status'',''1''),&nbsp;&nbsp;//&nbsp;新增的时候把status字段设置为1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''password'',''md5'',3,''function'')&nbsp;,&nbsp;//&nbsp;对password字段在新增和编辑的时候使md5函数处理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''name'',''getName'',3,''callback''),&nbsp;//&nbsp;对name字段在新增和编辑的时候回调getName方法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''update_time'',''time'',2,''function''),&nbsp;//&nbsp;对update_time字段在更新的时候写入当前时间戳</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后，就可以在使用create方法创建数据对象的时候自动处理：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">15&nbsp;if&nbsp;(!$User-&gt;create()){&nbsp;//&nbsp;创建数据对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;如果创建失败&nbsp;表示验证没有通过&nbsp;输出错误提示信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit($User-&gt;getError());</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">18&nbsp;}else{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证通过&nbsp;写入新增数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$User-&gt;add();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">21&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你没有定义任何自动验证规则的话，则不需要判断create方法的返回值：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">22&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">23&nbsp;$User-&gt;create();&nbsp;//&nbsp;生成数据对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">24&nbsp;$User-&gt;add();&nbsp;//&nbsp;新增用户数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者更简单的使用：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">25&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">26&nbsp;$User-&gt;create()-&gt;add();&nbsp;//&nbsp;生成数据对象并写入数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">create方法默认情况下是根据表单提交的post数据生成数据对象，我们也可以根据其他的数据源来生成数据对象，你也可以明确指定当前创建的数据对象自动处理的时间是新增还是编辑数据，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">27&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">28&nbsp;$userData&nbsp;=&nbsp;getUserData();&nbsp;//&nbsp;通过方法获取用户数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">29&nbsp;$User-&gt;create($userData,2);&nbsp;//&nbsp;根据userData数据创建数据对象，并指定为更新数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">30&nbsp;$User-&gt;add();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">create方法的第二个参数就用于指定自动完成规则中的完成时间，也就是说create方法的自动处理规则只会处理符合完成时间的自动完成规则。</span><br />\r\n<span style="font-size:14px;"> create方法在创建数据的时候，已经自动过滤了非数据表字段数据信息，因此不需要担心表单会提交其他的非法字段信息而导致数据对象写入出错，甚至还可以自动过滤不希望用户在表单提交的字段信息（详见字段合法性过滤）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">动态完成</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">除了静态定义之外，我们也可以采用动态完成的方式来解决不同的处理规则。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">31&nbsp;$rules&nbsp;=&nbsp;array&nbsp;(&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''status'',''1''),&nbsp;&nbsp;//&nbsp;新增的时候把status字段设置为1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">33&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''password'',''md5'',3,''function'')&nbsp;,&nbsp;//&nbsp;对password字段在新增和编辑的时候使md5函数处理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''update_time'',''time'',2,''function''),&nbsp;//&nbsp;对update_time字段在更新的时候写入当前时间戳</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">35&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">36&nbsp;$User&nbsp;=&nbsp;M(''User'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">37&nbsp;$User-&gt;auto($rules)-&gt;create()-&gt;add();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改数据对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在使用create方法创建好数据对象之后，此时的数据对象保存在内存中，因此仍然可以操作数据对象，包括修改或者增加数据对象的值，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">38&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">39&nbsp;$User-&gt;create();&nbsp;//&nbsp;生成数据对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">40&nbsp;$User-&gt;status&nbsp;=&nbsp;2;&nbsp;//&nbsp;修改数据对象的status属性</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">41&nbsp;$User-&gt;register_time&nbsp;=&nbsp;NOW_TIME;&nbsp;//&nbsp;增加register_time属性</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">42&nbsp;$User-&gt;add();&nbsp;//&nbsp;新增用户数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一旦调用了add方法（或者save方法），创建在内存中的数据对象就会失效，如果希望创建好的数据对象在后面的数据处理中再次调用，可以保存数据对象先，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">43&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">44&nbsp;$data&nbsp;=&nbsp;$User-&gt;create();&nbsp;//&nbsp;保存生成的数据对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">45&nbsp;$User-&gt;add();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不过要记得，如果你修改了内存中的数据对象并不会自动更新保存的数据对象，因此下面的用法是错误的：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">46&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">47&nbsp;$data&nbsp;=&nbsp;$User-&gt;create();&nbsp;//&nbsp;保存生成的数据对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">48&nbsp;$User-&gt;status&nbsp;=&nbsp;2;&nbsp;//&nbsp;修改数据对象的status属性</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">49&nbsp;$User-&gt;register_time&nbsp;=&nbsp;NOW_TIME;&nbsp;//&nbsp;增加register_time属性</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">50&nbsp;$User-&gt;add($data);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上面的代码我们修改了数据对象，但是仍然写入的是之前保存的数据对象，因此对数据对象的更改操作将会无效。</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:08:13'),
(180, 'CSS3 Animations ', '<h2>\r\n	CSS3 Animations\r\n</h2>\r\n<p>\r\n	With CSS3, we can create animations, which can replace animated images, Flash animations, and JavaScripts in many web pages.\r\n</p>\r\n<hr />\r\n<div>\r\n	CSS3<br />\r\nAnimation\r\n</div>\r\n<hr />\r\n<h2>\r\n	CSS3 @keyframes Rule\r\n</h2>\r\n<p>\r\n	To create animations in CSS3, you will have to learn about the @keyframes rule.\r\n</p>\r\n<p>\r\n	The @keyframes rule is where the animation is created. Specify a CSS style inside the @keyframes rule and the animation will gradually change from the current style to the new style.\r\n</p>\r\n<hr />\r\n<h2>\r\n	Browser Support\r\n</h2>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Property\r\n			</th>\r\n			<th colspan="5">\r\n				Browser Support\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				@keyframes\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				animation\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	Internet Explorer does not yet support the @keyframes rule or the animation property.\r\n</p>\r\n<p>\r\n	Firefox requires the prefix -moz-, Chrome and Safari require the prefix -webkit-, and Opera require the prefix -o-.\r\n</p>\r\n<hr />\r\n<div>\r\n	<img src="http://www.w3schools.com/images/compatible_opera2020.gif" title="Opera" alt="Opera" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_safari2020.gif" title="Safari" alt="Safari" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_chrome2020.gif" title="Chrome" alt="Chrome" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_firefox2020.gif" title="Firefox" alt="Firefox" width="20" height="20" /><img src="http://www.w3schools.com/images/incompatible_ie2020.gif" title="Internet Explorer" alt="Internet Explorer" width="20" height="20" /> \r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<div>\r\n		@keyframes myfirst<br />\r\n{<br />\r\nfrom {background: red;}<br />\r\nto {background: yellow;}<br />\r\n}<br />\r\n<br />\r\n@-moz-keyframes myfirst<br />\r\n{<br />\r\nfrom {background: red;}<br />\r\nto {background: yellow;}<br />\r\n}<br />\r\n<br />\r\n@-webkit-keyframes myfirst<br />\r\n{<br />\r\nfrom {background: red;}<br />\r\nto {background: yellow;}<br />\r\n}<br />\r\n<br />\r\n@-o-keyframes myfirst<br />\r\n{<br />\r\nfrom {background: red;}<br />\r\nto {background: yellow;}<br />\r\n}\r\n	</div>\r\n</div>\r\n<br />\r\n<hr />\r\n<h2>\r\n	CSS3 animation\r\n</h2>\r\n<p>\r\n	When the animation is created in the @keyframe, bind it to a selector, otherwise the animation will have no effect.\r\n</p>\r\n<p>\r\n	Bind the animation to a selector by specifying at least these two CSS3 animation properties:\r\n</p>\r\n<ul>\r\n	<li>\r\n		Specify the name of the animation\r\n	</li>\r\n	<li>\r\n		Specify the duration of the animation\r\n	</li>\r\n</ul>\r\n<div>\r\n	<img src="http://www.w3schools.com/images/compatible_opera2020.gif" title="Opera" alt="Opera" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_safari2020.gif" title="Safari" alt="Safari" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_chrome2020.gif" title="Chrome" alt="Chrome" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_firefox2020.gif" title="Firefox" alt="Firefox" width="20" height="20" /><img src="http://www.w3schools.com/images/incompatible_ie2020.gif" title="Internet Explorer" alt="Internet Explorer" width="20" height="20" /> \r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<p>\r\n		Binding the "myfirst" animation to a div element, duration: 5 seconds:\r\n	</p>\r\n	<div>\r\n		div<br />\r\n{<br />\r\nanimation: myfirst 5s;<br />\r\n-moz-animation: myfirst 5s;<br />\r\n-webkit-animation: myfirst 5s;<br />\r\n-o-animation: myfirst 5s;<br />\r\n}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/css3/tryit.asp?filename=trycss3_animation1">Try it yourself »</a> \r\n</div>\r\n<p>\r\n	Note:&nbsp;You must define the name and the duration of the animation. If duration is omitted, the animation will not run, because the default value is 0.\r\n</p>\r\n<hr />\r\n<h2>\r\n	What are Animations in CSS3?\r\n</h2>\r\n<p>\r\n	An animation is an effect that lets an element gradually change from one style to another.\r\n</p>\r\n<p>\r\n	You can change as many styles you want, as many times you want.\r\n</p>\r\n<p>\r\n	Specify when the change will happen in percent, or the keywords "from" and "to", which is the same as 0% and 100%.\r\n</p>\r\n<p>\r\n	0% is the beginning of the animation, 100% is when the animation is complete.\r\n</p>\r\n<p>\r\n	For best browser support, you should always define both the 0% and the 100% selectors.\r\n</p>\r\n<div>\r\n	<img src="http://www.w3schools.com/images/compatible_opera2020.gif" title="Opera" alt="Opera" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_safari2020.gif" title="Safari" alt="Safari" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_chrome2020.gif" title="Chrome" alt="Chrome" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_firefox2020.gif" title="Firefox" alt="Firefox" width="20" height="20" /><img src="http://www.w3schools.com/images/incompatible_ie2020.gif" title="Internet Explorer" alt="Internet Explorer" width="20" height="20" /> \r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<p>\r\n		Change the background color when the animation is 25%, 50%, and again when the animation is 100% complete:\r\n	</p>\r\n	<div>\r\n		@keyframes myfirst<br />\r\n{<br />\r\n0%&nbsp;&nbsp;&nbsp;{background: red;}<br />\r\n25%&nbsp;&nbsp;{background: yellow;}<br />\r\n50%&nbsp;&nbsp;{background: blue;}<br />\r\n100% {background: green;}<br />\r\n}<br />\r\n<br />\r\n@-moz-keyframes myfirst<br />\r\n{<br />\r\n0%&nbsp;&nbsp;&nbsp;{background: red;}<br />\r\n25%&nbsp;&nbsp;{background: yellow;}<br />\r\n50%&nbsp;&nbsp;{background: blue;}<br />\r\n100% {background: green;}<br />\r\n}<br />\r\n<br />\r\n@-webkit-keyframes myfirst<br />\r\n{<br />\r\n0%&nbsp;&nbsp;&nbsp;{background: red;}<br />\r\n25%&nbsp;&nbsp;{background: yellow;}<br />\r\n50%&nbsp;&nbsp;{background: blue;}<br />\r\n100% {background: green;}<br />\r\n}<br />\r\n<br />\r\n@-o-keyframes myfirst<br />\r\n{<br />\r\n0%&nbsp;&nbsp;&nbsp;{background: red;}<br />\r\n25%&nbsp;&nbsp;{background: yellow;}<br />\r\n50%&nbsp;&nbsp;{background: blue;}<br />\r\n100% {background: green;}<br />\r\n}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/css3/tryit.asp?filename=trycss3_animation2">Try it yourself »</a> \r\n</div>\r\n<br />\r\n<div>\r\n	<img src="http://www.w3schools.com/images/compatible_opera2020.gif" title="Opera" alt="Opera" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_safari2020.gif" title="Safari" alt="Safari" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_chrome2020.gif" title="Chrome" alt="Chrome" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_firefox2020.gif" title="Firefox" alt="Firefox" width="20" height="20" /><img src="http://www.w3schools.com/images/incompatible_ie2020.gif" title="Internet Explorer" alt="Internet Explorer" width="20" height="20" /> \r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<p>\r\n		Change the background color and position:\r\n	</p>\r\n	<div>\r\n		@keyframes myfirst<br />\r\n{<br />\r\n0%&nbsp;&nbsp;&nbsp;{background: red; left:0px; top:0px;}<br />\r\n25%&nbsp;&nbsp;{background: yellow; left:200px; top:0px;}<br />\r\n50%&nbsp;&nbsp;{background: blue; left:200px; top:200px;}<br />\r\n75%&nbsp;&nbsp;{background: green; left:0px; top:200px;}<br />\r\n100% {background: red; left:0px; top:0px;}<br />\r\n}<br />\r\n<br />\r\n@-moz-keyframes myfirst<br />\r\n{<br />\r\n0%&nbsp;&nbsp;&nbsp;{background: red; left:0px; top:0px;}<br />\r\n25%&nbsp;&nbsp;{background: yellow; left:200px; top:0px;}<br />\r\n50%&nbsp;&nbsp;{background: blue; left:200px; top:200px;}<br />\r\n75%&nbsp;&nbsp;{background: green; left:0px; top:200px;}<br />\r\n100% {background: red; left:0px; top:0px;}<br />\r\n}<br />\r\n<br />\r\n@-webkit-keyframes myfirst<br />\r\n{<br />\r\n0%&nbsp;&nbsp;&nbsp;{background: red; left:0px; top:0px;}<br />\r\n25%&nbsp;&nbsp;{background: yellow; left:200px; top:0px;}<br />\r\n50%&nbsp;&nbsp;{background: blue; left:200px; top:200px;}<br />\r\n75%&nbsp;&nbsp;{background: green; left:0px; top:200px;}<br />\r\n100% {background: red; left:0px; top:0px;}<br />\r\n}<br />\r\n<br />\r\n@-o-keyframes myfirst<br />\r\n{<br />\r\n0%&nbsp;&nbsp;&nbsp;{background: red; left:0px; top:0px;}<br />\r\n25%&nbsp;&nbsp;{background: yellow; left:200px; top:0px;}<br />\r\n50%&nbsp;&nbsp;{background: blue; left:200px; top:200px;}<br />\r\n75%&nbsp;&nbsp;{background: green; left:0px; top:200px;}<br />\r\n100% {background: red; left:0px; top:0px;}<br />\r\n}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/css3/tryit.asp?filename=trycss3_animation3">Try it yourself »</a> \r\n</div>\r\n<br />\r\n<hr />\r\n<h2>\r\n	CSS3 Animation Properties\r\n</h2>\r\n<p>\r\n	The following table lists the @keyframes rule and all the animation properties:\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Property\r\n			</th>\r\n			<th>\r\n				Description\r\n			</th>\r\n			<th>\r\n				CSS\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_keyframes.asp">@keyframes</a> \r\n			</td>\r\n			<td>\r\n				Specifies the animation\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_animation.asp">animation</a> \r\n			</td>\r\n			<td>\r\n				A shorthand property for all the the animation properties, except the animation-play-state property\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_animation-name.asp">animation-name</a> \r\n			</td>\r\n			<td>\r\n				Specifies the name of the @keyframes animation\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_animation-duration.asp">animation-duration</a> \r\n			</td>\r\n			<td>\r\n				Specifies how many seconds or milliseconds an animation takes to complete one cycle. Default 0\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp">animation-timing-function</a> \r\n			</td>\r\n			<td>\r\n				Describes how the animation will progress over one cycle of its duration. Default "ease"\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_animation-delay.asp">animation-delay</a> \r\n			</td>\r\n			<td>\r\n				Specifies when the animation will start. Default 0\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_animation-iteration-count.asp">animation-iteration-count</a> \r\n			</td>\r\n			<td>\r\n				Specifies the number of times an animation is played. Default 1\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_animation-direction.asp">animation-direction</a> \r\n			</td>\r\n			<td>\r\n				Specifies whether or not the animation should play in reverse on alternate cycles. Default "normal"\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_animation-play-state.asp">animation-play-state</a> \r\n			</td>\r\n			<td>\r\n				Specifies whether the animation is running or paused. Default "running"\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	The two examples below sets all the animation properties:\r\n</p>\r\n<div>\r\n	<img src="http://www.w3schools.com/images/compatible_opera2020.gif" title="Opera" alt="Opera" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_safari2020.gif" title="Safari" alt="Safari" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_chrome2020.gif" title="Chrome" alt="Chrome" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_firefox2020.gif" title="Firefox" alt="Firefox" width="20" height="20" /><img src="http://www.w3schools.com/images/incompatible_ie2020.gif" title="Internet Explorer" alt="Internet Explorer" width="20" height="20" /> \r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<p>\r\n		Run an animation called myfirst, with all the animation properties set:\r\n	</p>\r\n	<div>\r\n		div<br />\r\n{<br />\r\nanimation-name: myfirst;<br />\r\nanimation-duration: 5s;<br />\r\nanimation-timing-function: linear;<br />\r\nanimation-delay: 2s;<br />\r\nanimation-iteration-count: infinite;<br />\r\nanimation-direction: alternate;<br />\r\nanimation-play-state: running;<br />\r\n<br />\r\n-moz-animation-name: myfirst;<br />\r\n-moz-animation-duration: 5s;<br />\r\n-moz-animation-timing-function: linear;<br />\r\n-moz-animation-delay: 2s;<br />\r\n-moz-animation-iteration-count: infinite;<br />\r\n-moz-animation-direction: alternate;<br />\r\n-moz-animation-play-state: running;<br />\r\n<br />\r\n-webkit-animation-name: myfirst;<br />\r\n-webkit-animation-duration: 5s;<br />\r\n-webkit-animation-timing-function: linear;<br />\r\n-webkit-animation-delay: 2s;<br />\r\n-webkit-animation-iteration-count: infinite;<br />\r\n-webkit-animation-direction: alternate;<br />\r\n-webkit-animation-play-state: running;<br />\r\n<br />\r\n-o-animation-name: myfirst;<br />\r\n-o-animation-duration: 5s;<br />\r\n-o-animation-timing-function: linear;<br />\r\n-o-animation-delay: 2s;<br />\r\n-o-animation-iteration-count: infinite;<br />\r\n-o-animation-direction: alternate;<br />\r\n-o-animation-play-state: running;<br />\r\n}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/css3/tryit.asp?filename=trycss3_animation4">Try it yourself »</a> \r\n</div>\r\n<br />\r\n<div>\r\n	<img src="http://www.w3schools.com/images/compatible_opera2020.gif" title="Opera" alt="Opera" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_safari2020.gif" title="Safari" alt="Safari" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_chrome2020.gif" title="Chrome" alt="Chrome" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_firefox2020.gif" title="Firefox" alt="Firefox" width="20" height="20" /><img src="http://www.w3schools.com/images/incompatible_ie2020.gif" title="Internet Explorer" alt="Internet Explorer" width="20" height="20" /> \r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<p>\r\n		The same animation as above, using the shorthand animation property:\r\n	</p>\r\n	<div>\r\n		div<br />\r\n{<br />\r\nanimation: myfirst 5s linear 2s infinite alternate;<br />\r\n<br />\r\n-moz-animation: myfirst 5s linear 2s infinite alternate;<br />\r\n<br />\r\n-webkit-animation: myfirst 5s linear 2s infinite alternate;<br />\r\n<br />\r\n-o-animation: myfirst 5s linear 2s infinite alternate;<br />\r\n}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/css3/tryit.asp?filename=trycss3_animation5">Try it yourself »</a> \r\n</div>', 15, 'css3', 1, 0, 1, '2013-03-10 12:09:16'),
(181, 'CSS3 3D Transforms', '<h2>\r\n	3D Transforms\r\n</h2>\r\n<p>\r\n	CSS3 allows you to format your elements using 3D transforms.\r\n</p>\r\n<p>\r\n	In this chapter you will learn about some of the 3D transform methods:\r\n</p>\r\n<ul>\r\n	<li>\r\n		rotateX()\r\n	</li>\r\n	<li>\r\n		rotateY()\r\n	</li>\r\n</ul>\r\n<p>\r\n	Click on the elements below, to see the difference between a 2D transform and a 3D transform:\r\n</p>\r\n<div>\r\n	<div>\r\n		2D rotate\r\n	</div>\r\n	<div>\r\n		3D rotate\r\n	</div>\r\n</div>\r\n<br />\r\n<hr />\r\n<h2>\r\n	Browser Support\r\n</h2>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Property\r\n			</th>\r\n			<th colspan="5">\r\n				Browser Support\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				transform\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n			<td>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	Internet Explorer and Opera does not yet support 3D transforms (They support only&nbsp;<a href="http://www.w3schools.com/css3/css3_2dtransforms.asp">2D transforms</a>).\r\n</p>\r\n<p>\r\n	Firefox requires the prefix -moz-.\r\n</p>\r\n<p>\r\n	Chrome and Safari requires the prefix -webkit-.\r\n</p>\r\n<hr />\r\n<h2>\r\n	The rotateX() Method\r\n</h2>\r\n<img src="http://www.w3schools.com/css3/transform_rotatex.gif" alt="Rotate X" title="CSS3&nbsp;&lt;wbr&gt;3D&nbsp;&lt;wbr&gt;Transforms" />\r\n<p>\r\n	With the rotateX() method, the element rotates around its X-axis at a given degree.\r\n</p>\r\n<div>\r\n	<img src="http://www.w3schools.com/images/incompatible_opera2020.gif" title="Opera" alt="Opera" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_safari2020.gif" title="Safari" alt="Safari" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_chrome2020.gif" title="Chrome" alt="Chrome" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_firefox2020.gif" title="Firefox" alt="Firefox" width="20" height="20" /><img src="http://www.w3schools.com/images/incompatible_ie2020.gif" title="Internet Explorer" alt="Internet Explorer" width="20" height="20" /> \r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<div>\r\n		div<br />\r\n{<br />\r\ntransform: rotateX(120deg);<br />\r\n-webkit-transform: rotateX(120deg);<br />\r\n-moz-transform: rotateX(120deg);<br />\r\n}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/css3/tryit.asp?filename=trycss3_transform_rotateX">Try it yourself »</a> \r\n</div>\r\n<br />\r\n<hr />\r\n<h2>\r\n	The rotateY() Method\r\n</h2>\r\n<img src="http://www.w3schools.com/css3/transform_rotatey.gif" alt="Rotate Y" title="CSS3&nbsp;&lt;wbr&gt;3D&nbsp;&lt;wbr&gt;Transforms" />\r\n<p>\r\n	With the rotateY() method, the element rotates around its Y-axis at a given degree.\r\n</p>\r\n<div>\r\n	<img src="http://www.w3schools.com/images/incompatible_opera2020.gif" title="Opera" alt="Opera" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_safari2020.gif" title="Safari" alt="Safari" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_chrome2020.gif" title="Chrome" alt="Chrome" width="20" height="20" /><img src="http://www.w3schools.com/images/compatible_firefox2020.gif" title="Firefox" alt="Firefox" width="20" height="20" /><img src="http://www.w3schools.com/images/incompatible_ie2020.gif" title="Internet Explorer" alt="Internet Explorer" width="20" height="20" /> \r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<div>\r\n		div<br />\r\n{<br />\r\ntransform: rotateY(130deg);<br />\r\n-webkit-transform: rotateY(130deg);<br />\r\n-moz-transform: rotateY(130deg);<br />\r\n}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/css3/tryit.asp?filename=trycss3_transform_rotateY">Try it yourself »</a> \r\n</div>\r\n<br />\r\n<hr />\r\n<h2>\r\n	Transform Properties\r\n</h2>\r\n<p>\r\n	The following table lists all the transform properties:\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Property\r\n			</th>\r\n			<th>\r\n				Description\r\n			</th>\r\n			<th>\r\n				CSS\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_transform.asp">transform</a> \r\n			</td>\r\n			<td>\r\n				Applies a 2D or 3D transformation to an element\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_transform-origin.asp">transform-origin</a> \r\n			</td>\r\n			<td>\r\n				Allows you to change the position on transformed elements\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_transform-style.asp">transform-style</a> \r\n			</td>\r\n			<td>\r\n				Specifies how nested elements are rendered in 3D space\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_perspective.asp">perspective</a> \r\n			</td>\r\n			<td>\r\n				Specifies the perspective on how 3D elements are viewed\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_perspective-origin.asp">perspective-origin</a> \r\n			</td>\r\n			<td>\r\n				Specifies the bottom position of 3D elements\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<a href="http://www.w3schools.com/cssref/css3_pr_backface-visibility.asp">backface-visibility</a> \r\n			</td>\r\n			<td>\r\n				Defines whether or not an element should be visible when not facing the screen\r\n			</td>\r\n			<td>\r\n				3\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<h2>\r\n	3D Transform Methods\r\n</h2>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Function\r\n			</th>\r\n			<th>\r\n				Description\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				matrix3d<br />\r\n(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)\r\n			</td>\r\n			<td>\r\n				Defines a 3D transformation, using a 4x4 matrix of 16 values\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				translate3d(x,y,z)\r\n			</td>\r\n			<td>\r\n				Defines a 3D translation\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				translateX(x)\r\n			</td>\r\n			<td>\r\n				Defines a 3D translation, using only the value for the X-axis\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				translateY(y)\r\n			</td>\r\n			<td>\r\n				Defines a 3D translation, using only the value for the Y-axis\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				translateZ(z)\r\n			</td>\r\n			<td>\r\n				Defines a 3D translation, using only the value for the Z-axis\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				scale3d(x,y,z)\r\n			</td>\r\n			<td>\r\n				Defines a 3D scale transformation\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				scaleX(x)\r\n			</td>\r\n			<td>\r\n				Defines a 3D scale transformation by giving a value for the X-axis\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				scaleY(y)\r\n			</td>\r\n			<td>\r\n				Defines a 3D scale transformation by giving a value for the Y-axis\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				scaleZ(z)\r\n			</td>\r\n			<td>\r\n				Defines a 3D scale transformation by giving a value for the Z-axis\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				rotate3d(x,y,z,angle)\r\n			</td>\r\n			<td>\r\n				Defines a 3D rotation\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				rotateX(angle)\r\n			</td>\r\n			<td>\r\n				Defines a 3D rotation along the X-axis\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				rotateY(angle)\r\n			</td>\r\n			<td>\r\n				Defines a 3D rotation along the Y-axis\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				rotateZ(angle)\r\n			</td>\r\n			<td>\r\n				Defines a 3D rotation along the Z-axis\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				perspective(n)\r\n			</td>\r\n			<td>\r\n				Defines a perspective view for a 3D transformed element<br />\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>', 15, 'css3', 1, 0, 1, '2013-03-10 12:09:49'),
(182, 'CSS3 word-wrap Property', '<p>\r\n	<a href="http://www.w3schools.com/cssref/default.asp"><img src="http://www.w3schools.com/images/up.gif" alt="CSS Reference" title="CSS3&nbsp;&lt;wbr&gt;word-wrap&nbsp;&lt;wbr&gt;Property" style="height:22px;width:18px;" />&nbsp;Complete CSS Reference</a> \r\n</p>\r\n<div>\r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<p>\r\n		Allow long words to be able to break and wrap onto the next line:\r\n	</p>\r\n	<div>\r\n		p.test {word-wrap:break-word;}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_word-wrap">Try it yourself »</a> \r\n</div>\r\n<hr />\r\n<h2>\r\n	Browser Support\r\n</h2>\r\n<p>\r\n	<img src="http://www.w3schools.com/images/compatible_ie.gif" width="31" height="30" alt="Internet Explorer" title="Internet Explorer" />&nbsp;<img src="http://www.w3schools.com/images/compatible_firefox.gif" width="31" height="30" alt="Firefox" title="Firefox" />&nbsp;<img src="http://www.w3schools.com/images/compatible_opera.gif" width="28" height="30" alt="Opera" title="Opera" />&nbsp;<img src="http://www.w3schools.com/images/compatible_chrome.gif" width="31" height="30" alt="Google Chrome" title="Google Chrome" />&nbsp;<img src="http://www.w3schools.com/images/compatible_safari.gif" width="28" height="30" alt="Safari" title="Safari" /> \r\n</p>\r\n<p>\r\n	The word-wrap property is supported in all major browsers.\r\n</p>\r\n<hr />\r\n<h2>\r\n	Definition and Usage\r\n</h2>\r\n<p>\r\n	The word-wrap property allows long words to be able to be broken and wrap onto the next line.\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Default value:\r\n			</th>\r\n			<td>\r\n				normal\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				Inherited:\r\n			</th>\r\n			<td>\r\n				yes\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				Version:\r\n			</th>\r\n			<td>\r\n				CSS3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				JavaScript syntax:\r\n			</th>\r\n			<td>\r\n				object.style.wordWrap="break-word"\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n<hr />\r\n<h2>\r\n	Syntax\r\n</h2>\r\n<div>\r\n	<div>\r\n		word-wrap: normal|break-word;\r\n	</div>\r\n</div>\r\n<br />\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Value\r\n			</th>\r\n			<th>\r\n				Description\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				normal\r\n			</td>\r\n			<td>\r\n				Break words only at allowed break points\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				break-word\r\n			</td>\r\n			<td>\r\n				Allows unbreakable words to be broken\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n<hr />\r\n<h2>\r\n	Related Pages\r\n</h2>\r\n<p>\r\n	CSS3 tutorial:&nbsp;<a href="http://www.w3schools.com/css3/css3_text_effects.asp">CSS3 Text Effects</a> \r\n</p>', 15, 'css3', 1, 0, 1, '2013-03-10 12:10:23'),
(183, 'CSS3 text-shadow Property', '<p>\r\n	<a href="http://www.w3schools.com/cssref/default.asp"><img src="http://www.w3schools.com/images/up.gif" alt="CSS Reference" title="CSS3&nbsp;&lt;wbr&gt;text-shadow&nbsp;&lt;wbr&gt;Property" style="height:22px;width:18px;" />&nbsp;Complete CSS Reference</a> \r\n</p>\r\n<div>\r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<p>\r\n		Basic text-shadow:\r\n	</p>\r\n	<div>\r\n		h1<br />\r\n{<br />\r\ntext-shadow: 2px 2px #ff0000;<br />\r\n}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_text-shadow">Try it yourself »</a><br />\r\nMore examples at the bottom of this page.\r\n</div>\r\n<hr />\r\n<h2>\r\n	Browser Support\r\n</h2>\r\n<p>\r\n	<img src="http://www.w3schools.com/images/incompatible_ie.gif" width="31" height="30" alt="Internet Explorer" title="Internet Explorer" />&nbsp;<img src="http://www.w3schools.com/images/compatible_firefox.gif" width="31" height="30" alt="Firefox" title="Firefox" />&nbsp;<img src="http://www.w3schools.com/images/compatible_opera.gif" width="28" height="30" alt="Opera" title="Opera" />&nbsp;<img src="http://www.w3schools.com/images/compatible_chrome.gif" width="31" height="30" alt="Google Chrome" title="Google Chrome" />&nbsp;<img src="http://www.w3schools.com/images/compatible_safari.gif" width="28" height="30" alt="Safari" title="Safari" /> \r\n</p>\r\n<p>\r\n	The text-shadow property is supported in all major browsers, except Internet Explorer.\r\n</p>\r\n<hr />\r\n<h2>\r\n	Definition and Usage\r\n</h2>\r\n<p>\r\n	The text-shadow property applies shadow to text.\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Default value:\r\n			</th>\r\n			<td>\r\n				none\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				Inherited:\r\n			</th>\r\n			<td>\r\n				yes\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				Version:\r\n			</th>\r\n			<td>\r\n				CSS3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				JavaScript syntax:\r\n			</th>\r\n			<td>\r\n				object.style.textShadow="2px 2px #ff0000"\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n<hr />\r\n<h2>\r\n	Syntax\r\n</h2>\r\n<div>\r\n	<div>\r\n		text-shadow:&nbsp;h-shadow v-shadow blur color;\r\n	</div>\r\n</div>\r\n<p>\r\n	Note:&nbsp;The text-shadow property attaches one or more shadows to text. The property is a comma-separated list of shadows, each specified by 2 or 3 length values and an optional color. Omitted lengths are 0.\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Value\r\n			</th>\r\n			<th>\r\n				Description\r\n			</th>\r\n			<th>\r\n				Play it\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				h-shadow\r\n			</td>\r\n			<td>\r\n				Required. The position of the horizontal shadow. Negative values are allowed\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_text-shadow">Play it »</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				v-shadow\r\n			</td>\r\n			<td>\r\n				Required. The position of the vertical shadow. Negative values are allowed\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_text-shadow">Play it »</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				blur\r\n			</td>\r\n			<td>\r\n				Optional. The blur distance\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_text-shadow&amp;pr=5px%205px%205px%20red">Play it »</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				color\r\n			</td>\r\n			<td>\r\n				Optional. The color of the shadow. Look at&nbsp;<a href="http://www.w3schools.com/cssref/css_colors_legal.asp">CSS Color Values</a>&nbsp;for a complete list of possible color values\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_text-shadow&amp;pr=5px%205px%2010px%20blue">Play it »</a> \r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n<hr />\r\n<div>\r\n	<img src="http://www.w3schools.com/images/tryitimg.gif" width="40" height="46px" alt="Examples" title="CSS3&nbsp;&lt;wbr&gt;text-shadow&nbsp;&lt;wbr&gt;Property" /> \r\n	<h2>\r\n		Try it Yourself - Examples\r\n	</h2>\r\n</div>\r\n<p>\r\n	<a target="_blank" href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_text-shadow_blur">Text-shadow with a blur effect</a><br />\r\nThis example demonstrates a text-shadow with a blur effect.\r\n</p>\r\n<p>\r\n	<a target="_blank" href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_text-shadow_white">Text-shadow on white text</a><br />\r\nThis example demonstrates text-shadow on a white text.\r\n</p>\r\n<p>\r\n	<a target="_blank" href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_text-shadow_neon">Text-shadow with neon glow</a><br />\r\nThis example demonstrates text-shadow with a neon glow.\r\n</p>\r\n<hr />\r\n<h2>\r\n	Related Pages\r\n</h2>\r\n<p>\r\n	CSS3 tutorial:&nbsp;<a href="http://www.w3schools.com/css3/css3_text_effects.asp">CSS3 Text Effects</a> \r\n</p>', 15, 'css3', 1, 0, 1, '2013-03-10 12:10:53'),
(184, 'CSS3 background-size Property', '<div>\r\n	<h2>\r\n		Example\r\n	</h2>\r\n	<p>\r\n		Specify the size of a background image:\r\n	</p>\r\n	<div>\r\n		div<br />\r\n{<br />\r\nbackground:url(img_flwr.gif);<br />\r\nbackground-size:80px 60px;<br />\r\nbackground-repeat:no-repeat;<br />\r\n}\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_background-size">Try it yourself »</a><br />\r\nMore examples at the bottom of this page.\r\n</div>\r\n<hr />\r\n<h2>\r\n	Browser Support\r\n</h2>\r\n<p>\r\n	<img src="http://www.w3schools.com/images/compatible_ie.gif" width="31" height="30" alt="Internet Explorer" title="Internet Explorer" />&nbsp;<img src="http://www.w3schools.com/images/compatible_firefox.gif" width="31" height="30" alt="Firefox" title="Firefox" />&nbsp;<img src="http://www.w3schools.com/images/compatible_opera.gif" width="28" height="30" alt="Opera" title="Opera" />&nbsp;<img src="http://www.w3schools.com/images/compatible_chrome.gif" width="31" height="30" alt="Google Chrome" title="Google Chrome" />&nbsp;<img src="http://www.w3schools.com/images/compatible_safari.gif" width="28" height="30" alt="Safari" title="Safari" /> \r\n</p>\r\n<p>\r\n	The background-size property is supported in IE9+, Firefox 4+, Opera, Chrome, and Safari 5+.\r\n</p>\r\n<hr />\r\n<h2>\r\n	Definition and Usage\r\n</h2>\r\n<p>\r\n	The background-size property specifies the size of the background images.\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Default value:\r\n			</th>\r\n			<td>\r\n				auto\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				Inherited:\r\n			</th>\r\n			<td>\r\n				no\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				Version:\r\n			</th>\r\n			<td>\r\n				CSS3\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				JavaScript syntax:\r\n			</th>\r\n			<td>\r\n				object.style.backgroundSize="60px 80px"\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n<hr />\r\n<h2>\r\n	Syntax\r\n</h2>\r\n<div>\r\n	<div>\r\n		background-size:&nbsp;length|percentage|cover|contain;\r\n	</div>\r\n</div>\r\n<br />\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				Value\r\n			</th>\r\n			<th>\r\n				Description\r\n			</th>\r\n			<th>\r\n				Play it\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				length\r\n			</td>\r\n			<td>\r\n				Sets the height and width of the background image. The first value sets the width, the second value sets the height. If only one value is given, the second is set to "auto"\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_background-size">Play it »</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				percentage\r\n			</td>\r\n			<td>\r\n				Sets the height and width of the background image in percent of the parent element. The first value sets the width, the second value sets the height. If only one value is given, the second is set to "auto"\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_background-size&amp;pr=50%">Play it »</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				cover\r\n			</td>\r\n			<td>\r\n				Scale the background image to be as large as possible so that the background area is completely covered by the background image. Some parts of the background image may not be in view within the background positioning area\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_background-size&amp;pr=cover">Play it »</a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				contain\r\n			</td>\r\n			<td>\r\n				Scale the image to the largest size such that both its width and its height can fit inside the content area\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_background-size&amp;pr=contain">Play it »</a> \r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n<hr />\r\n<div>\r\n	<img src="http://www.w3schools.com/images/tryitimg.gif" width="40" height="46px" alt="Examples" title="CSS3&nbsp;&lt;wbr&gt;background-size&nbsp;&lt;wbr&gt;Property" /> \r\n	<h2>\r\n		Try it Yourself - Examples\r\n	</h2>\r\n</div>\r\n<p>\r\n	<a target="_blank" href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_background-size2">Stretch the background-image</a><br />\r\nStretch the background image to completely cover the content area.\r\n</p>\r\n<p>\r\n	<a target="_blank" href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_background-size3">Stretch the background-image to four copies horizontally</a><br />\r\nStretch the background image so that exactly four copies fit horizontally.\r\n</p>\r\n<hr />\r\n<h2>\r\n	Related Pages\r\n</h2>\r\n<p>\r\n	CSS3 tutorial:&nbsp;<a href="http://www.w3schools.com/css3/css3_backgrounds.asp">CSS3 Backgrounds</a> \r\n</p>', 15, 'css3', 1, 0, 1, '2013-03-10 12:11:46');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(185, 'CSS3 border-radius Property', '<div>\r\n	<h2>\r\n		<span style="font-size:14px;">Example</span>\r\n	</h2>\r\n	<p>\r\n		<span style="font-size:14px;">Add rounded borders to a div element:</span>\r\n	</p>\r\n	<div>\r\n		<span style="font-size:14px;">div</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> border:2px solid;</span><br />\r\n<span style="font-size:14px;"> border-radius:25px;</span><br />\r\n<span style="font-size:14px;"> }</span>\r\n	</div>\r\n<br />\r\n<a target="_blank" href="http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_border-radius"><span style="font-size:14px;">Try it yourself »</span></a> \r\n</div>\r\n<hr />\r\n<h2>\r\n	<span style="font-size:14px;">Browser Support</span>\r\n</h2>\r\n<p>\r\n	<img src="http://www.w3schools.com/images/compatible_ie.gif" width="31" height="30" alt="Internet Explorer" title="Internet Explorer" /><span style="font-size:14px;">&nbsp;</span><img src="http://www.w3schools.com/images/compatible_firefox.gif" width="31" height="30" alt="Firefox" title="Firefox" /><span style="font-size:14px;">&nbsp;</span><img src="http://www.w3schools.com/images/compatible_opera.gif" width="28" height="30" alt="Opera" title="Opera" /><span style="font-size:14px;">&nbsp;</span><img src="http://www.w3schools.com/images/compatible_chrome.gif" width="31" height="30" alt="Google Chrome" title="Google Chrome" /><span style="font-size:14px;">&nbsp;</span><img src="http://www.w3schools.com/images/compatible_safari.gif" width="28" height="30" alt="Safari" title="Safari" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">The border-radius property is supported in IE9+, Firefox 4+, Chrome, Safari 5+, and Opera.</span>\r\n</p>\r\n<hr />\r\n<h2>\r\n	<span style="font-size:14px;">Definition and Usage</span>\r\n</h2>\r\n<p>\r\n	<span style="font-size:14px;">The border-radius property is a shorthand property for setting the four border-*-radius properties.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Tip:&nbsp;This property allows you to add rounded borders to elements!</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				<span style="font-size:14px;">Default value:</span>\r\n			</th>\r\n			<td>\r\n				<span style="font-size:14px;">0</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				<span style="font-size:14px;">Inherited:</span>\r\n			</th>\r\n			<td>\r\n				<span style="font-size:14px;">no</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				<span style="font-size:14px;">Version:</span>\r\n			</th>\r\n			<td>\r\n				<span style="font-size:14px;">CSS3</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				<span style="font-size:14px;">JavaScript syntax:</span>\r\n			</th>\r\n			<td>\r\n				<span style="font-size:14px;">object.style.borderRadius="5px"</span>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n<hr />\r\n<h2>\r\n	<span style="font-size:14px;">Syntax</span>\r\n</h2>\r\n<div>\r\n	<div>\r\n		<span style="font-size:14px;">border-radius:&nbsp;1-4 length|%&nbsp;/&nbsp;1-4 length|%;</span>\r\n	</div>\r\n</div>\r\n<p>\r\n	<span style="font-size:14px;">Note:&nbsp;The four values for each radii are given in the order top-left, top-right, bottom-right, bottom-left. If bottom-left is omitted it is the same as top-right. If bottom-right is omitted it is the same as top-left. If top-right is omitted it is the same as top-left.</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				<span style="font-size:14px;">Value</span>\r\n			</th>\r\n			<th>\r\n				<span style="font-size:14px;">Description</span>\r\n			</th>\r\n			<th>\r\n				<span style="font-size:14px;">Play it</span>\r\n			</th>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<span style="font-size:14px;">length</span>\r\n			</td>\r\n			<td>\r\n				<span style="font-size:14px;">Defines the shape of the corners</span>\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_border-radius"><span style="font-size:14px;">Play it »</span></a> \r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<span style="font-size:14px;">%</span>\r\n			</td>\r\n			<td>\r\n				<span style="font-size:14px;">Defines the shape of the corners in %</span>\r\n			</td>\r\n			<td>\r\n				<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_border-radius&amp;pr=10%"><span style="font-size:14px;">Play it »</span></a> \r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<h2>\r\n	<span style="font-size:14px;">Example 1</span>\r\n</h2>\r\n<div>\r\n	<div>\r\n		<span style="font-size:14px;">border-radius:2em;</span><br />\r\n<br />\r\n<span style="font-size:14px;"> is equivalent to:</span><br />\r\n<br />\r\n<span style="font-size:14px;"> border-top-left-radius:2em;</span><br />\r\n<span style="font-size:14px;"> border-top-right-radius:2em;</span><br />\r\n<span style="font-size:14px;"> border-bottom-right-radius:2em;</span><br />\r\n<span style="font-size:14px;"> border-bottom-left-radius:2em;</span>\r\n	</div>\r\n</div>\r\n<h2>\r\n	<span style="font-size:14px;">Example 2</span>\r\n</h2>\r\n<div>\r\n	<div>\r\n		<span style="font-size:14px;">border-radius: 2em 1em 4em / 0.5em 3em;</span><br />\r\n<br />\r\n<span style="font-size:14px;"> is equivalent to:</span><br />\r\n<br />\r\n<span style="font-size:14px;"> border-top-left-radius: 2em 0.5em;</span><br />\r\n<span style="font-size:14px;"> border-top-right-radius: 1em 3em;</span><br />\r\n<span style="font-size:14px;"> border-bottom-right-radius: 4em 0.5em;</span><br />\r\n<span style="font-size:14px;"> border-bottom-left-radius: 1em 3em;</span>\r\n	</div>\r\n</div>\r\n<br />\r\n<hr />\r\n<h2>\r\n	<span style="font-size:14px;">Related Pages</span>\r\n</h2>\r\n<div>\r\n	<br />\r\n</div>', 15, 'css3', 1, 0, 1, '2013-03-10 12:12:14'),
(186, 'CSS3 box-shadow Property', '<span style="font-size:14px;">Example</span>\r\n<p>\r\n	<span style="font-size:14px;">Add a box-shadow to a div element:</span>\r\n</p>\r\n<div>\r\n	<span style="font-size:14px;">div</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> box-shadow: 10px 10px 5px #888888;</span><br />\r\n<span style="font-size:14px;"> }</span>\r\n</div>\r\n<h2>\r\n	<span style="font-size:14px;">Definition and Usage</span>\r\n</h2>\r\n<p>\r\n	<span style="font-size:14px;">The box-shadow property attaches one or more drop-shadows to the box.</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th>\r\n				<span style="font-size:14px;">Default value:</span>\r\n			</th>\r\n			<td>\r\n				<span style="font-size:14px;">none</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				<span style="font-size:14px;">Inherited:</span>\r\n			</th>\r\n			<td>\r\n				<span style="font-size:14px;">no</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				<span style="font-size:14px;">Version:</span>\r\n			</th>\r\n			<td>\r\n				<span style="font-size:14px;">CSS3</span>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th>\r\n				<span style="font-size:14px;">JavaScript syntax:</span>\r\n			</th>\r\n			<td>\r\n				<span style="font-size:14px;">object.style.boxShadow="10px 10px 5px #888888"</span>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n<div>\r\n	<h2>\r\n		<span style="font-size:14px;">Syntax</span>\r\n	</h2>\r\n	<div>\r\n		<div>\r\n			<span style="font-size:14px;">box-shadow:&nbsp;h-shadow v-shadow blur spread color&nbsp;inset;</span>\r\n		</div>\r\n	</div>\r\n	<p>\r\n		<span style="font-size:14px;">Note:&nbsp;The box-shadow property attaches one or more drop-shadows to the box. The property is a comma-separated list of shadows, each specified by 2-4 length values, an optional color, and an optional inset keyword. Omitted lengths are 0.&nbsp;</span>\r\n	</p>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<th>\r\n					<span style="font-size:14px;">Value</span>\r\n				</th>\r\n				<th>\r\n					<span style="font-size:14px;">Description</span>\r\n				</th>\r\n				<th>\r\n					<span style="font-size:14px;">Play it</span>\r\n				</th>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<span style="font-size:14px;">h-shadow</span>\r\n				</td>\r\n				<td>\r\n					<span style="font-size:14px;">Required. The position of the horizontal shadow. Negative values are allowed</span>\r\n				</td>\r\n				<td>\r\n					<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_box-shadow"><span style="font-size:14px;">Play it »</span></a> \r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<span style="font-size:14px;">v-shadow</span>\r\n				</td>\r\n				<td>\r\n					<span style="font-size:14px;">Required. The position of the vertical shadow. Negative values are allowed</span>\r\n				</td>\r\n				<td>\r\n					<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_box-shadow"><span style="font-size:14px;">Play it »</span></a> \r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<span style="font-size:14px;">blur</span>\r\n				</td>\r\n				<td>\r\n					<span style="font-size:14px;">Optional. The blur distance</span>\r\n				</td>\r\n				<td>\r\n					<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_box-shadow&amp;pr=50px%2050px%205px%20black"><span style="font-size:14px;">Play it »</span></a> \r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<span style="font-size:14px;">spread</span>\r\n				</td>\r\n				<td>\r\n					<span style="font-size:14px;">Optional. The size of shadow</span>\r\n				</td>\r\n				<td>\r\n					<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_box-shadow&amp;pr=50px%2050px%2050px%205px%20black"><span style="font-size:14px;">Play it »</span></a> \r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<span style="font-size:14px;">color</span>\r\n				</td>\r\n				<td>\r\n					<span style="font-size:14px;">Optional. The color of the shadow. Look at&nbsp;</span><a href="http://www.w3schools.com/cssref/css_colors_legal.asp"><span style="font-size:14px;">CSS Color Values</span></a><span style="font-size:14px;">&nbsp;for a complete list of possible color values</span>\r\n				</td>\r\n				<td>\r\n					<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_box-shadow&amp;pr=50px%2050px%2050px%2020px%20red"><span style="font-size:14px;">Play it »</span></a> \r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<span style="font-size:14px;">inset</span>\r\n				</td>\r\n				<td>\r\n					<span style="font-size:14px;">Optional. Changes the shadow from an outer shadow (outset) to an inner shadow</span>\r\n				</td>\r\n				<td>\r\n					<a target="_blank" href="http://www.w3schools.com/cssref/playit.asp?filename=playcss_box-shadow&amp;pr=10px%2010px%2050px%2020px%20pink%20inset"><span style="font-size:14px;">Play it »</span></a> \r\n					<div>\r\n						<br />\r\n					</div>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</div>', 15, 'css3', 1, 0, 1, '2013-03-10 12:12:37'),
(187, 'ThinkPHP3.1快速入门（12）自动验证', '<p>\r\n	<span style="font-size:14px;">自动验证是ThinkPHP模型层提供的一种数据验证方法，可以在使用create创建数据对象的时候自动进行数据验证。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">验证规则</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据验证可以进行数据类型、业务规则、安全判断等方面的验证操作。</span><br />\r\n<span style="font-size:14px;"> 数据验证有两种方式：</span><br />\r\n<span style="font-size:14px;"> 静态方式：在模型类里面通过$_validate属性定义验证规则。</span><br />\r\n<span style="font-size:14px;"> 动态方式：使用模型类的validate方法动态创建自动验证规则。</span><br />\r\n<span style="font-size:14px;"> 无论是什么方式，验证规则的定义是统一的规则，定义格式为：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(验证字段1,验证规则,错误提示,[验证条件,附加规则,验证时间]),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(验证字段2,验证规则,错误提示,[验证条件,附加规则,验证时间]),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">说明</span><br />\r\n<span style="font-size:14px;"> 验证字段：（必须）需要验证的表单字段名称，这个字段不一定是数据库字段，也可以是表单的一些辅助字段，例如确认密码和验证码等等。有个别验证规则和字段无关的情况下，验证字段是可以随意设置的，例如expire有效期规则是和表单字段无关的。</span><br />\r\n<span style="font-size:14px;"> 验证规则：（必须）要进行验证的规则，需要结合附加规则，如果在使用正则验证的附加规则情况下，系统还内置了一些常用正则验证的规则，可以直接作为验证规则使用，包括：require&nbsp;字段必须、email&nbsp;邮箱、url&nbsp;URL地址、currency&nbsp;货币、number&nbsp;数字。</span><br />\r\n<span style="font-size:14px;"> 提示信息：（必须）用于验证失败后的提示信息定义</span><br />\r\n<span style="font-size:14px;"> 验证条件：（可选）包含下面几种情况：</span><br />\r\n<span style="font-size:14px;"> Model::EXISTS_VALIDATE&nbsp;或者0&nbsp;存在字段就验证（默认）</span><br />\r\n<span style="font-size:14px;"> Model::MUST_VALIDATE&nbsp;或者1&nbsp;必须验证</span><br />\r\n<span style="font-size:14px;"> Model::VALUE_VALIDATE或者2&nbsp;值不为空的时候验证</span><br />\r\n<span style="font-size:14px;"> 附加规则：（可选）配合验证规则使用，包括下面一些规则：</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">regex</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">正则验证，定义的验证规则是一个正则表达式（默认）</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">function</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">函数验证，定义的验证规则是一个函数名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">callback</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">方法验证，定义的验证规则是当前模型类的一个方法</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">confirm</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">验证表单中的两个字段是否相同，定义的验证规则是一个字段名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">equal</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">验证是否等于某个值，该值由前面的验证规则定义</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">in</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">验证是否在某个范围内，定义的验证规则必须是一个数组</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">length</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">验证长度，定义的验证规则可以是一个数字（表示固定长度）或者数字范围（例如3,12&nbsp;表示长度从3到12的范围）</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">between</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">验证范围，定义的验证规则表示范围，可以使用字符串或者数组，例如1,31或者array(1,31)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">expire</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">验证是否在有效期，定义的验证规则表示时间范围，可以到时间，例如可以使用&nbsp;2012-1-15,2013-1-15&nbsp;表示当前提交有效期在2012-1-15到2013-1-15之间，也可以使用时间戳定义</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">ip_allow</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">验证IP是否允许，定义的验证规则表示允许的IP地址列表，用逗号分隔，例如201.12.2.5,201.12.2.6</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">ip_deny</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">验证IP是否禁止，定义的验证规则表示禁止的ip地址列表，用逗号分隔，例如201.12.2.5,201.12.2.6</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">unique</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">验证是否唯一，系统会根据字段目前的值查询数据库来判断是否存在相同的值。</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">验证时间：（可选）</span><br />\r\n<span style="font-size:14px;"> Model::MODEL_INSERT或者1新增数据时候验证</span><br />\r\n<span style="font-size:14px;"> Model::MODEL_UPDATE或者2编辑数据时候验证</span><br />\r\n<span style="font-size:14px;"> Model::MODEL_BOTH或者3全部情况下验证（默认）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">静态定义</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在模型类里面预先定义好该模型的自动验证规则，我们称为静态定义。</span><br />\r\n<span style="font-size:14px;"> 举例说明，我们在模型类里面定义了$_validate属性如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6&nbsp;class&nbsp;UserModel&nbsp;extends&nbsp;Model{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7&nbsp;&nbsp;&nbsp;protected&nbsp;$_validate&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''verify'',''require'',''验证码必须！''),&nbsp;//默认情况下用正则进行验证</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''name'','''',''帐号名称已经存在！'',0,''unique'',1),&nbsp;//&nbsp;在新增的时候验证name字段是否唯一</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''value'',array(1,2,3),''值的范围不正确！'',2,''in''),&nbsp;//&nbsp;当值不为空的时候判断是否在一个范围内</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''repassword'',''password'',''确认密码不正确'',0,''confirm''),&nbsp;//&nbsp;验证确认密码是否和密码一致</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''password'',''checkPwd'',''密码格式不正确'',0,''function''),&nbsp;//&nbsp;自定义函数验证密码格式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13&nbsp;&nbsp;&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">定义好验证规则后，就可以在使用create方法创建数据对象的时候自动调用：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">15&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">16&nbsp;if&nbsp;(!$User-&gt;create()){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;如果创建失败&nbsp;表示验证没有通过&nbsp;输出错误提示信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit($User-&gt;getError());</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">19&nbsp;}else{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证通过&nbsp;可以进行其他数据操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">21&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在进行自动验证的时候，系统会对定义好的验证规则进行依次验证。如果某一条验证规则没有通过，则会报错，getError方法返回的错误信息（字符串）就是对应字段的验证规则里面的错误提示信息。</span><br />\r\n<span style="font-size:14px;"> 默认情况下，create方法是对表单提交的POST数据进行自动验证，如果你的数据来源不是表单post，仍然也可以进行自动验证，方法改进如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">22&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">23&nbsp;$data&nbsp;=&nbsp;getData();&nbsp;//&nbsp;通过getData方法获取数据源的（数组）数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">24&nbsp;if&nbsp;(!$User-&gt;create($data)){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;对data数据进行验证</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">26&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit($User-&gt;getError());</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">27&nbsp;}else{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">28&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证通过&nbsp;可以进行其他数据操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">29&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般情况下，create方法会自动判断当前是新增数据还是编辑数据（主要是通过表单的隐藏数据添加主键信息），你也可以明确指定当前创建的数据对象是新增还是编辑，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">30&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">31&nbsp;if&nbsp;(!$User-&gt;create($_POST,1)){&nbsp;//&nbsp;指定新增数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;如果创建失败&nbsp;表示验证没有通过&nbsp;输出错误提示信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">33&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit($User-&gt;getError());</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">34&nbsp;}else{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">35&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证通过&nbsp;可以进行其他数据操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">36&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">create方法的第二个参数就用于指定自动验证规则中的验证时间，也就是说create方法的自动验证只会验证符合验证时间的验证规则。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">动态验证</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果采用动态验证的方式，就比较灵活，可以根据不同的需要，在操作同一个模型的时候使用不同的验证规则，例如上面的静态验证方式可以改为：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">37&nbsp;$rules&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">38&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''verify'',''require'',''验证码必须！''),&nbsp;//默认情况下用正则进行验证</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">39&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''name'','''',''帐号名称已经存在！'',0,''unique'',1),&nbsp;//&nbsp;在新增的时候验证name字段是否唯一</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">40&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''value'',array(1,2,3),''值的范围不正确！'',2,''in''),&nbsp;//&nbsp;当值不为空的时候判断是否在一个范围内</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">41&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''repassword'',''password'',''确认密码不正确'',0,''confirm''),&nbsp;//&nbsp;验证确认密码是否和密码一致</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">42&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''password'',''checkPwd'',''密码格式不正确'',0,''function''),&nbsp;//&nbsp;自定义函数验证密码格式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">43&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">44&nbsp;$User&nbsp;=&nbsp;M("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">45&nbsp;if&nbsp;(!$User-&gt;validate($rules)-&gt;create()){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">46&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;如果创建失败&nbsp;表示验证没有通过&nbsp;输出错误提示信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">47&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit($User-&gt;getError());</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">48&nbsp;}else{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">49&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证通过&nbsp;可以进行其他数据操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">50&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">错误信息多语言支持</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你希望支持多语言的错误信息提示，那么可以在验证规则里面如下定义：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">51&nbsp;protected&nbsp;$_validate&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">52&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''verify'',''require'',''{%VERIFY_CODE_MUST}''),&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">53&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''name'','''',''{�COUNT_EXISTS}'',0,''unique'',1),&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">54&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其中VERIFY_CODE_MUST和ACCOUNT_EXISTS是我们在语言包里面定义的多语言变量。</span><br />\r\n<span style="font-size:14px;"> 如果是采用动态验证方式，则比较简单，直接在定义验证规则的时候使用L方法即可，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">55&nbsp;$rules&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">56&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''verify'',''require'',L(''VERIFY_CODE_MUST'')),&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">57&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''name'','''',L(''ACCOUNT_EXISTS''),0,''unique'',1),&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">58&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">批量验证</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">系统支持数据的批量验证功能，只需要在模型类里面设置patchValidate属性为true（&nbsp;默认为false），</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">59&nbsp;protected&nbsp;$patchValidate&nbsp;=&nbsp;true;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置批处理验证后，getError()&nbsp;方法返回的错误信息是一个数组，返回格式是：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">60&nbsp;array("字段名1"=&gt;"错误提示1","字段名2"=&gt;"错误提示2"...&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">前端可以根据需要需要自行处理，例如转换成json格式返回：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">61&nbsp;$User&nbsp;=&nbsp;D("User");&nbsp;//&nbsp;实例化User对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">62&nbsp;if&nbsp;(!$User-&gt;create()){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">63&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;如果创建失败&nbsp;表示验证没有通过&nbsp;输出错误提示信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">64&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;ajaxReturn($User-&gt;getError());</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">65&nbsp;}else{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">66&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;验证通过&nbsp;可以进行其他数据操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">67&nbsp;}</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:13:24'),
(188, '网页设计中常用的19个Web安全字体 ', '<p>\r\n	<span style="font-size:14px;">1,&nbsp;&nbsp;Arial</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">微软公司的网页核心字体之一，最常用的sans serif字体，当字号很小时不容易阅读。但是，大写的“I”和小写的“l”是无法区别的，你可以考虑用Tahoma字体来替代。</span><br />\r\n<span style="font-size:14px;"> （苹果系统没有这种字体，但有一种对应于Arial的字体叫Helvetica，它是MAC机上与Arial 字体最相似的WEB字体,是别一种非衬线字体.它是一种性能优良的打印字体,但在屏幕上表现不是很好，说道Helvetica字体，昨天发现了很多有意思的站点，主要是纪念Helvetica字体诞生50年而设的。）</span>\r\n</p>\r\n<p>\r\n	<img alt="Arial" src="http://www.jb51.net/do/uploads/allimg/091227/1607550.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: Arial, Helvetica, sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2, Arial Black</span>\r\n</p>\r\n<p>\r\n	<img alt="ArialBlack" src="http://www.jb51.net/do/uploads/allimg/091227/1607551.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ‘Arial Black’, Gadget, sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3, Arial Narrow</span>\r\n</p>\r\n<p>\r\n	<img alt="ArialNarrow" src="http://www.jb51.net/do/uploads/allimg/091227/1607552.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ‘Arial Narrow’, sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4, Verdana</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">微软公司的网页核心字体之一，微软公司专门为屏幕显示而开发的。应用广泛。易于阅读。是显示器中最清晰的字体，即使字号很小，也很容易阅读。半肥猫比较喜欢采用10PX的Verdana来做英文正文字体，也推荐大家使用，但字号最好介于10~14像素之间，超出这个范围就不好看了。</span>\r\n</p>\r\n<p>\r\n	<img alt="Verdana" src="http://www.jb51.net/do/uploads/allimg/091227/1607553.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: Verdana, Geneva, sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5,&nbsp;&nbsp;Georgia</span><br />\r\n<span style="font-size:14px;"> 微软公司的网页核心字体之一，可用性好。可读性比Times New Roman强。是网站设计中，浏览效果最好的serif字体，因为它是专为网上阅读设计的。）</span>\r\n</p>\r\n<p>\r\n	<img alt="Georgia" src="http://www.jb51.net/do/uploads/allimg/091227/1607554.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: Georgia, serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6,&nbsp;&nbsp;Times New Roman</span><br />\r\n<span style="font-size:14px;"> 微软公司的网页核心字体之一，可能是最常用的serif字体，是网站浏览器默认的字体，12pt以上的字体容易阅读，但小字号的字体易读性差。（苹果系统没有这个字体，有一个对应于Times New Roman的字体叫Times）</span>\r\n</p>\r\n<p>\r\n	<img alt="Times New Roman" src="http://www.jb51.net/do/uploads/allimg/091227/1607555.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ''Times New Roman'', Times, serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7, Trebuchet MS</span><br />\r\n<span style="font-size:14px;"> 微软公司的网页核心字体之一，与Arial相似，半肥猫觉得：Trebuchet MS比Arial看起来优雅、古典一点。可以用来做标题，但小字号阅读起来会很困难（低于13PIX阅读起来就很累了，不太推荐用来做正文字体）。在苹果系统上也可以用Helvetica做替代。</span>\r\n</p>\r\n<p>\r\n	<img alt="Trebuchet MS" src="http://www.jb51.net/do/uploads/allimg/091227/1607556.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ''Trebuchet MS'', Helvetica, sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8 , Courier New</span><br />\r\n<span style="font-size:14px;"> 微软公司的网页核心字体之一，老式打印机字体，有一种独特的机械工整感觉。呈现计算机编码时，还会用到这种字体。12 pt的Courier New字体曾是美国国务院的公文标准字体，但于2004年1月停用，改使用14 pt的Times New Roman，因为其具“现代性”和“易读性”。</span>\r\n</p>\r\n<p>\r\n	<img alt="Courier New" src="http://www.jb51.net/do/uploads/allimg/091227/1607557.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ''Courier New'', Courier, monospace;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9,&nbsp;&nbsp;Impact</span><br />\r\n<span style="font-size:14px;"> 微软公司的网页核心字体之一，Impact是1965年发表的一个无衬线字体，其特粗的笔画、紧缩的间距。半肥猫觉得：字体较为粗犷，适合使用在标题上，而不常用在内文。</span>\r\n</p>\r\n<p>\r\n	<img alt="Impact" src="http://www.jb51.net/do/uploads/allimg/091227/1607558.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: Impact, Charcoal, sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10,&nbsp;&nbsp;Comic Sans MS</span><br />\r\n<span style="font-size:14px;"> 微软公司的网页核心字体之一，手写体。这是一种争议很大的字体，讲实话，半肥猫也不喜欢这个字体，一点美感都没有，不过在一大堆规规矩矩的字体里面，有这么一个随意性比较的字体，可以变换一下口味，也算不错吧，建议不要用在正规的金融、政府、商业机构站点。</span>\r\n</p>\r\n<p>\r\n	<img alt="Comic Sans MS" src="http://www.jb51.net/do/uploads/allimg/091227/1607559.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ''Comic Sans MS'', cursive;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11,&nbsp;&nbsp;Tahoma</span><br />\r\n<span style="font-size:14px;"> Tahoma是一个十分常见的无衬线字体，Tahoma和Verdana师出同为名设计师马修·卡特的作品，由微软在1999年推出，被采用为Windows 2000、Windows XP、Windows Server 2003等系统的默认字型。半肥猫觉得：它的字体结构和Verdana很相似，其字符间距较小，用来作为标题，效果好过Arial（Tahoma的大写I 和小写l比Arial容易识别），但如果作为正文，他的字号不能小于13PIX，否则很多笔画粘连到一起，不利于阅读。</span>\r\n</p>\r\n<p>\r\n	<img alt="Tahoma" src="http://www.jb51.net/do/uploads/allimg/091227/16075510.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: Tahoma, Geneva, sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12,&nbsp;&nbsp;Courier</span><br />\r\n<span style="font-size:14px;"> Courier是一个等宽字体的粗衬线字体，主要是依据打字机所打印出来的字型来设计。原来Courier New的字体是IBM公司在1950年代设计给打印机使用的字体，后来这个字型成为整个打字机制造业的标准。Courier New是Courier的变体，比Courier更具机械味道。</span>\r\n</p>\r\n<p>\r\n	<img alt="Courier New" src="http://www.jb51.net/do/uploads/allimg/091227/1607557.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: Courier, monospace;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13,&nbsp;&nbsp;Lucida Sans Unicode</span><br />\r\n<span style="font-size:14px;"> 是一种OpenType型的无衬线字体 。1993年制作并随微软公司的Windows NT 3.1操作系统发布。有较大的x字高，具有很好的可读性，被广泛用于显示、出版等各种用途。</span><br />\r\n<span style="font-size:14px;"> 它支持Unicode2.0版本的基本字符，包括拉丁字母，希腊字母，西里尔字母，希伯来字母，以及国际音标字符。该字体是首个 Unicode代码的字体， 该字体从Windows 98开始一直作为系统预装字体发行。</span><br />\r\n<span style="font-size:14px;"> 后来发布的 Lucida Grande字体作为苹果公司Mac OS X系统的默认字体发布。</span><br />\r\n<span style="font-size:14px;"> CSS写法：font-family: ''Lucida Sans Unicode'', ''Lucida Grande'', sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14, Lucida Console</span><br />\r\n<span style="font-size:14px;"> 同Lucida Sans Unicode类似。</span>\r\n</p>\r\n<p>\r\n	<img alt="Lucida Console" src="http://www.jb51.net/do/uploads/allimg/091227/16075512.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ''Lucida Console'', Monaco, monospace;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">15,&nbsp;&nbsp;Garamond</span><br />\r\n<span style="font-size:14px;"> Garamond（加拉蒙德）是一类西文衬线字体的总称，自16世纪40年代开始至今，有很多家公司和很多设计师参与到Garamond字体设计，如： Adobe Garamond, Monotype Garamond, Sioncini Garamond，和 Stempel Garamond等等。半肥猫觉得：字体给人端庄典雅，有些古典的感觉，在博物馆和历史性悠久的项目中使用，应该可以获得不错的效果。</span>\r\n</p>\r\n<p>\r\n	<img alt="Garamond" src="http://www.jb51.net/do/uploads/allimg/091227/16075513.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: Garamond, serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">16 ,&nbsp;&nbsp;MS Sans Serif</span><br />\r\n<span style="font-size:14px;"> 微软系统自带字体。屏幕显示的像素字体。非衬线字体。</span>\r\n</p>\r\n<p>\r\n	<img alt="MS Sans Serif" src="http://www.jb51.net/do/uploads/allimg/091227/16075514.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ''MS Sans Serif'', Geneva, sans-serif;</span><br />\r\n<span style="font-size:14px;"> 17 ,&nbsp;&nbsp;MS Serif</span><br />\r\n<span style="font-size:14px;"> 微软系统自带字体。屏幕显示的像素字体。衬线字体。</span><br />\r\n<span style="font-size:14px;"> CSS写法：font-family: ''MS Serif'', ''New York'', sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">18, Palatino Linotype</span>\r\n</p>\r\n<p>\r\n	<img alt="Palatino Linotype" src="http://www.jb51.net/do/uploads/allimg/091227/16075515.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ''Palatino Linotype'', ''Book Antiqua'', Palatino, serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">19, Symbol</span>\r\n</p>\r\n<p>\r\n	<img alt="Symbol" src="http://www.jb51.net/do/uploads/allimg/091227/16075516.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: Symbol, sans-serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">20, Bookman Old Style</span>\r\n</p>\r\n<p>\r\n	<img alt="Bookman Old Style" src="http://www.jb51.net/do/uploads/allimg/091227/16075517.png" title="网页设计中常用的19个Web安全字体" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CSS写法：font-family: ''Bookman Old Style'', serif;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">本文参考了WEB安全字体，希望在Web编写过程中这些核心的Web字体能对你有用。</span>\r\n</p>', 15, '字体', 1, 0, 1, '2013-03-10 12:13:50');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(189, 'ThinkPHP3.1快速入门（11）控制器高级特性', '<div>\r\n	<p>\r\n		<span style="font-size:14px;">ThinkPHP的控制器层由核心控制器和业务控制器组成，核心控制器由系统内部的App类完成，负责应用（包括模块和操作）的调度控制，包括HTTP请求拦截和转发、加载配置等，业务控制器则由用户定义的Action类或者其他控制器类完成。</span><br />\r\n<span style="font-size:14px;"> 我们通过前面的学习，已经了解了基本的控制器用法，这一篇我们来讲述下控制器的一些特性和高级用法，来探索ThinkPHP控制器的神秘外衣。</span><a></a>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Action参数绑定</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">在前面的内容中，我们涉及的所有操作方法都是没有任何参数的，其实从3.1版本开始，可以支持参数绑定功能。Action参数绑定的原理是把URL中的参数（不包括分组、模块和操作名）和控制器的操作方法中的参数（按变量名）进行绑定。</span><br />\r\n<span style="font-size:14px;"> 例如，我们给Blog模块定义了两个操作方法read和archive方法，并且给read操作需要指定一个id参数，archive方法指定年份（year）和月份（month）两个参数。为了演示方便，我们省去了具体操作方法的业务代码，仅仅用echo&nbsp;输出当前的参数。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">class&nbsp;BlogAction&nbsp;extends&nbsp;Action{</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;read($id){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''id=''.$id;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;archive($year=''2012'',$month=''01''){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''year=''.$year.''&amp;month=''.$month;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">URL的访问地址分别是：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/Blog/read/id/5</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/Blog/archive/year/2012/month/03</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">两个URL地址中的id参数和year和month参数会自动和read操作方法以及archive操作方法的同名参数绑定。</span><br />\r\n<span style="font-size:14px;"> 输出的结果依次是：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">id=5</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">year=2012&amp;month=03</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Action参数绑定的参数必须和URL中传入的参数名称一致，但是参数顺序不需要一致。也就是说</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/Blog/archive/month/03/year/2012</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">和上面的访问结果是一致的，URL中的参数顺序和操作方法中的参数顺序都可以随意调整，关键是确保参数名称一致即可。</span><br />\r\n<span style="font-size:14px;"> 如果用户访问的URL地址是（至于为什么会这么访问暂且不提）：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/Blog/read/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">那么会抛出下面的异常提示：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">参数错误:id</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">报错的原因很简单，因为在执行read操作方法的时候，id参数是必须传入参数的，但是方法无法从URL地址中获取正确的id参数信息。由于我们不能相信用户的任何输入，因此建议你给read方法的id参数添加默认值，例如：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">public&nbsp;function&nbsp;read($id=0){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''id=''.$id;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">这样，当我们访问</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/Blog/read/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">的时候&nbsp;就会输出</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">id=0</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">当我们访问</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/Blog/archive/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">的时候，输出：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;year=2012&amp;month=01</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">参数绑定功能不受路由影响，从路由中匹配和URL传入的参数一样有效，并且绑定的参数如果需要特殊处理和过滤的话，需要另行处理。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">空模块和空操作</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">空操作是指系统在找不到指定的操作方法的时候，会定位到空操作（_empty）方法来执行，利用这个机制，我们可以实现错误页面和一些URL的优化。</span><br />\r\n<span style="font-size:14px;"> 例如，下面我们用空操作功能来实现一个城市切换的功能。</span><br />\r\n<span style="font-size:14px;"> 我们只需要给CityAction类定义一个_empty&nbsp;（空操作）方法：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&lt;?php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">class&nbsp;CityAction&nbsp;extends&nbsp;Action{</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;_empty($name){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把所有城市的操作解析到city方法</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;city($name);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;//注意&nbsp;city方法&nbsp;是&nbsp;protected&nbsp;方法</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;function&nbsp;city($name){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//和$name这个城市相关的处理</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''当前城市''&nbsp;.&nbsp;$name;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">接下来，我们就可以在浏览器里面输入</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/City/beijing/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/City/shanghai/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/City/shenzhen/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">由于CityAction并没有定义beijing、shanghai或者shenzhen操作方法，因此系统会定位到空操作方法&nbsp;_empty中去解析，_empty方法的参数就是当前URL里面的操作名，因此会看到依次输出的结果是：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">当前城市:beijing</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">当前城市:shanghai</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">当前城市:shenzhen</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">空模块的概念是指当系统找不到指定的模块名称的时候，系统会尝试定位空模块(EmptyAction)，利用这个机制我们可以用来定制错误页面和进行URL的优化。现在我们把前面的需求进一步，把URL由原来的</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/City/shanghai/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">变成</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/shanghai/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">这样更加简单的方式，如果按照传统的模式，我们必须给每个城市定义一个Action类，然后在每个Action类的index方法里面进行处理。&nbsp;可是如果使用空模块功能，这个问题就可以迎刃而解了。&nbsp;我们可以给项目定义一个EmptyAction类</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&lt;?php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">class&nbsp;EmptyAction&nbsp;extends&nbsp;Action{</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;index(){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//根据当前模块名来判断要执行那个城市的操作</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$cityName&nbsp;=&nbsp;MODULE_NAME;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;city($cityName);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;//注意&nbsp;city方法&nbsp;本身是&nbsp;protected&nbsp;方法</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;protected&nbsp;function&nbsp;city($name){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//和$name这个城市相关的处理</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''当前城市''&nbsp;.&nbsp;$name;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">接下来，我们就可以在浏览器里面输入</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/beijing/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/shanghai/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php/shenzhen/</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">由于系统并不存在beijing、shanghai或者shenzhen模块，因此会定位到空模块（EmptyAction）的默认操作（index）去执行，会看到依次输出的结果是：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">当前城市:beijing</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">当前城市:shanghai</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">当前城市:shenzhen</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">空模块和空操作还可以同时使用，用以完成更加复杂的操作。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">前置和后置操作</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如果当前访问的操作是存在的，系统会检测当前操作是否具有前置和后置操作，如果存在就会按照顺序执行，前置和后置操作的方法名是在要执行的方法前面加&nbsp;_before_和_after_，例如：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">class&nbsp;IndexAction&nbsp;extends&nbsp;Action{</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;//前置操作方法</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;_before_index(){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''before&lt;br/&gt;'';</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;index(){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''index&lt;br/&gt;'';</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;//后置操作方法</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;_after_index(){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''after&lt;br/&gt;'';</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如果我们访问</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/index.php</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">结果会输出</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">before</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">index</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">after</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">对于任何操作方法我们都可以按照这样的规则来定义前置和后置方法。</span><br />\r\n<span style="font-size:14px;"> 需要注意的是，如果在操作方法里面使用了exit或者error方法的话&nbsp;有可能不会再执行后置方法了。</span>\r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">跳转和重定向</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">系统的Action类内置了两个页面跳转方法error和success，分别用于错误（提示）跳转和成功（提示）跳转。两个方法都会输出一个提示信息页面，然后自动跳转到指定的地址。如果当前请求是ajax方式的话，则会自动进行ajax数据返回。下面是一个简单的例子：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$User&nbsp;=&nbsp;M(''User'');&nbsp;//实例化User对象</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$result&nbsp;=&nbsp;$User-&gt;add($data);&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">if($result){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;//设置成功后跳转页面的地址，默认的返回页面是$_SERVER[''HTTP_REFERER'']</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;success(''新增成功'',&nbsp;''/User/list'');</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}&nbsp;else&nbsp;{</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;//错误页面的默认跳转页面是返回前一页，通常不需要设置</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;error(''新增失败'');</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Success和error方法都有对应的模板，并且是可以设置的，默认的设置是系统模板：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">//默认错误跳转对应的模板文件</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">''TMPL_ACTION_ERROR''&nbsp;=&gt;&nbsp;THINK_PATH&nbsp;.&nbsp;''Tpl/dispatch_jump.tpl'',</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">//默认成功跳转对应的模板文件</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">''TMPL_ACTION_SUCCESS''&nbsp;=&gt;&nbsp;THINK_PATH&nbsp;.&nbsp;''Tpl/dispatch_jump.tpl'',</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">我们可以在项目配置文件中修改为使用项目内部的模板文件</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">//默认错误跳转对应的模板文件</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">''TMPL_ACTION_ERROR''&nbsp;=&gt;&nbsp;''Public:error'',</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">//默认成功跳转对应的模板文件</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">''TMPL_ACTION_SUCCESS''&nbsp;=&gt;&nbsp;''Public:success'',</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如果你的操作不需要任何提示页面，也可以直接使用页面重定向功能。</span><br />\r\n<span style="font-size:14px;"> 系统提供了redirect方法实现页面的重定向功能。</span><br />\r\n<span style="font-size:14px;"> 例如：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">//重定向到New模块的Category操作</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$this-&gt;redirect(''New/category'',&nbsp;array(''cate_id''&nbsp;=&gt;&nbsp;2),&nbsp;5,&nbsp;''页面跳转中...'');</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">上面的用法是停留5秒后跳转到New模块的category操作，并且显示页面跳转中字样，重定向后会改变当前的URL地址。</span><br />\r\n<span style="font-size:14px;"> redirect方法的第一个参数和第二个参数的配合来完成实际的URL地址的组装，用法和</span><a href="http://www.thinkphp.cn/info/132.html"><span style="font-size:14px;">U函数的用法</span></a><span style="font-size:14px;">基本一致。</span><br />\r\n<span style="font-size:14px;"> 如果你仅仅是想重定向要一个指定的URL地址，而不是到某个模块的操作方法，可以直接使用redirect函数重定向，例如：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">//重定向到指定的URL地址</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">redirect(''/New/category/cate_id/2'',&nbsp;5,&nbsp;''页面跳转中...'');</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Redirect方法的第一个参数是要跳转的实际URL地址。</span>\r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">AJAX返回</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">目前的很多WEB应用中大量运用了ajax操作，系统也提供了一个用于ajax数据返回的方法ajaxReturn方法，用法：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$this-&gt;ajaxReturn(返回数据[,返回数据格式]);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">目前已经支持的ajax返回数据格式包括：XML&nbsp;JSON&nbsp;JSONP&nbsp;EVAL。</span><br />\r\n<span style="font-size:14px;"> 下面是一个简单的例子：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$data[''status'']&nbsp;=&nbsp;1;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$data[''info'']&nbsp;=&nbsp;''info'';</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$data[''data'']&nbsp;=&nbsp;$data;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$data[''url'']&nbsp;=&nbsp;$url;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$this-&gt;ajaxReturn($data);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">在客户端就可以接收传递的$data数据,可以通过ajaxReturn方法传递任意数据到客户端。如果不指定返回格式的话，默认为JSON格式返回，也可以指定数据格式返回：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$this-&gt;ajaxReturn($data,''XML'');</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">页面跳转方法success和error如果在ajax请求方式下面会自动调用ajaxReturn方法，例如：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$this-&gt;success(''发布成功'',$url);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">等效于使用：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$data[''info'']&nbsp;=&nbsp;''发布成功'';</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$data[''url'']&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;$url;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$data[''status'']&nbsp;=&nbsp;1;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$this-&gt;ajaxReturn($data);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">在客户端就可以接收返回的包含info、url和status值的data数据。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 你无需担心客户端怎么发送ajax请求给ThinkPHP，ThinkPHP可以自动识别大部分类库的ajax请求，包括JqueryAjax，但某些Flash上传组件可能无法准确识别，请确保在请求的URL地址中传入ajax=1参数，这样就能让ThinkPHP识别为Ajax操作。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">页面请求类型</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如果需要根据当前的页面请求类型来做出不同的处理，可以使用系统提供的几个常量：</span>\r\n	</p>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">REQUEST_METHOD</span>\r\n					</p>\r\n				</td>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">当前请求类型</span>\r\n					</p>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">IS_GET</span>\r\n					</p>\r\n				</td>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">是否GET请求</span>\r\n					</p>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">IS_POST</span>\r\n					</p>\r\n				</td>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">是否POST请求</span>\r\n					</p>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">IS_PUT</span>\r\n					</p>\r\n				</td>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">是否PUT请求</span>\r\n					</p>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">IS_DELETE</span>\r\n					</p>\r\n				</td>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">是否DELETE请求</span>\r\n					</p>\r\n				</td>\r\n			</tr>\r\n			<tr>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">IS_AJAX</span>\r\n					</p>\r\n				</td>\r\n				<td>\r\n					<p>\r\n						<span style="font-size:14px;">是否AJAX请求</span>\r\n					</p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	<p>\r\n		<span style="font-size:14px;">举例如下：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">class&nbsp;UserAction&nbsp;extends&nbsp;Action{</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;update(){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(IS_POST){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$User&nbsp;=&nbsp;M(''User'');</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$User-&gt;create();</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$User-&gt;save();</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;success(''保存完成'');</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;error(''非法请求'');</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">伪静态</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">默认情况下，ThinkPHP可以支持所有的静态后缀，并且会记录当前的伪静态后缀到常量__EXT__，但不会影响正常的页面访问。</span><br />\r\n<span style="font-size:14px;"> 例如：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/User/3.html</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/User/3.shtml</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/User/3.xml</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/User/3.pdf</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">都可以正常访问，如果要获取当前访问的伪静态后缀，通过常量__EXT__获取即可。</span><br />\r\n<span style="font-size:14px;"> 如果希望统一伪静态后缀，可以设置：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">''URL_HTML_SUFFIX''=&gt;''html''</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">现在则只能访问</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">http://serverName/User/3.html</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">也可以支持允许多个后缀，例如：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">''URL_HTML_SUFFIX''=&gt;''html|shtml|xml''&nbsp;//&nbsp;多个用&nbsp;|&nbsp;分割</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">这样，当访问http://serverName/User/3.pdf的时候会报系统错误。</span><br />\r\n<span style="font-size:14px;"> 是实际应用中，我们可以根据当前的URL访问后缀来做出不同的输出处理。</span>\r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">多层控制器</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">3.1版本开始增加了多层业务控制器的支持，给中大型应用提供了方便，例如我们可以分为业务控制器和事件控制器：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Action/UserAction&nbsp;//用于用户的业务逻辑控制和调度</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Event/UserEvent&nbsp;//用于用户的事件响应操作</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">UserAction负责外部交互响应，通过URL请求响应，例如&nbsp;http://serverName/User/index,而UserEvent&nbsp;负责内部的事件响应，并且只能在内部调用</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;A(''User'',''Event'');</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">所以是和外部隔离的。多层控制器的划分也不是强制的，可以根据项目的需要自由分层。控制器分层里面可以根据需要调用分层模型，也可以调用不同的目录的视图模板。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">总结</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">本篇涉及到的ThinkPHP的控制器特性包括空模块和空操作、前置和后置操作、参数绑定、伪静态、跳转和重定向、ajax返回、请求类型，而新版的多层控制器的特性更是值得回味。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">ssss</span>\r\n	</p>\r\n</div>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:15:27'),
(190, '模板引擎详解：导入资源文件', '<p>\r\n	<span style="font-size:14px;">传统方式的导入外部JS和CSS等资源文件的方法是直接在模板文件使用：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;&lt;script&nbsp;type=''text/javascript''&nbsp;src=''/Public/Js/Util/Array.js''&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;&lt;link&nbsp;rel="stylesheet"&nbsp;type="text/css"&nbsp;href="/App/Tpl/default/Public/css/style.css"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ThinkPHP的模板引擎提供了专门的标签来简化上面的导入。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">import标签</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">第一个是import标签&nbsp;，导入方式采用类似ThinkPHP的import函数的命名空间方式，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;&lt;import&nbsp;type=''js''&nbsp;file="Js.Util.Array"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Type属性默认是js，&nbsp;所以下面的效果是相同的：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;&lt;import&nbsp;file="Js.Util.Array"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">还可以支持多个文件批量导入，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&nbsp;&lt;import&nbsp;file="Js.Util.Array,Js.Util.Date"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">导入外部CSS文件必须指定type属性的值，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6&nbsp;&lt;import&nbsp;type=''css''&nbsp;file="Css.common"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上面的方式默认的import的起始路径是网站根目录下的Public目录，如果需要指定其他的目录，可以使用basepath属性，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7&nbsp;&lt;import&nbsp;file="Js.Util.Array"&nbsp;&nbsp;basepath="./Common"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果导入的文件中含有“.”号，则可以采用：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8&nbsp;&lt;import&nbsp;file="Js.Util.Array#min"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表示导入&nbsp;/Public/Js/Util/Array.min.js&nbsp;资源文件。</span><br />\r\n<span style="font-size:14px;"> 还支持资源文件的版本号导入，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9&nbsp;&lt;import&nbsp;type=''js''&nbsp;file="Js.Util.Array?v=120"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在导入多个文件的时候也可以支持</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10&nbsp;&lt;import&nbsp;type=''js''&nbsp;file="Js.Util.Array?125,Js.Util.Date?130"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">improt标签支持判断加载，例如下面首先判断name变量是否设置：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11&nbsp;&lt;import&nbsp;type=''js''&nbsp;file="Js.Util.Array"&nbsp;value="name"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者更复杂的，甚至可以采用函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12&nbsp;&lt;import&nbsp;type=''js''&nbsp;file="Js.Util.Array"&nbsp;value="Think.get.name|isset"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">编译后的模板缓存是：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13&nbsp;&lt;?php&nbsp;if(isset($_GET[''name''])):&nbsp;?&gt;&lt;script&nbsp;type="text/javascript"&nbsp;src="/Public/Js/Util/Array.js"&gt;&lt;/script&gt;&lt;?php&nbsp;endif;&nbsp;?&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">load标签</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">第二个是load标签，通过URL方式导入当前项目的公共JS或者CSS，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14&nbsp;&lt;load&nbsp;href="/Public/Js/Common.js"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">15&nbsp;&lt;load&nbsp;href="/Public/Js/Date.js?v=235"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">16&nbsp;&lt;load&nbsp;href="/Public/Css/common.css"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在href属性中可以使用特殊模板标签替换，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">17&nbsp;&lt;load&nbsp;href="__PUBLIC__/Js/Common.js"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Load标签无需指定type属性，系统会自动根据后缀自动判断。</span><br />\r\n<span style="font-size:14px;"> 当然，load标签也支持条件判断调用：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">18&nbsp;&lt;load&nbsp;href="/Public/Js/Common.js"&nbsp;value="name"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">系统还提供了两个标签别名js和css&nbsp;用法和load一致，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">19&nbsp;&lt;js&nbsp;href="/Public/Js/Common.js"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">20&nbsp;&lt;css&nbsp;href="/Public/Css/common.css"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">load标签也支持同时导入多个资源文件，甚至是不同类型的资源文件：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">21&nbsp;&lt;load&nbsp;href="/Public/Js/Common.js,/Public/Css/common.css"&nbsp;/&gt;</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:15:48');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(191, 'ThinkPHP3.1快速入门（10）缓存', '<p>\r\n	<span style="font-size:14px;">ThinkPHP3.1快速入门（10）缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在项目中，合理的使用缓存对性能有较大的帮助。ThinkPHP提供了方便的缓存方式，包括数据缓存、静态缓存和查询缓存等，支持包括文件方式、APC、Db、Memcache、Shmop、Sqlite、Redis、Eaccelerator和Xcache在内的动态数据缓存类型，以及可定制的静态缓存规则，并提供了快捷方法进行存取操作。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在ThinkPHP中进行缓存操作，一般情况下并不需要直接操作缓存类，因为系统内置对缓存操作进行了封装，3.1版本推荐的数据缓存方法是cache方法，基本的用法是：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;缓存初始化</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(array(''type''=&gt;''xcache'',''expire''=&gt;60));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">缓存初始化可以支持的参数根据不同的缓存方式有所区别，常用的参数是：</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">expire</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">缓存有效期（时间为秒）</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">prefix</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">缓存标识前缀</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">type</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">缓存类型</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">核心版本只有File缓存方式的支持，其他的缓存方式支持需要下载单独的缓存驱动，并放入系统目录的Extend/Driver/Cache/下面，否则会出现不支持缓存类型的错误提示。</span><br />\r\n<span style="font-size:14px;"> 有些缓存方式会有一些自身特殊的参数，例如Memcache缓存，还需要配置其他的参数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(array(''type''=&gt;''memcache'',''host''=&gt;''192.168.1.10'',''port''=&gt;''11211'',''prefix''=&gt;''think'',''expire''=&gt;60));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于全局的缓存方式，一般我们建议添加prefix（缓存前缀）参数用以区分不同的应用，以免混淆。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;缓存设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(''a'',$value);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">会按照缓存初始化时候的参数进行缓存数据，也可以在缓存设置的时候改变参数，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(''a'',$value,300);//&nbsp;缓存数据300秒</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">甚至改变之前的缓存方式或者更多的参数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(''a'',$value,array(''type''=&gt;''file'',''expire''=&gt;300));//&nbsp;采用文件方式缓存数据300秒</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你在缓存设置的时候采用上面的数组方式传入参数的话，会影响到后面的缓存存取。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;缓存读取</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$value&nbsp;=&nbsp;cache(''a'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">缓存读取的是前面缓存设置的值，这个值会受缓存初始化或者缓存设置的时候传入的参数影响。</span><br />\r\n<span style="font-size:14px;"> 如果缓存标识不存在或者已经过期，则返回false，否则返回缓存值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;缓存删除</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(''a'',null);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除缓存标识为name的缓存数据。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 如果要切换缓存方式，可以再次进行缓存初始化操作或者使用下面的方式：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cache&nbsp;=&nbsp;cache(array(''type''=&gt;''xcache'',''prefix''=&gt;''think'',''expire''=&gt;600));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cache-&gt;name&nbsp;=&nbsp;''value'';&nbsp;//&nbsp;设置缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$value&nbsp;=&nbsp;$cache-&gt;name;&nbsp;//&nbsp;获取缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">unset($cache-&gt;name);&nbsp;//&nbsp;删除缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你设置了缓存前缀的话，对应的缓存操作只是对应该缓存前缀标识的，不会影响其他的缓存。&nbsp;</span><br />\r\n<span style="font-size:14px;"> 数据缓存可以支持缓存队列，简单的说就是可以限制缓存的数量，只需要在初始化的时候指定length参数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(array(''type''=&gt;''xcache'',''length''=&gt;100,''expire''=&gt;60));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置了length参数后，系统只会缓存最近的100条缓存数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">快速缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你仅仅是希望用文件的方式缓存一些简单的数据，并且没有有效期的概念，那么系统还提供了一个快速缓存方法F可以用来更快的操作。</span><br />\r\n<span style="font-size:14px;"> 快速缓存Data数据，默认保存在DATA_PATH目录下面</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F(''data'',$Data);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">快速缓存Data数据，保存到指定的目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F(''data'',$Data,TEMP_PATH);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">获取缓存数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Data&nbsp;=&nbsp;F(''data'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除缓存数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F(''data'',NULL);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F方法支持自动创建缓存子目录，在DATA_PATH目录下面缓存data数据，如果User子目录不存在，则自动创建：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F(''User/data'',$Data);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">系统内置的数据字段信息缓存就是用了快速缓存机制。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查询缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于及时性要求不高的数据查询，我们可以使用查询缓存功能来提高性能，而且无需自己使用缓存方法进行缓存和获取。</span><br />\r\n<span style="font-size:14px;"> 查询缓存功能支持所有的数据库，并且支持所有的缓存方式和有效期。</span><br />\r\n<span style="font-size:14px;"> 在使用查询缓存的时候，只需要调用Model类的cache方法，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;cache(true)-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果使用了cache(true)&nbsp;，则在查询的同时会根据当前的查询SQL生成查询缓存，默认情况下缓存方式采用DATA_CACHE_TYPE参数设置的缓存方式（系统默认值为File表示采用文件方式缓存），缓存有效期是DATA_CACHE_TIME&nbsp;参数设置的时间，也可以单独制定查询缓存的缓存方式和有效期：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;cache(true,60,''xcache'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表示当前查询缓存的缓存方式为xcache，并且缓存有效期为60秒。</span><br />\r\n<span style="font-size:14px;"> 同样的查询，如果没有使用cache方法，则不会获取或者生成任何缓存，即便是之前调用过Cache方法。</span><br />\r\n<span style="font-size:14px;"> 查询缓存只是供内部调用，如果希望查询缓存开放给其他程序调用，可以指定查询缓存的Key，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;cache(''cache_name'',60)-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">则可以在外部通过S方法直接获取查询缓存的内容，</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$value&nbsp;=&nbsp;S(''cache_name'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">除了select方法之外，查询缓存还支持find和getField方法，以及他们的衍生方法（包括统计查询和动态查询方法）。具体应用的时候可以根据需要选择缓存方式和缓存有效期。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">静态缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要使用静态缓存功能，需要开启HTML_CACHE_ON&nbsp;参数，并且使用HTML_CACHE_RULES配置参数设置静态缓存规则文件&nbsp;。</span><br />\r\n<span style="font-size:14px;"> 静态规则的定义方式如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''HTML_CACHE_ON''=&gt;true,&nbsp;//&nbsp;开启静态缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''HTML_FILE_SUFFIX''&nbsp;&nbsp;=&gt;&nbsp;&nbsp;''.shtml'',&nbsp;//&nbsp;设置静态缓存后缀为.shtml</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''HTML_CACHE_RULES''=&gt;&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''ActionName(小写)''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;array(''静态规则'',&nbsp;''静态缓存有效期'',&nbsp;''附加规则''),&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''ModuleName(小写)''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;array(''静态规则'',&nbsp;''静态缓存有效期'',&nbsp;''附加规则''),&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''ModuleName(小写):ActionName(小写)''&nbsp;=&gt;&nbsp;array(''静态规则'',&nbsp;''静态缓存有效期'',&nbsp;''附加规则''),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''*''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;array(''静态规则'',&nbsp;''静态缓存有效期'',&nbsp;''附加规则''),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;//…更多操作的静态规则</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">静态缓存文件的根目录在HTML_PATH&nbsp;定义的路径下面，并且只有定义了静态规则的操作才会进行静态缓存。</span><br />\r\n<span style="font-size:14px;"> 第一种是定义全局的操作静态规则，例如定义所有的read操作的静态规则为：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''read''=&gt;array(''{id}'',''60'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其中，{id}&nbsp;表示取$_GET[''id'']&nbsp;为静态缓存文件名，第二个参数表示缓存60秒</span><br />\r\n<span style="font-size:14px;"> 第二种是定义全局的模块静态规则，例如定义所有的User模块的静态规则为：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''user:''=&gt;array(''User/{:action}_{id}'',''600'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其中，{:action}&nbsp;表示当前的操作名称</span><br />\r\n<span style="font-size:14px;"> 第三种是定义某个模块的操作的静态规则，例如，我们需要定义Blog模块的read操作进行静态缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''blog:read''=&gt;array(''{id}'',0)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有个别特殊的规则，例如空模块和空操作的静态规则的定义，可以使用下面的方式：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''empty:index''=&gt;array(''{:module}_{:action}'',0)&nbsp;&nbsp;//&nbsp;定义空模块的静态规则</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''User:_empty''=&gt;array(''User/{:action}'',0)&nbsp;&nbsp;//&nbsp;定义空操作的静态规则</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">第四种方式是定义全局的静态缓存规则，这个属于特殊情况下的使用，任何模块的操作都适用，例如</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''*''=&gt;array(''{$_SERVER.REQUEST_URI|md5}''),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">根据当前的URL进行缓存</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 静态规则是用于定义要生成的静态文件的名称，静态规则的定义要确保不会冲突，写法可以包括以下情况：</span><br />\r\n<span style="font-size:14px;"> 1、使用系统变量&nbsp;包括&nbsp;_GET&nbsp;_REQUEST&nbsp;_SERVER&nbsp;_SESSION&nbsp;_COOKIE</span><br />\r\n<span style="font-size:14px;"> 格式：</span><br />\r\n<span style="font-size:14px;"> {$_×××|function}</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{$_GET.name}&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{$_SERVER.&nbsp;REQUEST_URI|md5}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、使用框架特定的变量</span><br />\r\n<span style="font-size:14px;"> 例如：{:app}、{:group}&nbsp;、{:module}&nbsp;和{:action}&nbsp;分别表示当前项目名、分组名、模块名和操作名。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 3、使用_GET变量</span><br />\r\n<span style="font-size:14px;"> {var|function}&nbsp;也就是说&nbsp;{id}&nbsp;其实等效于&nbsp;{$_GET.id}</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 4、直接使用函数</span><br />\r\n<span style="font-size:14px;"> {|function}&nbsp;例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{|time}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5、支持混合定义，例如我们可以定义一个静态规则为：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''{id},{name|md5}''&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在{}之外的字符作为字符串对待，如果包含有”/”，会自动创建目录。</span><br />\r\n<span style="font-size:14px;"> 例如，定义下面的静态规则：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{:module}/{:action}_{id}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">则会在静态目录下面创建模块名称的子目录，然后写入操作名_id.shtml&nbsp;文件。</span><br />\r\n<span style="font-size:14px;"> 静态有效时间&nbsp;单位为秒。如果不定义，则会获取配置参数HTML_CACHE_TIME&nbsp;的设置值，如果定义为0则表示永久缓存。</span><br />\r\n<span style="font-size:14px;"> 附加规则通常用于对静态规则进行函数运算，例如</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''read''=&gt;array(''Think{id},{name}'',''60'',&nbsp;''md5'')&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">翻译后的静态规则是&nbsp;md5(''Think''.$_GET[''id''].&nbsp;'',&nbsp;''.$_GET[''name'']);</span><br />\r\n<span style="font-size:14px;"> 和静态缓存相关的配置参数包括：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTML_CACHE_ON&nbsp;是否开启静态缓存功能</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTML_FILE_SUFFIX&nbsp;静态文件后缀&nbsp;惯例配置的值是&nbsp;.html</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTML_CACHE_TIME&nbsp;默认的静态缓存有效期&nbsp;默认60秒&nbsp;可以在静态规则定义覆盖</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">总结</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要善于利用ThinkPHP的缓存功能，更重要的是区分什么时候用何种缓存方式更加有效。缓存也不是万能的，没有缓存是万万不能的^_^</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:16:13'),
(192, 'ThinkPHP3.1新特性： 多层MVC支持', '<p>\r\n	<span style="font-size:14px;">ThinkPHP基于MVC（Model-View-Controller，模型-视图-控制器）模式，不过均支持多层（multi-Layer）设计。</span><br />\r\n<span style="font-size:14px;"> &nbsp;</span><br />\r\n<span style="font-size:14px;"> 模型（Model）层：默认的模型层由Model类构成，但是随着项目的增大和业务体系的复杂化，单一的模型层很难解决要求，从3.1开始&nbsp;推出了多层Model的支持，设计思路很简单，不同的模型层仍然都继承自系统的Model类，但是在目录结构和命名规范上做了区分，例如在某个项目设计中&nbsp;需要区分数据层、逻辑层、服务层等不同的模型层，我们可以在项目的Lib目录下面创建Model、Logic和Service目录，把对用户表的所有模型&nbsp;操作分成三层：</span><br />\r\n<span style="font-size:14px;"> 数据层：Model/UserModel&nbsp;用于定义数据相关的自动验证和自动完成和数据存取接口</span><br />\r\n<span style="font-size:14px;"> 逻辑层：Logic/UserLogic&nbsp;用于定义用户相关的业务逻辑</span><br />\r\n<span style="font-size:14px;"> 服务层：Service/UserService&nbsp;用于定义用户相关的服务接口等</span><br />\r\n<span style="font-size:14px;"> 而这三个模型操作类统一都继承Model类即可，这样对用户数据的操作就非常清晰，在调用的时候，也可以用内置的D方法很方便的调用：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;&nbsp;D(''User'')&nbsp;&nbsp;//实例化UserModel</span><br />\r\n<span style="font-size:14px;"> &nbsp;D(''User'',''Logic'')&nbsp;&nbsp;//实例化UserLogic</span><br />\r\n<span style="font-size:14px;"> &nbsp;D(''User'',''Service'')&nbsp;//实例化UserService</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 对模型层的分层划分是很灵活的，开发人员可以根据项目的需要自由定义分层。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 视图（View）层：由模板和模板引擎组成，在模板中可以直接使用PHP代码，模板引擎的设计会在后面讲述，通过驱动也可以支持其他第三方的模板引擎。视图的多层可以简单的通过目录区分，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;Tpl/default/User/add.html</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;Tpl/blue/User/add.html</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 控制器（Controller）层：ThinkPHP的控制器层由核心控制器和业务控制器组成，核心控制器由系统内部的App类完成，负责&nbsp;应用（包括模块和操作）的调度控制，包括HTTP请求拦截和转发、加载配置等，业务控制器则由用户定义的Action类完成。3.1版本开始增加了多层业&nbsp;务控制器的支持。其实现原理和模型的分层类似，例如业务控制器和事件控制器：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;&nbsp;Action/UserAction&nbsp;//用于用户的业务逻辑控制和调度</span><br />\r\n<span style="font-size:14px;"> &nbsp;Event/UserEvent&nbsp;//用于用户的事件响应操作</span><br />\r\n<span style="font-size:14px;"> UserAction负责外部交互响应，通过URL请求响应，例如&nbsp;http://serverName/User/index,而UserEvent&nbsp;负责内部的事件响应，并且只能在内部调用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;&nbsp;A(''User'',''Event'');</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> &nbsp;所以是和外部隔离的。多层控制器的划分也不是强制的，可以根据项目的需要自由分层。控制器分层里面可以根据需要调用分层模型，也可以调用不同的目录的视图模板。</span><br />\r\n<span style="font-size:14px;"> 同时，R方法也可以支持多层控制器的调用了，增加了第三个参数表示控制器的层名称，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&nbsp;R(''User/register'',array(15),''Event'');</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 表示调用UserEvent控制器的register方法，并传入参数15.</span><br />\r\n<span style="font-size:14px;"> 在MVC三层中，ThinkPHP并不依赖M或者V，甚至可以只有C或者只有V，这个在ThinkPHP的设计里面是一个很重要的用户体验设计，用户只需要定义视图，在没有C的情况下也能自动识别。</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:16:33'),
(193, 'ThinkPHP3.1 常量参考', '<p>\r\n	<span style="font-size:14px;">预定义常量</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">常量</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">说明</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">URL_COMMON=0</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">普通模式&nbsp;URL</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">URL_PATHINFO=1</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">PATHINFO&nbsp;URL</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">URL_REWRITE=2</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">REWRITE&nbsp;URL</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">URL_COMPAT=3</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">兼容模式&nbsp;URL</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">HAS_ONE=1</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">HAS_ONE&nbsp;关联定义</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">BELONGS_TO=2</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">BELONGS_TO&nbsp;关联定义</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">HAS_MANY=3</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">HAS_MANY&nbsp;关联定义</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">MANY_TO_MANY=4</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">MANY_TO_MANY&nbsp;关联定义</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">THINK_VERSION</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">框架版本号</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">这些预定义常量不会随着环境的变化而变化。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">路径常量</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">系统和项目的路径常量用于系统默认的目录规范，可以通过重新定义改变，如果不希望定制目录，这些常量一般不需要更改。&nbsp;</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">常量名</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">说明</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">默认值</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">CORE_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">系统核心类库目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">THINK_PATH.''Lib/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">EXTEND_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">系统扩展目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">THINK_PATH.''Extend/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">MODE_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">模式扩展目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">EXTEND_PATH.''Mode/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">ENGINE_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">引擎扩展目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">EXTEND_PATH.''Engine/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">VENDOR_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">第三方类库目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">EXTEND_PATH.''Vendor/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">LIBRARY_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">系统扩展类库目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">EXTEND_PATH.''Library/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">COMMON_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目公共目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_PATH.''Common/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">LIB_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目类库目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_PATH.''Lib/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">RUNTIME_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目运行时目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_PATH.''Runtime/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">CONF_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目配置目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_PATH.''Conf/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">LOG_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目日志目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">RUNTIME_PATH.''Logs/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">CACHE_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目模板缓存目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">RUNTIME_PATH.''Cache/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">LANG_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目语言包目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_PATH.''Lang/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">TEMP_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目缓存目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">RUNTIME_PATH.''Temp/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">DATA_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目数据目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">RUNTIME_PATH.''Data/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">TMPL_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目模板目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_PATH.''Tpl/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">HTML_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目静态缓存目录</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_PATH.''Html/''</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">系统常量</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面这些系统常量会随着开发环境的改变或者设置的改变而产生变化。&nbsp;</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">常量名</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">说明</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">IS_CGI</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">是否属于&nbsp;CGI模式</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">IS_WIN</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">是否属于Windows&nbsp;环境</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">IS_CLI</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">是否属于命令行模式</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">__ROOT__</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">网站根目录地址</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">__APP__</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前项目（入口文件）地址</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">__GROUP__</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前分组的URL地址</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">__URL__</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前模块的URL地址</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">__ACTION__</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前操作的URL地址</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">__SELF__</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前URL地址</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">__INFO__</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前的PATH_INFO字符串</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_NAME</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前项目名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">GROUP_NAME</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前分组名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">MODULE_NAME</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前模块名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">ACTION_NAME</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前操作名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_DEBUG</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">是否开启调试模式</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">MODE_NAME</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前模式名称</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前项目路径</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">THINK_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">系统框架路径</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">MEMORY_LIMIT_ON</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">系统内存统计支持</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">RUNTIME_FILE</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">项目编译缓存文件名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">THEME_NAME</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前主题名称</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">THEME_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前模板主题路径</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">APP_TMPL_PATH</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前模板URL路径</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">LANG_SET</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">当前浏览器语言</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">MAGIC_QUOTES_GPC</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">MAGIC_QUOTES_GPC</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:17:07'),
(194, 'ThinkPHP3.1新特性：Action参数绑定 ', '<p>\r\n	<span style="font-size:14px;">Action参数绑定功能提供了URL变量和操作方法的参数绑定支持，这一功能可以使得你的操作方法定义和参数获取更加清晰，也便于跨模块调用操作方法了。这一新特性对以往的操作方法使用没有任何影响，你也可以用新的方式来改造以往的操作方法定义。</span><br />\r\n<span style="font-size:14px;"> Action&nbsp;参数绑定的原理是把URL中的参数（不包括分组、模块和操作地址）和控制器的操作方法中的参数进行绑定。例如，我们给Blog模块定义了两个操作方法&nbsp;read和archive方法，由于read操作需要指定一个id参数，archive方法需要指定年份（year）和月份（month）两个参数。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;class&nbsp;BlogAction&nbsp;extends&nbsp;Action{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;read($id){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''id=''.$id;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$Blog&nbsp;=&nbsp;M(''Blog'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$Blog-&gt;find($id);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;archive($year=''2012'',$month=''01''){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''year=''.$year.''&amp;month=''.$month;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$Blog&nbsp;=&nbsp;M(''Blog'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$year&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;$year;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$month&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;$month;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$begin_time&nbsp;=&nbsp;strtotime($year&nbsp;.&nbsp;$month&nbsp;.&nbsp;"01");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$end_time&nbsp;=&nbsp;strtotime("+1&nbsp;month",&nbsp;$begin_time);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$map[''create_time'']&nbsp;=&nbsp;&nbsp;array(array(''gt'',$begin_time),array(''lt'',$end_time));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$map[''status'']&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$list&nbsp;=&nbsp;$Blog-&gt;where($map)-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">19&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">URL的访问地址分别是：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">20&nbsp;http://serverName/index.php/Blog/read/id/5</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">21&nbsp;http://serverName/index.php/Blog/archive/year/2012/month/03</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">两个URL地址中的id参数和year和month参数会自动和read操作方法以及archive操作方法的同名参数绑定。</span><br />\r\n<span style="font-size:14px;"> 输出的结果依次是：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">22&nbsp;id=5</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">23&nbsp;year=2012&amp;month=03</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Action参数绑定的参数必须和URL中传入的参数名称一致，但是参数顺序不需要一致。也就是说&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">24&nbsp;http://serverName/index.php/Blog/archive/month/03/year/2012</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">和上面的访问结果是一致的，URL中的参数顺序和操作方法中的参数顺序都可以随意调整，关键是确保参数名称一致即可。</span><br />\r\n<span style="font-size:14px;"> 如果用户访问的URL地址是（至于为什么会这么访问暂且不提）：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">25&nbsp;http://serverName/index.php/Blog/read/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">那么会抛出下面的异常提示：</span><br />\r\n<span style="font-size:14px;"> 参数错误:id&nbsp;</span><br />\r\n<span style="font-size:14px;"> 报错的原因很简单，因为在执行read操作方法的时候，id参数是必须传入参数的，但是方法无法从URL地址中获取正确的id参数信息。由于我们不能相信用户的任何输入，因此建议你给read方法的id参数添加默认值，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">26&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;read($id=0){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;''id=''.$id;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">28&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$Blog&nbsp;=&nbsp;M(''Blog'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">29&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$Blog-&gt;find($id);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这样，当我们访问&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">31&nbsp;http://serverName/index.php/Blog/read/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">的时候&nbsp;就会输出&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">32&nbsp;id=0</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当我们访问&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">33&nbsp;http://serverName/index.php/Blog/archive/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">的时候，输出：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">34&nbsp;year=2012&amp;month=01</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:17:28');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(195, 'ThinkPHP3.1新特性：命名范围 ', '<p>\r\n	<span style="font-size:14px;">概述</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">命名范围功能，给模型操作提供了一系列的（连贯操作）封装，让你更方便的查询和操作数据。我们来具体了解下这一用法。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">定义属性</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要使用命名范围功能，主要涉及到模型类的_scope属性定义和scope连贯操作方法的使用。我们首先定义_scope属性：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;class&nbsp;NewsModel&nbsp;extends&nbsp;Model&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$_scope&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;命名范围normal</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''normal''=&gt;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''where''=&gt;array(''status''=&gt;1),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;命名范围latest</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''latest''=&gt;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''order''=&gt;''create_time&nbsp;DESC'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''limit''=&gt;10,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">_scope属性是一个数组，每个数组项表示定义一个命名范围，命名范围的定义格式为：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">15&nbsp;''命名范围标识''=&gt;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''属性1''=&gt;''值1'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''属性2''=&gt;''值2'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">19&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 命名范围标识：可以是任意的字符串，用于标识当前定义的命名范围。</span><br />\r\n<span style="font-size:14px;"> 命名范围支持的属性包括：&nbsp;</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">where</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">查询条件</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">field</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">查询字段</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">order</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">结果排序</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">table</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">查询表名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">limit</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">结果限制</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">page</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">结果分页</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">having</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">having查询</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">group</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">group查询</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">lock</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">查询锁定</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">distinct</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">唯一查询</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">cache</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">查询缓存</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">每个命名范围的定义可以包括这些属性中一个或者多个。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">方法调用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">属性定义完成后，接下来就是使用scope方法进行命名范围的调用了，每调用一个命名范围，就相当于执行了命名范围中定义的相关操作选项。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">调用某个命名范围</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">最简单的调用方式就直接调用某个命名范围，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">20&nbsp;$Model&nbsp;=&nbsp;D(''News'');&nbsp;//&nbsp;这里必须使用D方法&nbsp;因为命名范围在模型里面定义</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">21&nbsp;$Model-&gt;scope(''normal'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">22&nbsp;$Model-&gt;scope(''latest'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成的SQL语句分别是：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">23&nbsp;SELECT&nbsp;*&nbsp;FROM&nbsp;think_news&nbsp;WHERE&nbsp;status=1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">24&nbsp;SELECT&nbsp;*&nbsp;FROM&nbsp;think_news&nbsp;ORDER&nbsp;BY&nbsp;create_time&nbsp;DESC&nbsp;LIMIT&nbsp;10</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">调用多个命名范围</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">也可以支持同时调用多个命名范围定义，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">25&nbsp;$Model-&gt;scope(''normal'')-&gt;scope(''latest'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者简化为：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">26&nbsp;$Model-&gt;scope(''normal,latest'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成的SQL都是：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">27&nbsp;SELECT&nbsp;*&nbsp;FROM&nbsp;think_news&nbsp;WHERE&nbsp;status=1&nbsp;ORDER&nbsp;BY&nbsp;create_time&nbsp;DESC&nbsp;LIMIT&nbsp;10</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果两个命名范围的定义存在冲突，则后面调用的命名范围定义会覆盖前面的相同属性的定义。如果调用的命名范围标识不存在，则会忽略该命名范围，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">28&nbsp;$Model-&gt;scope(''normal,new'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上面的命名范围中new是不存在的，因此只有normal命名范围生效，生成的SQL语句是：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">29&nbsp;SELECT&nbsp;*&nbsp;FROM&nbsp;think_news&nbsp;WHERE&nbsp;status=1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认命名范围</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">系统支持默认命名范围功能，如果你定义了一个default命名范围，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$_scope&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">31&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;默认的命名范围</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''default''=&gt;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">33&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''where''=&gt;array(''status''=&gt;1),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''limit''=&gt;10,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">35&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">36&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">那么调用default命名范围可以直接使用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">37&nbsp;$Model-&gt;scope()-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">而无需再传入命名范围标识名&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">38&nbsp;$Model-&gt;scope(''default'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">虽然这两种方式是等效的。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">命名范围调整</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你需要在normal命名范围的基础上增加额外的调整，可以使用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">39&nbsp;$Model-&gt;scope(''normal'',array(''limit''=&gt;5))-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成的SQL语句是：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">40&nbsp;SELECT&nbsp;*&nbsp;FROM&nbsp;think_news&nbsp;WHERE&nbsp;status=1&nbsp;LIMIT&nbsp;5</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当然，也可以在两个命名范围的基础上进行调整，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">41&nbsp;$Model-&gt;scope(''normal,latest'',array(''limit''=&gt;5))-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成的SQL是：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">42&nbsp;SELECT&nbsp;*&nbsp;FROM&nbsp;think_news&nbsp;WHERE&nbsp;status=1&nbsp;ORDER&nbsp;BY&nbsp;create_time&nbsp;DESC&nbsp;LIMIT&nbsp;5</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">自定义命名范围</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">又或者，干脆不用任何现有的命名范围，我直接传入一个命名范围：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">43&nbsp;$Model-&gt;scope(array(''field''=&gt;''id,title'',''limit''=&gt;5,''where''=&gt;''status=1'',''order''=&gt;''create_time&nbsp;DESC''))-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这样，生成的SQL变成：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">44&nbsp;SELECT&nbsp;id,title&nbsp;FROM&nbsp;think_news&nbsp;WHERE&nbsp;status=1&nbsp;ORDER&nbsp;BY&nbsp;create_time&nbsp;DESC&nbsp;LIMIT&nbsp;5</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">与连贯操作混合使用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">命名范围一样可以和之前的连贯操作混合使用，例如定义了命名范围_scope属性：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">45&nbsp;protected&nbsp;$_scope&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">46&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''normal''=&gt;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">47&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''where''=&gt;array(''status''=&gt;1),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">48&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''field''=&gt;''id,title'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">49&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''limit''=&gt;10,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">51&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后在使用的时候，可以这样调用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">52&nbsp;$Model-&gt;scope(''normal'')-&gt;limit(8)-&gt;order(''id&nbsp;desc'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这样，生成的SQL变成：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">53&nbsp;SELECT&nbsp;id,title&nbsp;FROM&nbsp;think_news&nbsp;WHERE&nbsp;status=1&nbsp;ORDER&nbsp;BY&nbsp;id&nbsp;desc&nbsp;LIMIT&nbsp;8</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果定义的命名范围和连贯操作的属性有冲突，则后面调用的会覆盖前面的。如果是这样调用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">54&nbsp;$Model-&gt;limit(8)-&gt;scope(''normal'')-&gt;order(''id&nbsp;desc'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成的SQL则是：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">55&nbsp;SELECT&nbsp;id,title&nbsp;FROM&nbsp;think_news&nbsp;WHERE&nbsp;status=1&nbsp;ORDER&nbsp;BY&nbsp;id&nbsp;desc&nbsp;LIMIT&nbsp;10</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">总结</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">命名范围功能的优势在于可以一次定义多次调用，并且在项目中也能起到分工配合的规范，避免开发人员在写CURD操作的时候出现问题，项目经理只需要合理的规划命名范围即可。&nbsp;</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:34:19'),
(196, '3.1的Widget有新玩法啦', '<p>\r\n	<span style="font-size:14px;">3.0版本的Widget对Action和View的支持力度是不够的，虽然能够实现基本的模板渲染输出。3.1版本的发布带来的多层MVC功能，给我们实现Widget的方式带来了新的思路，且看是如何实现吧。</span><br />\r\n<span style="font-size:14px;"> 看过</span><a href="http://thinkphp.cn/info/65.html"><span style="font-size:14px;">ThinkPHP3.1新特性详解：多层MVC</span></a><span style="font-size:14px;">的朋友们一定了解，3.1版本可以支持多层的控制器功能，因此我们可以在控制器层增加一层：Widget层。</span><br />\r\n<span style="font-size:14px;"> 首先，还是在项目的Lib目录下面创建一个Widget目录，并且创建一个TestWidget类（Lib/Widget/TestWidget.class.php）如下：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;class&nbsp;TestWidget&nbsp;extends&nbsp;Action{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;hello($name=''''){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;("hello,".$name."!");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们看到TestWidget和之前的区别是没有继承Widget类，而是直接继承了Action类，这就代表着在TestWidget中可以直接调用Action的方法，包括对模板的渲染输出。&nbsp;定义完成后，我们怎么调用这个Widget呢？用W方法肯定行不通了，这次需要R方法出场了。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> R方法的作用是远程调用模块的操作，但是3.1赋予了它新的作用，可以支持调用所有控制器层的操作方法，所以，我们可以在模板中这样来调用Widget：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6&nbsp;{:R(''Test/hello'',array(''ThinkPHP''),''Widget'')}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">就可以实现在页面中的某个区域输出：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7&nbsp;hello,ThinkPHP!</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">由于除了Action控制器之外的其他控制器层是无法直接通过URL访问的，所以这个Widget方法只能通过R方法在内部调用才可以。你可以在TestWidget类中调用Model来输出其他数据，如果需要渲染自身的模板，则可以直接调用display方法就行了。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8&nbsp;class&nbsp;TestWidget&nbsp;extends&nbsp;Action{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;hello($name=''''){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;assign(''name'',$name);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;display(''Test:hello'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们在项目的Tpl/Test/&nbsp;目录下面创建一个hello（Tpl/Test/hello.html）模板文件，添加输出：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14&nbsp;Hello,{$name}!</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你希望和之前的Widget一样，把模板文件放到当前目录下面，则可以使用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">15&nbsp;class&nbsp;TestWidget&nbsp;extends&nbsp;Action{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;hello($name=''''){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;assign(''name'',$name);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;display(dirname(__FILE__).''/Test/hello.html'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">20&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个时候，你就可以把刚才定义的hello模板文件放入Widget/Test/&nbsp;目录下面了。</span><br />\r\n<span style="font-size:14px;"> 其实这个功能对于新版的多层MVC功能来说，只是一个抛砖引玉了，各位朋友还可以挖掘更多的用法出来，也欢迎投稿分享。&nbsp;</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:34:53'),
(197, 'ThinkPHP3.1新特性：动态设置自动完成和自动验证', '<p>\r\n	<span style="font-size:14px;">在3.1版本之前，如果需要设置</span><a href="http://doc.thinkphp.cn/manual/auto_validate.html"><span style="font-size:14px;">自动验证</span></a><span style="font-size:14px;">或者</span><a href="http://doc.thinkphp.cn/manual/auto_operate.html"><span style="font-size:14px;">自动完成</span></a><span style="font-size:14px;">，一般来说必须定义在模型中，或者通过setProperty方法动态设置属性来完成，缺点是不太方便动态改变和调整。</span><br />\r\n<span style="font-size:14px;"> 不过3.1版本在模型类中增加auto和validate两个连贯操作，用于动态设置自动完成和自动验证规则，现在可以在Action中使用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;$validate&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''verify'',''require'',''验证码必须！''),&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''name'','''',''帐号名称已经存在！'',0,''unique'',1),&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6&nbsp;$auto&nbsp;=&nbsp;array&nbsp;(&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''password'',''md5'',1,''function'')&nbsp;,&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array(''create_time'',''time'',2,''function''),&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11&nbsp;M(''User'')-&gt;auto($auto)-&gt;validate($validate)-&gt;create();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其中$auto和$validate变量的规范和模型类的_auto和_validate属性的定义规则一致，而且还可以支持函数调用（由于PHP本身的限制，在类的属性定义中不能调用函数）。auto和validate方法必须在create方法之前被调用。</span><br />\r\n<span style="font-size:14px;"> 通过这一改进，你完全可以通过M方法实例化模型类后使用动态设置完成自动验证和自动完成操作，不必再依赖D方法了。&nbsp;</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:35:26'),
(198, 'ThinkPHP3.1新特性：字段合法性检测 ', '<p>\r\n	<span style="font-size:14px;">3.1增加了表单提交的字段合法性检测，更好的保护数据的安全性。这一特性是3.1安全特性中的一个重要部分。</span><br />\r\n<span style="font-size:14px;"> 表单字段合法性检测需要使用create方法创建数据对象的时候才能生效，有两种方式：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一、属性定义</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以给模型配置insertFields&nbsp;和&nbsp;updateFields属性用于新增和编辑表单设置，使用create方法创建数据对象的时候，不在定义范围内的属性将直接丢弃，避免表单提交非法数据。</span><br />\r\n<span style="font-size:14px;"> insertFields&nbsp;和&nbsp;updateFields属性的设置采用字符串（逗号分割多个字段）或者数组的方式，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">class&nbsp;UserModel&nbsp;extends&nbsp;Model{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$insertFields&nbsp;=&nbsp;array(''account'',''password'',''nickname'',''email'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$updateFields&nbsp;=&nbsp;array(''nickname'',''email'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置的字段应该是实际的数据表字段，而不受字段映射的影响。在使用的时候，我们调用create方法的时候，会根据提交类型自动识别insertFields和updateFields属性：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D(''User'')-&gt;create();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用create方法创建数据对象的时候，新增用户数据的时候，就会屏蔽''account'',''password'',''nickname'',''email''&nbsp;之外的字段，编辑的时候就会屏蔽''nickname'',''email''之外的字段。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 下面是采用字符串定义的方式，同样有效：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">class&nbsp;UserModel&nbsp;extends&nbsp;Model{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$insertFields&nbsp;=&nbsp;''account,password,nickname,email'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$updateFields&nbsp;=&nbsp;''nickname,email'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二、方法调用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果不想定义insertFields和updateFields属性，或者希望可以动态调用，可以在调用create方法之前直接调用field方法，例如，实现和上面的例子同样的作用：</span><br />\r\n<span style="font-size:14px;"> 在新增用户数据的时候，使用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User&nbsp;=&nbsp;M(''User'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User-&gt;field(''account,password,nickname,email'')-&gt;create();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User-&gt;add();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">而在更新用户数据的时候，使用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User&nbsp;=&nbsp;M(''User'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User-&gt;field(''nickname,email'')-&gt;create();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User-&gt;where($map)-&gt;save();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这里的字段也是实际的数据表字段。field方法也可以使用数组方式。</span><br />\r\n<span style="font-size:14px;"> 使用字段合法性检测后，你不再需要担心用户在提交表单的时候注入非法字段数据了。显然第二种方式更加灵活一些，根据需要选择吧！&nbsp;</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:35:52'),
(199, 'ThinkPHP3.1新特性：多数据库操作的完善', '<p>\r\n	<span style="font-size:14px;">正常情况下，如果应用只是操作同一个数据库（或者分布式数据库）的话，你只需要在项目配置文件中定义数据库连接信息即可。这里说的多数据库操作一般指的是在一个应用中会操作不同的数据库（包括同类型的和不同类型的数据库），甚至包括动态切换多数据库的情况。</span><br />\r\n<span style="font-size:14px;"> 早期版本的ThinkPHP切换数据库需要使用高级模型，现在可以更加轻松的解决了。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 新版对多数据库的支持有下面几种方式，开发人员可以根据实际情况选择合适的方式操作：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">模型定义数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果只是简单的跨库操作，并且只是个别模型类的话，你可以直接在模型类中定义dbName属性即可：&nbsp;protected&nbsp;$dbName&nbsp;=&nbsp;''top'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">实例化的时候，记得要使用D方法，例如：&nbsp;$User&nbsp;=&nbsp;D(''User'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这种方式定义的前提是当前数据库用户账户有操作top数据库的权限。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">模型定义数据库连接</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你的跨库操作需要使用不同的数据库连接账号或者需要连接不同类型的数据库，可以直接在模型类里面定义connection属性，在操作该模型类的时候，就会自动连接到指定的数据库。例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">protected&nbsp;$connection&nbsp;=&nbsp;''mysql://root:1234@localhost:3306/thinkphp'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者使用数组方式定义：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">protected&nbsp;$connection&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''db_type''&nbsp;&nbsp;=&gt;&nbsp;''mysql'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''db_user''&nbsp;&nbsp;=&gt;&nbsp;''root'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''db_pwd''&nbsp;&nbsp;&nbsp;=&gt;&nbsp;''1234'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''db_host''&nbsp;&nbsp;=&gt;&nbsp;''localhost'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''db_port''&nbsp;&nbsp;=&gt;&nbsp;''3306'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''db_name''&nbsp;&nbsp;=&gt;&nbsp;''thinkphp''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果我们已经在配置文件中配置了额外的数据库连接信息，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;//数据库配置1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''DB_CONFIG1''&nbsp;=&nbsp;array(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''db_type''&nbsp;&nbsp;=&gt;&nbsp;''mysql'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''db_user''&nbsp;&nbsp;=&gt;&nbsp;''root'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''db_pwd''&nbsp;&nbsp;&nbsp;=&gt;&nbsp;''1234'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''db_host''&nbsp;&nbsp;=&gt;&nbsp;''localhost'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''db_port''&nbsp;&nbsp;=&gt;&nbsp;''3306'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;''db_name''&nbsp;&nbsp;=&gt;&nbsp;''thinkphp''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;//数据库配置2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;''DB_CONFIG2''&nbsp;=&gt;&nbsp;''mysql://root:1234@localhost:3306/thinkphp'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">那么，我们可以把模型类的属性定义改为：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//调用配置文件中的数据库配置1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">protected&nbsp;$connection&nbsp;=&nbsp;''DB_CONFIG1'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//调用配置文件中的数据库配置2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">protected&nbsp;$connection&nbsp;=&nbsp;''DB_CONFIG2'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这种方式的优点可以支持不同数据库类型，也就是说可以和当前的项目配置文件中的数据库类型不同，缺点是必须使用D方法实例化，而且不能动态设定。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">模型实例化指定连接</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">新版支持在实例化模型的时候指定数据库连接，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User&nbsp;=&nbsp;new&nbsp;Model(''User'',''think_'',''mysql://root:1234@localhost/thinkphp'');&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者使用M方法实例化：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User&nbsp;=&nbsp;M(''User'',''think_'',''mysql://root:1234@localhost/thinkphp'');&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">M方法的第二个参数是数据表的前缀，如果留空表示采用项目配置的数据表前缀，第三个参数则是当前实例化需要的数据库连接信息。</span><br />\r\n<span style="font-size:14px;"> 同样的道理，在实例化中传入的数据库连接信息也可以采用配置名称的方式，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User&nbsp;=&nbsp;M(''User'',''think_'',''DB_CONFIG2'');&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果当前操作不需要切换数据库连接，只是需要切换数据库，则可以采用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User&nbsp;=&nbsp;M(''top.User'',''think_'');&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表示实例化top数据库的think_user数据表。如果你的数据表没有前缀，可以使用&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$User&nbsp;=&nbsp;M(''top.User'',null);&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表示实例化top数据库的user表。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">动态切换连接</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">系统还提供了更灵活的动态操作，可以使用模型类提供的db方法进行多数据库连接和切换操作，用法：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Model-&gt;db("数据库编号","数据库配置");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据库编号用数字格式，对于已经调用过的数据库连接，是不需要再传入数据库连接信息的，系统会自动记录。对于初始化的数据库连接，内部的数据库编号是0，因此为了避免冲突，请不要再次定义数据库编号为0的数据库配置。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 数据库配置的定义方式和模型定义connection属性一样，支持数组、字符串以及调用配置参数三种格式。</span><br />\r\n<span style="font-size:14px;"> Db方法调用后返回当前的模型实例，直接可以继续进行模型的其他操作，所以该方法可以在查询的过程中动态切换，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db(1,"mysql://root:123456@localhost:3306/test")-&gt;query("查询SQL");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该方法添加了一个编号为1的数据库连接，并自动切换到当前的数据库连接。</span><br />\r\n<span style="font-size:14px;"> 当第二次切换到相同的数据库的时候，就不需要传入数据库连接信息了，可以直接使用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db(1)-&gt;query("查询SQL");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在没有再次进行数据库切换之前，当前的所有操作都是针对db(1)所设置的数据库。</span><br />\r\n<span style="font-size:14px;"> 如果需要切换到默认的数据库连接，只需要调用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db(0);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果我们已经在项目配置中定义了其他的数据库连接信息，我们就可以直接在db方法中调用配置进行连接了：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db(1,"DB_CONFIG1")-&gt;query("查询SQL");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db(2,"DB_CONFIG2")-&gt;query("查询SQL");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果切换数据库之后，数据表和当前不一致的话，可以使用table方法指定要操作的数据表：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db(1)-&gt;table("top_user")-&gt;find();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果要返回当前的数据库连接，可以直接调用空的db方法即可，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$db&nbsp;=&nbsp;$this-&gt;db();</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:36:23'),
(200, 'ThinkPHP3.1新特性：页面压缩输出支持', '<p>\r\n	<span style="font-size:14px;">现在大多数浏览器都已经支持页面的压缩输出，通过压缩输出，页面大小可以减少30%，由于3.0版本没有内置页面压缩输出功能，所以一般来说，需要自己在入口文件中添加：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ob_start(''ob_gzhandler'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是由于服务器环境的不同，有时候这个配置会和php.ini文件中的zlib压缩配置冲突。3.1新版则内置了页面压缩输出功能，不需要再手动添加&nbsp;ob_gzhandler代码，增加OUTPUT_ENCODE配置参数，并支持检测zlib.output_compression。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 框架默认会进行页面压缩输出，并且会自动检测zlib.output_compression配置，如果php.ini里面zlib.output_compression是开启状态，则仍然以服务器环境的页面压缩方式进行页面压缩。</span><br />\r\n<span style="font-size:14px;"> 相关代码就一行：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if(!ini_get(''zlib.output_compression'')&nbsp;&amp;&amp;&nbsp;C(''OUTPUT_ENCODE''))&nbsp;ob_start(''ob_gzhandler'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在个别特殊的环境下面，如果出现类似下面的错误提示：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">output_handler&nbsp;"ob_gzhandler"&nbsp;conflicts&nbsp;with&nbsp;"zlib.output_compression"&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般是由于你的服务器配置了其他的压缩方式导致冲突，这个时候你可以手动关闭OUTPUT_ENCODE，即：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''OUTPUT_ENCODE''=&gt;false</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以解决问题。&nbsp;</span>\r\n</p>\r\n<div>\r\n	<br />\r\n</div>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:36:46'),
(201, 'ThinkPHP函数详解：C方法', '<p>\r\n	<span style="font-size:14px;">C方法是ThinkPHP用于设置、获取，以及保存配置参数的方法，使用频率较高。</span><br />\r\n<span style="font-size:14px;"> 了解C方法需要首先了解下ThinkPHP的</span><a href="http://doc.thinkphp.cn/manual/config.html"><span style="font-size:14px;">配置</span></a><span style="font-size:14px;">，因为C方法的所有操作都是围绕配置相关的。ThinkPHP的配置文件采用PHP数组格式定义。由于采用了函数重载设计，所以用法较多，我们来一一说明下。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 设置参数&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C(''DB_NAME'',''thinkphp'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表示设置DB_NAME配置参数的值为thinkphp，由于配置参数不区分大小写，所以下面的写法也是一样：</span><a></a><span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C(''db_name'',''thinkphp'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是建议保持统一大写的配置定义规范。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 项目的所有参数在未生效之前都可以通过该方法动态改变配置，最后设置的值会覆盖前面设置或者惯例配置里面的定义，也可以使用参数配置方法添加新的配置。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 支持二级配置参数的设置，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C(''USER.USER_ID'',8);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置参数不建议超过二级。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 如果要设置多个参数，可以使用批量设置，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$config[''user_id'']&nbsp;=&nbsp;1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$config[''user_type'']&nbsp;=&nbsp;1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C($config);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果C方法的第一个参数传入数组，就表示批量赋值，上面的赋值相当于：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C(''USER_ID'',1);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C(''USER_TYPE'',1);</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 获取参数&nbsp;</span><br />\r\n<span style="font-size:14px;"> 要获取设置的参数，可以用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$userId&nbsp;=&nbsp;C(''USER_ID'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$userType&nbsp;=&nbsp;C(''USER_TYPE'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果USER_ID参数尚未定义过，则返回NULL。</span><br />\r\n<span style="font-size:14px;"> 也可以支持获取二级配置参数，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$userId&nbsp;=&nbsp;C(''USER.USER_ID'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果传入的配置参数为空，表示获取全部的参数：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$config&nbsp;=&nbsp;C();</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 保存设置&nbsp;</span><br />\r\n<span style="font-size:14px;"> 3.1版本增加了一个永久保存设置参数的功能，仅针对批量赋值的情况，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$config[''user_id'']&nbsp;=&nbsp;1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$config[''user_type'']&nbsp;=&nbsp;1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C($config,''name'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在批量设置了config参数后，会连同当前所有的配置参数保存到缓存文件（或者其他配置的缓存方式）。</span><br />\r\n<span style="font-size:14px;"> 保存之后，如果要取回保存的参数，可以用&nbsp;$config&nbsp;=&nbsp;C('''',''name'');</span>\r\n</p>\r\n<p>\r\n	其中name就是前面保存参数时用的缓存的标识，必须一致才能正确取回保存的参数。取回的参数会和当前的配置参数合并，无需手动合并。\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:37:23'),
(202, 'ThinkPHP函数详解：cookie方法', '<p>\r\n	<span style="font-size:14px;">cookie函数也是一个多元化操作函数，完成cookie的设置、获取和删除操作。&nbsp;</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td colspan="2">\r\n				<p>\r\n					<span style="font-size:14px;">Cookie&nbsp;用于Cookie&nbsp;设置、获取、删除操作</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">用法</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">cookie($name,&nbsp;$value='''',&nbsp;$option=null)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">参数</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">name（必须）：要操作的cookie变量</span><br />\r\n<span style="font-size:14px;"> value（可选）：要设置的cookie值</span><br />\r\n<span style="font-size:14px;"> option（可选）：传入的cookie设置参数，默认为空</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">返回值</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">见详（根据具体的用法返回不同的值）</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Cookie设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cookie(''name'',''value'');&nbsp;&nbsp;//设置cookie</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cookie(''name'',''value'',3600);&nbsp;//&nbsp;指定cookie保存时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.1版本开始，cookie方法增加对数组的支持（采用轻量级的json编码格式保存&nbsp;减少存储空间），例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cookie(''name'',array(''name1'',''name2''));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">还可以支持参数传入的方式完成复杂的cookie赋值，下面是对cookie的值设置3600秒有效期，并且加上cookie前缀think_&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cookie(''name'',''value'',array(''expire''=&gt;3600,''prefix''=&gt;''think_''))</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数组参数可以采用query形式参数&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cookie(''name'',''value'',''expire=3600&amp;prefix=think_'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">和上面的用法等效。</span><br />\r\n<span style="font-size:14px;"> 传入的option参数支持prefix,expire,path,domain四个索引参数，如果没有传入或者传入空值的&nbsp;话，会默认取COOKIE_PREFIX、COOKIE_EXPIRE、COOKIE_PATH和COOKIE_DOMAIN四个配置参数。如果只传入个&nbsp;别参数，那么也会和默认的配置参数合并。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Cookie获取</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">获取cookie很简单，无论是怎么设置的cookie，只需要使用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$value&nbsp;=&nbsp;cookie(''name'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果没有设置cookie前缀的话&nbsp;相当于&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$value&nbsp;=&nbsp;$_COOKIE[''name'']</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果设置了cookie前缀的话，相当于&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$value&nbsp;=&nbsp;$_COOKIE[''前缀+name'']</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Cookie删除</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除某个cookie的值，使用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cookie(''name'',null);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要删除所有的Cookie值，可以使用&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cookie(null);&nbsp;//&nbsp;清空当前设定前缀的所有cookie值</span>\r\n</p>\r\n<p>\r\n	cookie(null,''think_'');&nbsp;//&nbsp;&nbsp;清空指定前缀的所有cookie值\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:37:49');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(203, 'ThinkPHP函数详解：cache方法 ', '<p>\r\n	<span style="font-size:14px;">cache方法是3.0版本开始新增的缓存管理方法。&nbsp;</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td colspan="2">\r\n				<p>\r\n					<span style="font-size:14px;">cache&nbsp;用于缓存设置、获取、删除操作</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">用法</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">cache($name,&nbsp;$value='''',$expire=0)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">参数</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">name（必须）：如果传入数组&nbsp;则表示进行缓存初始化，如果是字符串则表示缓存赋值、获取或者删除操作。</span><br />\r\n<span style="font-size:14px;"> Value（可选）：要设置的缓存值，如果传入null表示删除缓存，默认为空字符</span><br />\r\n<span style="font-size:14px;"> expire（可选）：要设置的缓存有效期（单位为秒），默认为始终有效</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">返回值</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">见详（根据具体的用法返回不同的值）</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">缓存初始化</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache方法传入数组即表示进行缓存初始化，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(array(''type''=&gt;''xcache'',''prefix''=&gt;''think'',''expire''=&gt;600));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">支持的配置参数根据不同的缓存方式（由type参数设置），通用的缓存参数包括：&nbsp;</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">参数名</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">说明</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">expire</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">缓存有效期（时间为秒）</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">length</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">缓存队列长度</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">prefix</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">缓存标识前缀</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">type</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">缓存类型</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">如果没有设置type参数，则默认为文件缓存，cache方法目前可以支持的缓存类型包括File、Apachenote、Apc、&nbsp;Eaccelerator、Memcache、Shmop、Sqlite、Db、Redis、Xcache和WinCache，不同缓存类型的缓存参数可&nbsp;以参考：</span><a href="http://doc.thinkphp.cn/_edit/manual/dynamic_cache.html"><span style="font-size:14px;">动态缓存</span></a><span style="font-size:14px;">&nbsp;。</span><br />\r\n<span style="font-size:14px;"> 缓存初始化操作后返回的是一个缓存实例化对象。</span><a></a><span style="font-size:14px;">&nbsp;如果你没有进行缓存初始化的话，cache方法会在你进行缓存操作之前自动初始化（用系统默认的缓存方式和缓存参数），默认缓存配置参数包括：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''DATA_CACHE_TIME''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;数据缓存有效期&nbsp;0表示永久缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''DATA_CACHE_COMPRESS''&nbsp;&nbsp;&nbsp;=&gt;&nbsp;false,&nbsp;&nbsp;&nbsp;//&nbsp;数据缓存是否压缩缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''DATA_CACHE_CHECK''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;false,&nbsp;&nbsp;&nbsp;//&nbsp;数据缓存是否校验缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''DATA_CACHE_PREFIX''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;'''',&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;缓存前缀</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''DATA_CACHE_TYPE''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;''File'',&nbsp;&nbsp;//&nbsp;数据缓存类型</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''DATA_CACHE_PATH''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;TEMP_PATH,//&nbsp;缓存路径设置&nbsp;(仅对File方式有效)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''DATA_CACHE_SUBDIR''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;false,&nbsp;&nbsp;//&nbsp;使用子目录缓存&nbsp;(根据缓存标识的哈希创建子目录)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''DATA_PATH_LEVEL''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&gt;&nbsp;1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;子目录缓存级别</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这些具体的缓存参数的用法，我们以后会在快速入门：缓存中详细描述。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">缓存设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">缓存初始化之后，就可以进行缓存操作了，&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(''name'',''value'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">会使用当前配置的缓存方式用name标识来缓存value值。</span><br />\r\n<span style="font-size:14px;"> 可以单独设置该缓存数据的有效期，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(''name'',''value'',3600);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">缓存数据一个小时。</span><br />\r\n<span style="font-size:14px;"> 为了保证缓存的安全，建议对返回值做出判断，如果缓存设置失败，则返回false，否则返回true。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">获取缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$value&nbsp;=&nbsp;cache(''name'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果缓存标识不存在或者已经过期，则返回false，否则返回缓存值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache(''name'',NULL);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除缓存标识为name的缓存数据。</span><br />\r\n<span style="font-size:14px;"> 如果要切换缓存方式，可以再次进行缓存初始化操作。</span><br />\r\n<span style="font-size:14px;"> 或者使用下面的方式：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cache&nbsp;=&nbsp;cache(array(''type''=&gt;''xcache'',''prefix''=&gt;''think'',''expire''=&gt;600));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cache-&gt;name&nbsp;=&nbsp;''value'';&nbsp;//&nbsp;设置缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$value&nbsp;=&nbsp;$cache-&gt;name;&nbsp;//&nbsp;获取缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">unset($cache-&gt;name);&nbsp;//&nbsp;删除缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你设置了缓存前缀的话，对应的缓存操作只是对应该缓存前缀标识的，不会影响其他的缓存。&nbsp;</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:38:12'),
(204, 'ThinkPHP函数详解：N方法', '<p>\r\n	<span style="font-size:14px;">N方法属于计数器方法，被用于核心的查询、缓存统计的计数和统计。但是其实可以用于应用的其他计数用途，用法比较简单，调用格式：</span><br />\r\n<span style="font-size:14px;"> N(''计数位置''[,''步进值''])&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 例如，我们要统计页面中的查询次数，可以用&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">N(''read'',1);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表示每次执行到该位置都会引起计数器加1，到页面结束之前，我们就可以用&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$count&nbsp;=&nbsp;N(''read'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">来统计当前页面执行的查询数目。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 如果你希望计数器每次增加5，那么可以改变步进值，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">N(''score'',5);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">需要注意的是，N方法页面执行完毕后的统计结果不会带入下次统计。&nbsp;</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:38:36'),
(205, 'field方法的用法总结，或许还有你不知道的', '<p>\r\n	<span style="font-size:14px;">ThinkPHP的连贯操作方法中field方法有很多的使用技巧，field方法主要目的是标识要返回或者操作的字段，下面详细道来。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1、用于查询</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在查询操作中field方法是使用最频繁的。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(''id,title,content'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这里使用field方法指定了查询的结果集中包含id,title,content三个字段的值。&nbsp;执行的SQL相当于：&nbsp;SELECT&nbsp;id,title,content&nbsp;FROM&nbsp;table</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当然，除了select方法之外，所有的查询方法，包括find等都可以使用field方法，这里只是以select为例说明。</span><br />\r\n<span style="font-size:14px;"> 上面的例子也可以使用数组代替：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(array(''id'',''title'',''content''))-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">最终执行的SQL和上面等效。</span><br />\r\n<span style="font-size:14px;"> ^_^似乎看起来数组的用法过于复杂，不过先别下这个结论，后面就会明白数组用法的好处了。</span><br />\r\n<span style="font-size:14px;"> 数组方式的定义可以为某些字段定义别名，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(array(''id'',''title''=&gt;''name'',''content''))-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">执行的SQL相当于：&nbsp;SELECT&nbsp;id,title&nbsp;as&nbsp;name,content&nbsp;FROM&nbsp;table</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你希望直接使用：&nbsp;$Model-&gt;field(''id,title&nbsp;as&nbsp;name,content'')-&gt;select();可能会得到错误的结果。</span><br />\r\n<span style="font-size:14px;"> 对于一些更复杂的字段要求，数组的优势则更加明显，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(array(''id'',''concat(name,''-'',id)''=&gt;''truename'',''LEFT(title,7)''=&gt;''sub_title''))-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">执行的SQL相当于：&nbsp;SELECT&nbsp;id,concat(name,''-'',id)&nbsp;as&nbsp;truename,LEFT(title,7)&nbsp;as&nbsp;sub_title&nbsp;FROM&nbsp;table</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">想必大家都明白了，对于需要在field中使用SQL函数的情况，数组方式可以很好的解决。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 是不是field方法就这么点作用了呢？如果你这么认为，那就太低估ThinkPHP的field方法了，ThinkPHP考虑的细节远比你想象的要周到^_^。</span><br />\r\n<span style="font-size:14px;"> 先看下面的情况，如果有一个表有非常多的字段，而且有两个需求，首先要求需要获取所有的字段，这个也许很简单，因为不调用field方法或者直接使用空的field方法都能做到，事实上，的确如此：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field()-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(''*'')-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上面三个用法是等效的，都相当于执行SQL：&nbsp;SELECT&nbsp;*&nbsp;FROM&nbsp;table</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是这并不是我说的获取所有字段，我希望显式的调用所有字段（对于对性能要求比较高的系统，这个要求并不过分，起码是一个比较好的习惯），那么OK，仍然很简单，下面的用法可以完成预期的作用：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(true)-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fied(true)的用法会显式的获取数据表的所有字段列表，哪怕你的数据表有100个字段。</span><br />\r\n<span style="font-size:14px;"> 第二个需求是我希望获取排除content字段（文本字段的值非常耗内存）之外的所有字段值，我们就可以使用field方法的排除功能，例如下面的方式就可以实现所说的功能：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(''content'',true)-&gt;select();要排除更多的字段也可以：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(''user_id,content'',true)-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//或者用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(array(''user_id'',''content''),true)-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、用于写入</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">除了查询操作之外，field方法还有一个非常重要的安全功能--字段合法性检测（注意：该功能3.1版本开始才能支持）。field方法结合create方法使用就可以完成表单提交的字段合法性检测，如果我们在表单提交的处理方法中使用了：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$Model-&gt;field(''title,email,content'')-&gt;create();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">即表示表单中的合法字段只有title,email和content字段，无论用户通过什么手段更改或者添加了浏览器的提交字段，都会直接屏蔽。因为，其他是所有字段我们都不希望由用户提交来决定，你可以通过自动完成功能定义额外的字段写入。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">总结</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">从field方法的用法我们应该可以了解什么叫做小方法大用法，当然，我们只是希望ThinkPHP给你的开发带来更多的方便和惊奇，欢迎大家一起来分享你的用法和心得！</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:39:29'),
(206, '模板引擎使用详解：包含公共模板 ', '<p>\r\n	<span style="font-size:14px;">ThinkPHP内置了一个基于XML的编译型模板引擎，本篇开始对其内置的标签做深入的讲解，如果你使用的是Smarty等第三方模板引擎，请忽略。</span><br />\r\n<span style="font-size:14px;"> 变量的输出我们已经在</span><a href="http://www.thinkphp.cn/info/154.html"><span style="font-size:14px;">快速入门的变量输出</span></a><span style="font-size:14px;">中做了详细的描述，后面主要讲解变量的输出判断、循环和控制，以及包含公共模板和资源文件等。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">包含公共模板</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">include标签</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用include标签在当前模板中包含公共模板，例如常见的header和footer等公共模板，include标签最常用的属性是file，但是支持不同的用法，其用法基本和我们常用的模板渲染方法display方法差不多。例如：</span><br />\r\n<span style="font-size:14px;"> 包含Public目录下面的header模板&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;&lt;include&nbsp;file="Public:header"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">包含当前模板目录下面的menu模板&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;&lt;include&nbsp;file="menu"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果当前使用了多模板主题功能，还可以包含其他主题的模板&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;&lt;include&nbsp;file="blue:User:read"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表示包含blue模板主题下面的User/read模板文件，include标签所支持的模板深度只能到操作层次，也就是说ThinkPHP默认的模板结构采用的是：主题/模块/操作.模板后缀，使用上述用法包含模板的时候，file属性不需要指定模板后缀，如果你的模板结构不是标准结构，可以采用包含完整模板文件的方式：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;&lt;include&nbsp;file="./Tpl/default/header.html"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你在file属性中指定了模板文件后缀，则就会认为是包含完整模板的规则，如果你采用的是相对路径包含，那么当前的起始目录应该是项目入口文件所在的位置。</span><br />\r\n<span style="font-size:14px;"> 也可以用变量的方式：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&nbsp;&lt;include&nbsp;file="$filename"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是并不推荐变量调用方式，因为由于模板引擎的编译特性，编译后会被缓存。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">参数传递</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">include标签除了file属性之外，还支持传入一些简单的参数，并直接传递给模板文件使用，举个例子，我们包含一个头部文件，希望在模板文件里面动态指定网页标题和关键字信息，那么可以通过：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6&nbsp;&lt;include&nbsp;file="Public:header"&nbsp;title="ThinkPHP框架"&nbsp;keywords="开源WEB开发框架"/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这里我们在包含header公共模板的时候，还传入了title和keywords两个参数，我们来看下header模板文件怎么接收这些参数：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7&nbsp;&lt;html&nbsp;xmlns="http://www.w3.org/1999/xhtml"&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8&nbsp;&lt;head&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9&nbsp;&lt;title&gt;[title]&lt;/title&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10&nbsp;&lt;meta&nbsp;name="keywords"&nbsp;content="[keywords]"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11&nbsp;&lt;/head&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">模板文件中的[title]和[keywords]来替换include标签中传入的参数。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">包含多个模板</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">从3.1版本开始，include标签可以支持同时包含多个模板文件，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12&nbsp;&lt;include&nbsp;file="Public:header,Public:menu"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">也可以支持不同方式的包含混合，例如：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13&nbsp;&lt;include&nbsp;file="Public:header,./Tpl/default/menu.html"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">嵌套包含模板</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">include标签支持嵌套使用，例如，我们可以在header公共模板文件中再次包含另外一个公共模板：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14&nbsp;&lt;html&nbsp;xmlns="http://www.w3.org/1999/xhtml"&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">15&nbsp;&lt;head&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">16&nbsp;&lt;title&gt;[title]&lt;/title&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">17&nbsp;&lt;meta&nbsp;name="keywords"&nbsp;content="[keywords]"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">18&nbsp;&lt;/head&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">19&nbsp;&lt;include&nbsp;file="Public:menu"&nbsp;/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">并且理论上不限制嵌套层次，只要避免不发生循环嵌套的情况即可。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">总结</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">include标签可以一定程度上简化重复的模板书写，和便于同步修改，不足就是如果公共模板文件发生更改，但是当前的主模板文件没有更改，则不会自动更新模板缓存，除非你设置了模板缓存有效期，那么在缓存过期后会自动更新模板缓存</span>\r\n</p>', 14, 'thinkphp', 1, 0, 1, '2013-03-10 12:39:52'),
(207, '播放swf文件的代码', '<span style="font-size:14px;">&lt;object data="./SoundTest.swf" type="application/x-shockwave-flash" width="1" height="1" style="visibility:hidden"&gt;</span><br />\r\n<div>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&lt;param name="movie" value="./sound.swf" /&gt;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&lt;param name="menu" value="false" /&gt;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&lt;param name="quality" value="high" /&gt;</span><br />\r\n<span style="font-size:14px;"> &lt;/object&gt;''</span>\r\n</div>', 13, '', 1, 0, 1, '2013-03-10 12:40:25');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(208, '13 Nginx的标准http模块 ', '<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http的核心模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.alias</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：alias&nbsp;file-path&nbsp;|&nbsp;direcotry-path</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：no</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于在URL和文件系统路径之间实现映射。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/i/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">alias&nbsp;/spool/w3/images/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当我们访问URL地址/i/top.gif会自动返回文件/spool/w3/images/top.gif。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意，在被替换的路径中，可以使用变量。但是在含有正则表达式的location中，不能使用alias指令，如果想完成功能，必须使用rewrite。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.client_body_in_file_only</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：client_body_in_file_only&nbsp;on|off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http，server，location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令允许将一个客户端的请求内容记录到一个文件中，该文件在请求完成后不会被删除。在内置的perl中，该指令可以用于调试$r-&gt;request_body_file方法。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.client_body_in_single_buffer</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：client_body_in_single_buffer&nbsp;on|off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http，server，location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令指定是否保持整个内容在一个单一的客户端请求缓冲区中，该指令在使用变量$request_body时被推荐使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.client_body_buffer_size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：client_body_buffer_size&nbsp;size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：8K/16K</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http，server，location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令指定客户端请求内容的缓冲区大小。如果客户端请求内容大于缓冲区，整个请求内容或部分请求内容将被写入临时文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.client_body_temp_path</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：client_body_temp_path&nbsp;dir&nbsp;[level1&nbsp;[level2&nbsp;[level3]]]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http，server，location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于指定存放请求内容临时文件的目录。缓存目录最多支持3层子目录。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">client_body_temp_path&nbsp;/spool/nginx/client_temp&nbsp;1&nbsp;2;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">则目录结构类似于：/spool/nginx/client_temp/2/00002323</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.client_body_timeout</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：client_body_timeout&nbsp;time</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：60</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http，server，location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置读取客户端请求内容的超时时间。如果超过该指令设置的时间，Nginx将返回"Request&nbsp;time&nbsp;out"错误信息(HTTP状态码为408)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.client_header_buffer_size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：client_header_buffer_size&nbsp;size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：1K</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置客户端请求的Header头缓冲区大小。对大多数请求，1KB大小足够了，但是对于Cookie内容较大的请求来说，可能需要加大。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8.client_header_timeout</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是60，使用环境http和server。主要设置读取客户端请求header头信息超时时间。如果超时，则返回408.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9.client_max_body_size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是1MB，该指令设置允许接受的客户端请求内容的最大值，即客户端请求header头信息里面的content-length。如果服务器提供上传1MB以上的大文件等操作，则需要加大该值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10.directio</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是off,该指令用于设置一个文件大小，当读取文件超过该大小，将直接通过内存访问该文件，不经过cpu而直接从内存存取数据。该指令会使sendfile功能失效，对于大文件来说，使用该指令是好的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11.error_page</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：error_page&nbsp;code&nbsp;[code&nbsp;...]&nbsp;[=&nbsp;|=answer-code]&nbsp;uri</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http，server，location，if&nbsp;in&nbsp;location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置如果出现指定的http错误状态码，则返回给客户端显示的对应的URI地址。示例如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">error_page&nbsp;404&nbsp;/404.html;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">error_page&nbsp;502&nbsp;503&nbsp;504&nbsp;/50x.html</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果响应错误代码的页面是php等fastcgi程序，则最好在error_page中加上=号。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">error_page&nbsp;404&nbsp;=&nbsp;/404.php;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12.limit_except</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：limit_except&nbsp;methods&nbsp;{....}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：no</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于限制HTTP方法访问location中的内容，示例如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_except&nbsp;GET&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">allow&nbsp;192.168.1.0/32;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">deny&nbsp;all;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13.limit_rate</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：limit_rate&nbsp;speed</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：no</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,server,location,if&nbsp;in&nbsp;location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令主要用来限速，限速单位是"字节数/秒"，一般在提供HTTP下载等应用中会用到该指令。限速只对一个连接有效，如果客户端开启两个连接下载，下载速度将是限速值的两倍。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：限制每个连接的下载速度为100KB/秒</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_rate&nbsp;100k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14.limit_rate_after</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令可以设置一个字节数，下载的字节数大于该值后，limit_rate指令的限速功能将起效。对于mp3在线播放，http方式的flash视频等有不错的效果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：下载的文件字节数超过1MB后，限速为100KB/秒。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_rate_after&nbsp;1m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_rate&nbsp;100k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">15.listen</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令默认值是listen&nbsp;80，使用环境只能在server。用于设置虚拟主机监听的服务器地址和端口号。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果要监听IPV6的地址，则示例如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;[::]:8000;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;[fe80::1];</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果要虚拟主机同时支持http和https:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;80;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;443&nbsp;default&nbsp;ssl;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">16.location&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：location&nbsp;[=&nbsp;|&nbsp;~&nbsp;|&nbsp;~*&nbsp;|&nbsp;^~]&nbsp;/uri/{...}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：no</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令允许对不同的URI进行不同的配置，既可以使用字符串，也可以使用正则表达式。使用正则表达式，须使用以下前缀：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a.&nbsp;~*&nbsp;&nbsp;表示不区分大小写匹配。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">b.&nbsp;~&nbsp;&nbsp;表示区分大小写匹配。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在匹配过程中，Nginx将首先匹配字符串，然后再去匹配正则表达式。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">c.&nbsp;&nbsp;^~&nbsp;表示URI以某个常规字符串开头，理解为匹配URL路径即可。Nginx不对url做编码，因此请求/static/20%/aa可以被规则为&nbsp;^~&nbsp;/static/&nbsp;/aa(注意是空格)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d.&nbsp;=&nbsp;&nbsp;表示精确的URI匹配。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">17.log_not_found</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令默认值是on。用来启用或禁止404错误日志，这个指令可以用来禁止Nginx记录找不到robots.txt和favicon.ico这类文件的错误信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">18.open_file_cache&nbsp;设置打开文件的缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">open_file_cache_errors&nbsp;设置是否开启搜索文件的缓存错误</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">open_file_cache_min_uses&nbsp;指定在open_file_cache指令设置的时间内文件的最小使用数，如果打开的文件超过该数量，则文件描述符会保持缓存中的打开状态。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">open_file_cache_valid&nbsp;该指令用于指定检查open_file_cache指令中条款有效性时间。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">19.port_in_redirect</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是on。用于允许或阻止Nginx重定向过程中的端口操作。如果port_in_redirect为on，Nginx在请求重定向时则不会加上端口。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">20.root</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是root&nbsp;html。该指令主要用来指定请求的文档根目录。例如，配置内容为location&nbsp;/i/&nbsp;{root&nbsp;/spool/w3;}&nbsp;时，请求URI地址"/i/top.gif"将返回文件"/spool/w3/i/top.gif"的内容给客户端。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">21.send_timeout</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是60。该指令用于设置发送给客户端的应答超时时间。超时时间是指进行了两次TCP握手，还没有转化为established状态的时间。如果超过这个时间客户端没有响应，Nginx则关闭连接。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">22.sendfile</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是off。该指令启用或禁用sendfile()函数。sendfile()函数是作用于数据拷贝在两个文件描述符之间的操作函数，这个操作在内核中进行，所以称为"零拷贝"。sendfile函数read和write函数要高效得多。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境在http。用于配置虚拟主机，在server{...}中，使用listen指令为一个虚拟主机设置监听的IP和端口，使用server_name指令来设置不同的虚拟主机名称。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">23.server_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令主要完成以下两项操作：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.根据客户端请求Header头信息中的Host域名，来匹配该请求应该由哪个虚拟主机配置server{...}来处理。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.如果server_name_in_redirect设置为on，设置的主机名将被用于HTTP重定向。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">24.server_name_in_redirect</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是on。如果设置为on，Nginx将使用server_name指令设置的第一个名称来做重定向。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">25.tcp_nodelay</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是on。该指令允许或禁止使用套接字选项TCP_NODELAY,仅适用于keep-alive连接。默认情况下数据发送时，内核并不会马上发送，它可能等待更多的字节组成一个包，以提高IO发送的效率。但是每次只发送很少字节的程序中，使用TCP_NODELAY时等待会比较长。请根据实际情况选择开启。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">26.tcp_nopush</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是off。该指令允许或禁止使用TCP_CORK套接字选项。该选择仅在sendfile开启的时候才起作用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">27.try_files</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：try_files&nbsp;param1&nbsp;[param2&nbsp;...&nbsp;paramN]&nbsp;fallback</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：none</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于告诉Nginx测试每个文件是否存在，并且使用首先找到的文件作为URI。如果没有找到文件，则调用location&nbsp;fallback。fallback是一个请求参数，它可以是一个命名的location，也可以是任何可能是URI。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">try_files&nbsp;index.html&nbsp;index.htm&nbsp;@fallback;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;@fallback</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">root&nbsp;/var/www/error;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index&nbsp;index.html;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP核心模块中可以使用的变量</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx&nbsp;HTTP&nbsp;核心模块支持一些与Apache变量名称相同的内置变量，例如：$http_user_agent,$http_cookie，此外还支持一些Nginx特有的其他变量：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$arg_PARAMETER&nbsp;包含了当查询字符串时，GET请求可变参数的值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$args&nbsp;等于请求行中的参数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$content_length&nbsp;等于客户端请求头中的content-length值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$content_type&nbsp;等于客户端请求头中的content-type值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cookie_COOKIENAME&nbsp;客户端请求header头中的cookie变量。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$document_root&nbsp;等于当前请求所属的root指令设置的文档根目录路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$document_uri&nbsp;这个变量与$uri类似。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$uri&nbsp;等于当前请求的URI(不带参数)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$http_HEADER&nbsp;&nbsp;客户端请求header头中的变量。将客户端请求头每行名称中的横线"-"换成下划线"_"，大写字母转成小写字母，前缀加上"$http_"，即为该名称对应的变量。例如客户端请求头中cookie行的内容为"Accept-Encoding:gzip,deflate"，那么我们在Nginx有一个变量$http_accept-encoding，值为gzip,deflate。类似的变量还有:$http_user_agent,$http_refrer....。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$remote_addr&nbsp;客户端IP地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$remote_port&nbsp;客户端端口。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$remote_user&nbsp;客户端用户名，Auth&nbsp;Basic模块中会使用到该变量。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$request_filename&nbsp;当前请求的文件路径，由root,alias及URI请求生成。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$request_body&nbsp;包含请求的body主体内容。在使用proxy_pass或fastcgi_pass指令的location中，意义比较大。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$request_body_file&nbsp;客户端请求主题的临时文件名。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$request_method&nbsp;HTTP请求的动作，常用的动作为GET或POST。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$request_uri&nbsp;带有完整参数的URI。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$server_name&nbsp;服务器主机名。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$server_port&nbsp;服务器端口。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$server_protocol&nbsp;请求采用的协议，通常该变量的值为HTTP/1.0或HTTP/1.1。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Access模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Access模块提供一个简单的基于host名称的访问控制。通过该模块，可以允许或禁止指定的IP地址或IP段访问某些虚拟主机或目录。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">deny&nbsp;192.168.1.1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">allow&nbsp;192.168.1.0/24;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">allow&nbsp;10.1.1.0/16;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">deny&nbsp;all;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Auth&nbsp;Basic模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该模块采用基于HTTP基本身份验证的用户名和密码登陆方式来保护你的虚拟主机或目录。例如：该指令弹出用户名和密码的登陆框。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/admin/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">auth_basic&nbsp;"username";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">auth_basic_user_file&nbsp;"password_file";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：如果设置auth_basic&nbsp;off，则关闭HTTP基本身份验证。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Autoindex模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该模块用于提供自动目录列表。该模块只有在找不到默认的index文件时才启用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">autoindex&nbsp;on&nbsp;;指令用于允许和禁止自动目录列表。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Browser模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该模块可以根据客户端"User-agent"请求头中的信息创建变量。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Fcgi模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该模块用于设置Nginx与Fastcgi进程交互，并通过传递参数来控制FastCGI进程工作。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_pass&nbsp;localhost:9000;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_index&nbsp;index.php;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;SCRIPT_FILENAME&nbsp;/home/www/php$fastcgi_script_name;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;QUERY_STRING&nbsp;$query_string;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;REQUEST_METHOD&nbsp;$request_method;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;CONTENT_TYPE&nbsp;$content_type;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;CONTENT_LENGTH&nbsp;$content_length;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">缓冲示例代码如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_path&nbsp;/path/cache&nbsp;levels=1:2&nbsp;keys_zone=NAME:10m&nbsp;inactive=1d&nbsp;clean_time=2h;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_pass&nbsp;</span><a href="http://127.0.0.1%3B/"><span style="font-size:14px;">http://127.0.0.1;</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache&nbsp;NAME;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_valid&nbsp;200&nbsp;302&nbsp;1h;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_valid&nbsp;301&nbsp;1d;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_valid&nbsp;any&nbsp;1m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_min_uses&nbsp;1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_use_stale&nbsp;error&nbsp;timeout&nbsp;invalid_header&nbsp;http_500;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Fastcgi的相关指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a.fastcgi_buffers</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_buffers&nbsp;number&nbsp;size;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：fastcgi_buffers&nbsp;8&nbsp;4K/8K;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令读取fastcGI进程返回信息的缓冲区数量和大小。默认情况下一个缓冲区的大小应该和操作系统的页大小一样。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以通过getconf&nbsp;PAGESIZE&nbsp;来查看页大小。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">b.fastcgi_buffer_size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_buffer_size&nbsp;size;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：fastcgi_buffer_size&nbsp;4K/8K;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令设置FastCGI服务器相应头部的缓冲区大小。通常情况缓冲区大小设置等于fastcgi_buffers设置的缓冲区大小。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">c.fastcgi_cache</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_cache&nbsp;zone;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用来设置缓存在共享内存中的名称。一款区域可能被几个地方引用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d.fastcgi_cache_methods</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_cache_methods&nbsp;[GET&nbsp;HEAD&nbsp;POST];</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：fastcgi_cache_methods&nbsp;GET&nbsp;HEAD;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置哪些HTTP请求可以被缓存。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">e.fastcgi_index</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_index&nbsp;file</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：none</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果请求的fastcgi&nbsp;uri以''/''斜线结束，该指令设置的文件会被附加到URI的后面并保存在变量$fastcgi_script_name中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">f.fastcgi_hide_header</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认情况，Nginx不会将FastCGI进程返回的status等信息。如果需要得到这些信息，就需要使用fastcgi_pass_header。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">g.fastcgi_param</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_param&nbsp;parameter&nbsp;value</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：none</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令指定的参数，将被传递给FastCGI-server。它可能使用字符串、变量及其他的组合来作为参数值。如果不在此制定参数，它就会继承外层设置；如果在此设置参数，将会清楚外层设置，仅启用本层设置。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：一个最简单的例子</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;SCRIPT_FILENAME&nbsp;/home/www/php$fastcgi_script_name;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;QUERY＿STRING&nbsp;$query_string;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果要处理POST，那么这3个附加参数是必要的：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;REQUEST_METHOD&nbsp;$request_method;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;CONTENT_TYPE&nbsp;$content_type;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_param&nbsp;CONTENT_LENGTH&nbsp;$content_length;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">h.fastcgi_pass</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用于指定FastCGI服务器监听的端口或Unix套接字。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">i.fastcgi_read_timeout</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是60。该指令用于设置upstream模块等待FastCGI进程发送数据的超时时间，默认是60秒。如果需要执行较长时间FastCGI程序，则须更改此值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">j.fastcgi_ignore_client_abort</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是off。如果客户端中断服务器的请求，则该指令可决定当前FastCGI请求是否中断。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Geo模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">geo模块主要用于做全局负载均衡，可以根据不同的客户端IP访问到不同的服务器。一些针对不同地区的客户，使用不同的服务器去处理需求。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Gzip模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Gzip模块主要用于对返回客户端的网页采用gzip进行压缩输出。目前基本浏览器都支持gzip和deflate两种压缩格式，如果浏览器支持gzip压缩，就会在HTTP请求头中发送一行"Accept-Encoding:gzip,deflate"，这时候Nginx服务器可以输出经过gzip压缩后的页面给浏览器，浏览器再解压。这种方式可以将网络线路上传输的大量数据消减60%以上，不仅节省了服务器带宽，同时加速了用户的下载速度和体验。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Gzip指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a.gzip</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是off。该指令用于开启或关闭gzip模块。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">b.gzip_buffers</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：gzip_buffers&nbsp;number&nbsp;size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：gzip_buffers&nbsp;4&nbsp;4k/8k</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。例如4&nbsp;4k代表以4k为单位，按照原始数据大小以4k为单位的4倍申请内存。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">c.gzip_comp_level</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是1，可以设置1~9的值。代表gzip压缩比，1压缩比最小处理速度最快，9压缩比最大但处理速度最慢(传输快但比较消耗CPU)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d.gzip_min_length</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是0。设置允许压缩的页面最小字节数，页面字节数从header头的Content-Length中获取。默认是0,即不管页面多大都压缩。建议设置成大于1k的字节数，小于1k可能会越压越大。设置为1k即：gzip_min_length&nbsp;1024;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">e.gzip_proxied</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：off。Nginx作为反向代理的时候启用，开启或关闭后端服务器返回的结果，匹配的前提是后端服务器必须要返回包含"Via"的header头。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">off&nbsp;关闭所有的代理结果数据的压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">any&nbsp;无条件启用压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">expired&nbsp;&nbsp;如果header头中包含"Expires"信息，则启用压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">no-cache&nbsp;&nbsp;如果header头中包含"Cache-Control:no-cache"信息，则启用压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">no-store&nbsp;&nbsp;如果header头中包含"Cache-Control:no-store"信息，则启用压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">private&nbsp;&nbsp;如果header头中包含"Cache-Control:private"信息，则启用压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">no_last_modified&nbsp;如果header头中不包含"Last-Modified"，则启用压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">no_etag&nbsp;&nbsp;如果header头中不包含"ETag"，则启用压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">auth&nbsp;&nbsp;如果header头中包含"Authorization"，则启用压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">f.gzip_types</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是：gzip_types&nbsp;text/html;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">匹配mime类型进行压缩，(无论是否指定)"text/html"类型总会被压缩。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：如果你希望压缩常规文件类型，可以代码写成如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">include&nbsp;conf/mime.types;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip&nbsp;on;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_min_length&nbsp;1000;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_buffers&nbsp;4&nbsp;8k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_http_version&nbsp;1.1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_types&nbsp;text/plain&nbsp;application/x-javascript&nbsp;text/css&nbsp;text/html&nbsp;application/xml;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Headers模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这一组指令主要用来设置Nginx返回网页内容给用户时，附加的Header头信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a.add_header</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：add_header&nbsp;name&nbsp;value</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当Http应答状态码为200,204,301,302或304的时候，增加指定的Header头。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">b.expire&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：expires&nbsp;[time&nbsp;|&nbsp;epoch&nbsp;|&nbsp;max&nbsp;|&nbsp;off]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用本指令可以控制HTTP应答中的"Expires"和"Cache-Control"Header头信息，起到控制浏览器端页面缓存的作用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Index模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index指令用来指定做默认文档的文件名，可以在文件名处使用变量。如果您指定了多个文件，那么从做到右按顺序查找。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index&nbsp;index.html&nbsp;index.$geo.html&nbsp;/index.html</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Referer模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Referer是Header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器借此可以获得一些信息用于处理，例如防止未经允许的网站盗链图片、文件等。因为Referer头信息可以伪装，所以Referer信息并非100%可靠。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/phtots/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">valid_referers&nbsp;none&nbsp;blocked&nbsp;</span><a href="http://www.mydomain.com/"><span style="font-size:14px;">www.mydomain.com</span></a><span style="font-size:14px;">&nbsp;mydomain.com;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if($invalid_referer)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">return&nbsp;403;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">valid_referers指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：valid_referers&nbsp;[none&nbsp;|&nbsp;blocked&nbsp;|&nbsp;server_names]&nbsp;...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：none</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：server,location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令会根据Referer&nbsp;Header头的内容分配一个值为0或1的给变量$invalid_referer。如果Referer&nbsp;Header头不符合valid_referers指令设置的有效Referer，变量$invalid_referer将被设置为1。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">参数意思：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">none：表示无Referer值的情况。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">blocked：表示Referer值被防火墙伪装。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_names：表示一个或多个主机名称，server_names中可以使用通配符"*"。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Limit&nbsp;Zone模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该模块用于针对条件，进行会话的并发连接数控制。例如限制每个IP的并发连接数等。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_zone&nbsp;one&nbsp;$binary_remote_addr&nbsp;10m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/download/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_conn&nbsp;one&nbsp;1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_zone指令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：limit_zone&nbsp;zone_name&nbsp;$variable&nbsp;memory_max_size，使用环境在http。该指令定义一个数据区，其中记录会话状态信息。$zone_name定义会话区名称；$variable定义判断会话的变量；memory_max_size定义内存记录区的总容量。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_conn指令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：limit_conn&nbsp;zone_name&nbsp;max_clients_per_ip，使用环境http,server,location。该指令用于指定一个会话最大的并发连接数，当超过指定的最大并发连接数时，服务器将返回"server&nbsp;unavailable&nbsp;(503)"。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Limit&nbsp;Req模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该模块允许你对Session会话、单个客户端IP地址，限制指定单位时间内的并发请求数。你可以在一定程度上减轻对应用服务器的DOS恶意攻击。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_req_zone&nbsp;$binary_remote_addr&nbsp;zone=one:10m&nbsp;rate=1r/s;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/search/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_req&nbsp;zone=one&nbsp;burst=5;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_req_zone指令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：limit_req_zone&nbsp;$session_variable&nbsp;zone=name:size&nbsp;rate=rate，使用环境http。该指令用于定义一块内存存储区，用来存储Session会话状态，Session的变量由指定的变量构成，通常可以设置为存储客户端IP的变量$binary_remote_addr。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：limit_req_zone&nbsp;$binary_remote_addr&nbsp;zone=one:10m&nbsp;rate=1r/s;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在本例中，为Session会话状态分配了一个名为one的10M内存存储区，限制了每秒只接受一个IP的一次请求(1&nbsp;Request/Sec)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">limit_req指令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：limit_req&nbsp;zone=zone&nbsp;burst=burst&nbsp;[nodelay]，使用环境http,server,location。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于指定使用的内存存储区名称，以及最大的突发请求数(burse)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Proxy模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该模块用于转发请求到其他服务器。Keep-alive是指在HTTP/1.1协议中，同一个连接中发出和接受多次HTTP请求，节省了创建TCP连接过程的时间开销。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTTP&nbsp;Proxy指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a.proxy_buffer_size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法proxy_buffer_size&nbsp;size，默认值proxy_buffer_size&nbsp;4k/8k。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置从被代理服务器获取的第一部分应答信息的缓冲区大小，这个缓存区间会保存用户的头信息以供Nginx进行规则处理。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">b.proxy_buffers</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值proxy_buffers&nbsp;8&nbsp;4k/8k。该指令用于设置从被代理服务器读取应答信息的缓存区数目和大小。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">c.proxy_busy_buffers_size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值proxy_busy_buffers_size&nbsp;[#proxy_buffers]*2。系统很忙的时候可以申请更大的proxy_buffers缓冲区。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache相关指令集</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache相关指令集包含Proxy_cache,proxy_cache_path,proxy_cache_methods,proxy_cache_min_uses,proxy_cache_valid,proxy_cache_use_stale等。在前面的第9章已经有说明，请翻阅。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d.proxy_connect_timeout</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置跟后端服务器连接的超时时间。该时间不是服务器返回页面的时间，而是发起握手等候响应的超时时间。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">e.proxy_ignore_client_abort</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值是off。如果客户端自身终止请求，防止中断代理请求。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">f.proxy_max_temp_file_size</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值1G。该指令用于设置当网页内容大于代理内存缓冲区的时候，临时文件大小的最大值。如果文件大于这个值，它将从upstream服务器同步地传递请求，而不是缓冲到磁盘。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">g.proxy_next_upstream</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：proxy_next_upstream&nbsp;error&nbsp;timeout。该指令用于设置当在哪种情况下，将请求转发到下一台服务器。在upstream负载均衡代理服务器池中，假设后端的一台服务器无法访问或返回错误代码时，可以使用该指令将请求转发到下台服务器。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">h.proxy_pass</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_pass&nbsp;url。该指令用于设置被代理服务器端口或套接字，以及URI。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">i.proxy_pass_header</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_pass_header&nbsp;the_name</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location</span><br />\r\n<span style="font-size:14px;"> &nbsp;这个指令允许为应答转发一些隐藏的头部字段。</span><br />\r\n<span style="font-size:14px;"> &nbsp;如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_pass_header&nbsp;X-Accel-Redirect;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">j.proxy_pass_request_body</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_pass_request_body&nbsp;[&nbsp;on&nbsp;|&nbsp;off&nbsp;]&nbsp;;</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：proxy_pass_request_body&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location</span><br />\r\n<span style="font-size:14px;"> &nbsp;可用版本：0.1.29</span><br />\r\n<span style="font-size:14px;"> &nbsp;不管什么情况都将请求实体通过代理。&nbsp;通常一直处于on状态。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">k.proxy_pass_request_headers</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_pass_request_headers&nbsp;[&nbsp;on&nbsp;|&nbsp;off&nbsp;]&nbsp;;</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：proxy_pass_request_headers&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location</span><br />\r\n<span style="font-size:14px;"> &nbsp;可用版本：0.1.29</span><br />\r\n<span style="font-size:14px;"> &nbsp;不管什么情况都将请求头部通过代理。</span><br />\r\n<span style="font-size:14px;"> &nbsp;通常一直处于on状态。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">l.proxy_redirect</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_redirect&nbsp;[&nbsp;default|off|redirect&nbsp;replacement&nbsp;]</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：proxy_redirect&nbsp;default</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location</span><br />\r\n<span style="font-size:14px;"> &nbsp;如果需要修改从被代理服务器传来的应答头中的”Location”和”Refresh”字段，可以用这个指令设置。</span><br />\r\n<span style="font-size:14px;"> &nbsp;假设被代理服务器返回Location字段为：&nbsp;</span><a href="http://localhost:8000/two/some/uri/"><span style="font-size:14px;">http://localhost:8000/two/some/uri/</span></a><br />\r\n<span style="font-size:14px;"> &nbsp;这个指令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;http://localhost:8000/two/&nbsp;http://frontend/one/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将Location字段重写为</span><a href="http://frontend/one/some/uri/"><span style="font-size:14px;">http://frontend/one/some/uri/</span></a><span style="font-size:14px;">。</span><br />\r\n<span style="font-size:14px;"> &nbsp;在代替的字段中可以不写服务器名：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;http://localhost:8000/two/&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这样就使用服务器的基本名称和端口，即使它来自非80端口。</span><br />\r\n<span style="font-size:14px;"> &nbsp;如果使用“default”参数，将根据location和proxy_pass参数的设置来决定。</span><br />\r\n<span style="font-size:14px;"> &nbsp;例如下列两个配置等效：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/one/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_pass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://upstream:port/two/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;default;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/one/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_pass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://upstream:port/two/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;http://upstream:port/two/&nbsp;&nbsp;&nbsp;/one/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在指令中可以使用一些变量：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;http://localhost:8000/&nbsp;&nbsp;&nbsp;&nbsp;http://$host:$server_port/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个指令有时可以重复：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;default;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;http://localhost:8000/&nbsp;&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;http://www.example.com/&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">参数off将在这个字段中禁止所有的proxy_redirect指令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;off;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;default;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;http://localhost:8000/&nbsp;&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;http://www.example.com/&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">利用这个指令可以为被代理服务器发出的相对重定向增加主机名：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">m.proxy_read_timeout</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_read_timeout&nbsp;time</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：proxy_read_timeout&nbsp;60s</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location</span><br />\r\n<span style="font-size:14px;"> &nbsp;决定读取后端服务器应答的超时时间，单位为秒，它决定nginx将等待多久时间来取得一个请求的应答。超时时间是指完成了两次握手后并且状态为established的超时时间。</span><br />\r\n<span style="font-size:14px;"> &nbsp;相对于proxy_connect_timeout，这个时间可以扑捉到一台将你的连接放入连接池延迟处理并且没有数据传送的服务器，注意不要将此值设置&nbsp;太低，某些情况下代理服务器将花很长的时间来获得页面应答（例如如当接收一个需要很多计算的报表时），当然你可以在不同的location里面设置不同的&nbsp;值。</span><br />\r\n<span style="font-size:14px;"> &nbsp;可以通过指定时间单位以免引起混乱，支持的时间单位有”s”(秒),&nbsp;“ms”(毫秒),&nbsp;“y”(年),&nbsp;“M”(月),&nbsp;“w”(周),&nbsp;“d”(日),&nbsp;“h”(小时),和&nbsp;“m”(分钟)。</span><br />\r\n<span style="font-size:14px;"> &nbsp;这个值不能大于597小时。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">n.proxy_redirect</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_redirect&nbsp;[&nbsp;default|off|redirect&nbsp;replacement&nbsp;];</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：proxy_redirect&nbsp;default;</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location</span><br />\r\n<span style="font-size:14px;"> &nbsp;这个指令为被代理服务器应答中必须改变的应答头：”Location”和”Refresh”设置值。</span><br />\r\n<span style="font-size:14px;"> &nbsp;我们假设被代理的服务器返回的应答头字段为：Location:&nbsp;</span><a href="http://localhost:8000/two/some/uri/"><span style="font-size:14px;">http://localhost:8000/two/some/uri/</span></a><span style="font-size:14px;">。</span><br />\r\n<span style="font-size:14px;"> &nbsp;指令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;http://localhost:8000/two/&nbsp;http://frontend/one/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">会将其重写为：Location:&nbsp;</span><a href="http://frontend/one/some/uri/"><span style="font-size:14px;">http://frontend/one/some/uri/</span></a><span style="font-size:14px;">。</span><br />\r\n<span style="font-size:14px;"> &nbsp;在重写字段里面可以不使用服务器名：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;http://localhost:8000/two/&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这样，默认的服务器名和端口将被设置，端口默认80。</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认的重写可以使用参数default，将使用location和proxy_pass的值。</span><br />\r\n<span style="font-size:14px;"> &nbsp;下面两个配置是等价的：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/one/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_pass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://upstream:port/two/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;default;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/one/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_pass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://upstream:port/two/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;proxy_redirect&nbsp;&nbsp;&nbsp;http://upstream:port/two/&nbsp;&nbsp;&nbsp;/one/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">同样，在重写字段中可以使用变量：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;http://localhost:8000/&nbsp;&nbsp;&nbsp;&nbsp;http://$host:$server_port/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个指令可以重复使用：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;default;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;http://localhost:8000/&nbsp;&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;http://www.example.com/&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">参数off在本级中禁用所有的proxy_redirect指令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;off;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;default;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;http://localhost:8000/&nbsp;&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;http://www.example.com/&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个指令可以很容易的将被代理服务器的服务器名重写为代理服务器的服务器名：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_redirect&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;/;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">proxy_redirect_errors</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不推荐使用，请使用&nbsp;proxy_intercept_errors。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">o.proxy_send_lowat</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_send_lowat&nbsp;[&nbsp;on&nbsp;|&nbsp;off&nbsp;]</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：proxy_send_lowat&nbsp;off;</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location,&nbsp;if</span><br />\r\n<span style="font-size:14px;"> &nbsp;设置SO_SNDLOWAT，这个指令仅用于FreeBSD。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">p.proxy_send_timeout</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_send_timeout&nbsp;seconds</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：proxy_send_timeout&nbsp;60s</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location</span><br />\r\n<span style="font-size:14px;"> &nbsp;设置代理服务器转发请求的超时时间，单位为秒，同样指完成两次握手后的时间，如果超过这个时间代理服务器没有数据转发到被代理服务器，nginx将关闭连接。</span><br />\r\n<span style="font-size:14px;"> &nbsp;可以通过指定时间单位以免引起混乱，支持的时间单位有”s”(秒),&nbsp;“ms”(毫秒),&nbsp;“y”(年),&nbsp;“M”(月),&nbsp;“w”(周),&nbsp;“d”(日),&nbsp;“h”(小时),和&nbsp;“m”(分钟)。</span><br />\r\n<span style="font-size:14px;"> &nbsp;这个值不能大于597小时。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">q.proxy_set_body</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_set_body&nbsp;[&nbsp;on&nbsp;|&nbsp;off&nbsp;]</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：proxy_set_body&nbsp;off;</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location,&nbsp;if</span><br />\r\n<span style="font-size:14px;"> &nbsp;可用版本：0.3.10。</span><br />\r\n<span style="font-size:14px;"> &nbsp;设置通过后端的body的值，这个值可以包含变量。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">r.proxy_set_header</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_set_header&nbsp;header&nbsp;value</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：&nbsp;Host&nbsp;and&nbsp;Connection</span><br />\r\n<span style="font-size:14px;"> &nbsp;使用字段：http,&nbsp;server,&nbsp;location</span><br />\r\n<span style="font-size:14px;"> &nbsp;这个指令允许将发送到被代理服务器的请求头重新定义或者增加一些字段。</span><br />\r\n<span style="font-size:14px;"> &nbsp;这个值可以是一个文本，变量或者它们的组合。</span><br />\r\n<span style="font-size:14px;"> &nbsp;proxy_set_header在指定的字段中没有定义时会从它的上级字段继承。</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认只有两个字段可以重新定义：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;$proxy_host;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Connection&nbsp;Close;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">未修改的请求头“Host”可以用如下方式传送：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;$http_host;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是如果这个字段在客户端的请求头中不存在，那么不发送数据到被代理服务器。</span><br />\r\n<span style="font-size:14px;"> &nbsp;这种情况下最好使用$Host变量，它的值等于请求头中的”Host”字段或服务器名：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;$host;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">此外，可以将被代理的端口与服务器名称一起传递：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;$host:$proxy_port;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果设置为空字符串，则不会传递头部到后端，例如下列设置将禁止后端使用gzip压缩：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;&nbsp;Accept-Encoding&nbsp;&nbsp;"";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">s.proxy_ssl_session_reuse</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_ssl_session_reuse&nbsp;[&nbsp;on&nbsp;|&nbsp;off&nbsp;];</span><br />\r\n<span style="font-size:14px;"> &nbsp;默认值：&nbsp;proxy_ssl_session_', 16, 'nginx,linux', 1, 0, 1, '2013-03-10 12:41:49');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(209, '12 Nginx的核心模块', '<p>\r\n	<span style="font-size:14px;">主模块指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.daemon</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：daemon&nbsp;on&nbsp;|&nbsp;off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：on</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在生产环境中，请不要使用daemon和master_process指令。这些选项仅用于开发调试。当然你可以在生产环境中设置daemon&nbsp;off&nbsp;，然后使用进程管理工具启动Nginx，但是平滑重启，升级等功能将无法使用。master_process&nbsp;off绝对不应该用于生产环境。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.env</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：env&nbsp;VAR&nbsp;|&nbsp;VAR=VALUE</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：TZ</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：main</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">此项指令用来定义变量的集合，以下场合须更改环境变量或添加新的环境变量。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A.在零停机情况下平滑升级Nginx</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B.启用Nginx内在的PERL模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C.被Nginx进程所使用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.debug_points</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：debug_points&nbsp;[stop&nbsp;|&nbsp;abort]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：none</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用于调试，在调试器内设置断点</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.error_log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：error_log&nbsp;file&nbsp;[debug|info|notice|warn|error|crit]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：${prefix}/logs/error.log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">File参数是用来指定记录Nginx及Fastcgi错误日志的文件路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以在不同的虚拟主机里面存储不同的日志文件，这是一个很有特色的功能。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">error_log&nbsp;logs/http_error.log</span><br />\r\n<span style="font-size:14px;"> server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;one;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;logs/one.access;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">error_log&nbsp;logs/one.error.log;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;two;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;logs/two.access;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">error_log&nbsp;logs/two.error.log;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：error_log&nbsp;off无法禁止日志，这将会创建一个名为off的文件。如果要禁止，则需要用error_log&nbsp;/dev/null&nbsp;crit;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.log_not_found</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：log_not_found&nbsp;on&nbsp;|&nbsp;off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：on</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：debug_points&nbsp;stop;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">启用或禁用404错误日志，这个指令可以用来禁止Nginx记录找不到robots.txt和favicon.ico这类文件的错误信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;=&nbsp;&nbsp;/robots.txt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">log_not_found&nbsp;off;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.include</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：include&nbsp;*&nbsp;|&nbsp;file</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：无</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用此指令，可以包含任何你想要的配置文件。从0.4.4开始，include指令开始支持文件名匹配，例如：include&nbsp;vhosts/*.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：从0.6.7开始，include文件的路径实现归于Nginx配置文件nginx.conf的所在目录。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.pid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：pid&nbsp;file</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">示例：pid&nbsp;/var/log/nginx.pid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">pid文件内记录着当前Nginx主进程号ID，可以通过kill命令发送信号给该ID号。例如平滑重启：shell&gt;kill&nbsp;-HUP&nbsp;`cat&nbsp;/var/log/nginx.pid`</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8.work_cpu_affinity</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">只能在Linux环境使用。&nbsp;使用此指令，我们可以为每个Nginx&nbsp;Worker进程绑定指定的一颗CPU(双核CPU算作两颗)，Nginx采用sched_setaffinity()函数绑定CPU。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">示例如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">worker_processes&nbsp;4;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">work_cpu_affinity&nbsp;0001&nbsp;0010&nbsp;0100&nbsp;1000;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分别给每个worker进程绑定一个CPU：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">worker_processes&nbsp;2;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">work_cpu_affinity&nbsp;0101&nbsp;1010;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在上例中，第一个Nginx&nbsp;Worker进程绑定了CPU0/CPU2，第二个Nginx&nbsp;Worker进程绑定了CPU1/CPU3。这种配置适用于超线程技术。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9.worker_priority</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：worker_priority&nbsp;[-]number</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：on</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该选项用于给worker进程分配优先值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在主模块指令中，可以从以下变量获取相关信息：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$nginx_version&nbsp;当前运行的Nginx版本号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$pid&nbsp;进程ID号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$realpath_root&nbsp;ROOT目录绝对路径</span>\r\n</p>', 16, 'nginx,linux', 1, 0, 1, '2013-03-10 12:42:29'),
(210, '9 Nginx的Web缓存服务', '<p>\r\n	<span style="font-size:14px;">Nginx的缓存服务</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx版本从0.7.48开始,支持了类似Squid的缓存功能。这个缓存是把URL及相关组合当做Key,用Md5算法对Key进行哈希，得到硬盘上对应的哈希目录路径，从而将缓存内容保存在该目录内。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx&nbsp;Web&nbsp;缓存服务只能为指定URL或状态码设置过期时间，不支持类似Squid的PURGE指令手动清除缓存；但是我们可以通过Nginx的模块ngx_cache_purge清除指定URL的缓存。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache相关指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.proxy_cache&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_cache&nbsp;zone_name;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,location,server;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令主要是设置哪个缓存区将被使用，zone_name的值是proxy_cache_path指令创建的缓存区名称。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.proxy_cache_path</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_cache_path&nbsp;path&nbsp;[levels=num]&nbsp;keys_zone=zone_name:zone_size&nbsp;[inactive=time]&nbsp;[max_size=size];</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置缓存文件的存放路径，示例如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_path&nbsp;/data0/proxy_cache_dir&nbsp;levels=1:2&nbsp;&nbsp;keys_zone=cache_one:500M&nbsp;&nbsp;inactive=1d&nbsp;&nbsp;max_size=30g;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：该指令只能在Http内配置，levels指定了该缓存空间有两层hash目录，第一层目录为1个字母，第二层目录为2个字母，保存文件类似于/data0/proxy_cache_dir/c/22/filename;&nbsp;keys_zone为这个缓存区起名为zone_name,500m指代缓存空间为500MB;&nbsp;inactive=1d&nbsp;代表如果缓存文件一天内没有被访问，则删除;&nbsp;max_size=30g代表硬盘缓存最大为30G;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.proxy_cache_methods</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_cache_methods&nbsp;[GET&nbsp;HEAD&nbsp;POST]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：proxy_cache_methods&nbsp;GET&nbsp;HEAD;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,location,server;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置缓存哪些Http方法，默认缓存HTTP&nbsp;GET/HEAD方法，不缓存HTTP&nbsp;POST方法。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.proxy_cache_min_uses</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_cache_min_uses&nbsp;the_number</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：proxy_cache_min_uses&nbsp;1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,server,location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置缓存的最小使用次数，默认值是1。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.proxy_cache_valid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：proxy_cache_valid&nbsp;reply_code&nbsp;[reply_code&nbsp;...&nbsp;]&nbsp;time</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,server,location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于对不同返回状态码的URL设置不同的缓存时间，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_valid&nbsp;200&nbsp;302&nbsp;10m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_valid&nbsp;404&nbsp;&nbsp;1m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置202&nbsp;302状态URL缓存10分钟，404状态的URL缓存1分钟。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：如果不指定状态码，直接指定缓存时间，则只有200,301,302状态码会进行缓存。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_valid&nbsp;200&nbsp;301&nbsp;302&nbsp;10m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_valid&nbsp;any&nbsp;&nbsp;1m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对200,301,302状态码缓存10分钟，其他的状态码全部缓存1分钟。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.proxy_cache_key</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用法：proxy_cache_key&nbsp;line;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,server,location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用来设置Web缓存的Key值，Nginx根据Key值MD5缓存。一般根据$host(域名),$request_uri(请求的路径)等变量组合成proxy_cache_key。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_key&nbsp;"$host:$server_port$uri$is_args$args";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Proxy_cache完整示例</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.首先将ngx_cache_purge模块编译安装到Nginx中，用来清除指定URL缓存。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;wget&nbsp;</span><a href="http://labs.frickle.com/files/ngx_cache_purge-10.tar.gz"><span style="font-size:14px;">http://labs.frickle.com/files/ngx_cache_purge-1.0.tar.gz</span></a><span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;tar&nbsp;-xvzf&nbsp;ngx_cache_purge-1.0.tar.gz</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;cd&nbsp;nginx-1.0</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;./configure&nbsp;--user=www&nbsp;--group=www&nbsp;--add-module=../ngx_cache_purge-1.0&nbsp;&nbsp;--prefix=/usr/local/nginx&nbsp;&nbsp;--with-http_stub_status_module&nbsp;--with-http_ssl_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;make&nbsp;&amp;&amp;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;2.在同一个分区下创建两个缓存目录，分别供proxy_temp_path，proxy_cache_path指令设置缓存路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;mkdir&nbsp;-p&nbsp;/data0/proxy_temp_path</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;mkdir&nbsp;-p&nbsp;/data0/proxy_cache_path</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：两个指定的缓存路径必须为同一磁盘分区，不能跨分区</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.修改配置文件(nginx.conf):对扩展名为gif,jpg,png,js,css的文件开启web缓存，其他文件不缓存，代码如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">......以上省略许多配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_temp_path&nbsp;&nbsp;&nbsp;/data0/proxy_temp_path&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_path&nbsp;/data0/proxy_cache_path&nbsp;levels=1:2&nbsp;keys_zone=cache_one:200m&nbsp;&nbsp;inactive=1d&nbsp;&nbsp;max_size=30g&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">upstream&nbsp;my_server_pool</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.2:80&nbsp;weight=1&nbsp;max_fails=2&nbsp;fail_timeout=30s;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.3:80&nbsp;weight=1&nbsp;max_fails=2&nbsp;fail_timeout=30s;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.4:80&nbsp;weight=1&nbsp;max_fails=2&nbsp;fail_timeout=30s;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;80;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;</span><a href="http://www.xiaozhe.com/"><span style="font-size:14px;">www.xiaozhe.com</span></a><span style="font-size:14px;">;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#这里我们做了负载均衡</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;$host;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;X-Forwarded-For&nbsp;$remote_addr;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_pass&nbsp;http://my_server_pool;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;&nbsp;.*\\.(gif|jpg|png|js|css)$</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#使用Web缓存区cache_one</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache&nbsp;cache_one;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#对不同的状态码设置不同的缓存时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_valid&nbsp;200&nbsp;304&nbsp;12h;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_valid&nbsp;301&nbsp;302&nbsp;1m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_valid&nbsp;any&nbsp;1m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#设置web缓存的Key值，这里根据域名，URI，参数组合成Key</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_key&nbsp;$host$uri$is_args$args;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#反向代理，访问后端服务器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;$host;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;X-Forwarded-For&nbsp;$remote_addr;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_pass&nbsp;http://my_server_pool;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#用于清除缓存，假设一个URL为http://www.xiaozhe.com/test.gif，我们可以通过访问http://www.xiaozhe.com/purge/test.gif清除缓存。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;&nbsp;/purge(/.*)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#设置允许指定的IP或IP段才可以清除缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">allow&nbsp;&nbsp;127.0.0.1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">allow&nbsp;192.168.0.0/16;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">deny&nbsp;all;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_cache_purge&nbsp;cache_one&nbsp;$host$1$is_args$args;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;off;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Fastcgi_cache相关指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.fastcgi_cache</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_cache&nbsp;zone_name;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,server,location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置哪个缓存区将被使用，zone_name的值为fastcgi_cache_path指令创建的缓存名称。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.fastcgi_cache_path</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_cache_path&nbsp;path&nbsp;[levels=num]&nbsp;keys_zone=zone_name:zone_size&nbsp;&nbsp;[inactive=time]&nbsp;&nbsp;[max_size=size]&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令只能在http标签内，作用语法什么的都和上面的proxy_cache_path&nbsp;一样。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.fastcgi_cache_methods</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_cache_methods&nbsp;[GET&nbsp;HEAD&nbsp;POST&nbsp;];</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：fastcgi_cache_methods&nbsp;GET&nbsp;HEAD&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,server,location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置缓存哪些HTTP方法，默认缓存HTTP&nbsp;GET/HEAD方法。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.fastcgi_cache_min_uses</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：fastcgi_cache_min_uses&nbsp;the_number;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：fastcgi_cache_min_uses&nbsp;1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,server,location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于设置缓存最小使用次数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.fastcgi_cache_valid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法同：proxy_cache_valid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.fastcgi_cache_key</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法同：proxy_cache_key</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Fastcgi_cache完整示例</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;1.在同一个分区下创建两个缓存目录，分别供fastcgi_temp_path，fastcgi_cache_path指令设置缓存路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;mkdir&nbsp;-p&nbsp;/data0/fastcgi_temp_path</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;mkdir&nbsp;-p&nbsp;/data0/fastcgi_cache_path</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：两个指定的缓存路径必须为同一磁盘分区，不能跨分区</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.修改配置文件(nginx.conf)开启web缓存,代码如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">......以上省略许多配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_temp_path&nbsp;&nbsp;&nbsp;/data0/fastcgi_temp_path&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_path&nbsp;/data0/fastcgi_cache_path&nbsp;levels=1:2&nbsp;keys_zone=cache_one:200m&nbsp;&nbsp;inactive=1d&nbsp;&nbsp;max_size=30g&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">upstream&nbsp;my_server_pool</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.2:80&nbsp;weight=1&nbsp;max_fails=2&nbsp;fail_timeout=30s;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.3:80&nbsp;weight=1&nbsp;max_fails=2&nbsp;fail_timeout=30s;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.4:80&nbsp;weight=1&nbsp;max_fails=2&nbsp;fail_timeout=30s;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;80;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;</span><a href="http://www.xiaozhe.com/"><span style="font-size:14px;">www.xiaozhe.com</span></a><span style="font-size:14px;">;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">root&nbsp;/data0/htdocs;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;.*\\.(php|php5)$</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#使用web缓存区cache_one</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache&nbsp;cache_one;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#对不同的HTTP状态码设置不同的缓存时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_valid&nbsp;200&nbsp;304&nbsp;12h;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_valid&nbsp;301&nbsp;302&nbsp;1m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_valid&nbsp;any&nbsp;1m;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#设置Web缓存的key值</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_cache_key&nbsp;127.0.0.1:9000$request_uri;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#fastcgi服务器配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_pass&nbsp;127.0.0.1:9000;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_index&nbsp;index.php;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">include&nbsp;fcgi.conf;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;off;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">稍微留意一下Sina的Ncache模块，主要是兼容性不怎么好，很多系统不能使用</span>\r\n</p>', 16, 'nginx,linux', 1, 0, 1, '2013-03-10 12:42:54'),
(211, '7 Nginx的Rewrite规则与实例', '<p>\r\n	<span style="font-size:14px;">Nginx&nbsp;Rewrite&nbsp;规则相关指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">相关指令有if,rewrite,set,return,break等，其中最关键的就是rewrite.一个简单的Nginx&nbsp;Rewrite规则语法如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rewrite&nbsp;^/b/(.*)\\.html&nbsp;/play.php?video=$1&nbsp;break;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.break指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：none&nbsp;;使用环境：server,location,if&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令的作用是完成当前的规则集，不再处理rewrite指令。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.if指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：none&nbsp;;使用环境：server,location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于检查一个条件是否符合，如果条件符合，则执行大括号内的语句。If指令不支持嵌套，不支持多个条件&amp;&amp;和||处理。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A.变量名，错误的值包括：空字符串""或者任何以0开始的字符串</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B.变量比较可以使用"="(表示等于)和"!="(表示不等于)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C.正则表达式模式匹配可以使用"~*"和"~"符号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D."~"符号表示区分大小写字母的匹配</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">E."~*"符号表示不区分大小写字母的匹配</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F."!~"和"!~*"符号的作用刚好和"~"、"~*"相反，表示不匹配</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">G."-f"和"!-f"用来判断文件是否存在</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">H."-d"和"!-d"用来判断目录是否存在</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">I."-e"和"!-e"用来判断文件或目录是否存在</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">J."-x"和"!-x"用来判断文件是否为可执行</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">K.部分正则表达式可以在()内，用$1~$9来访问</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.return指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：return&nbsp;code&nbsp;;使用环境：server,location,if&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于结束规则的执行并返回状态码给客户端。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">示例：如果访问的URL以".sh"或".bash"结尾，则返回403状态码</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;.*\\.(sh|bash)?$</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">return&nbsp;403;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.rewrite&nbsp;指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：rewrite&nbsp;regex&nbsp;replacement&nbsp;flag</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值：none&nbsp;;&nbsp;使用环境：server,location,if</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令根据表达式来重定向URI，或者修改字符串。指令根据配置文件中的顺序来执行。注意重写表达式只对相对路径有效。如果你想配对主机名，你应该使用if语句，示例如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if(&nbsp;$host&nbsp;~*&nbsp;www\\.(.*)&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">set&nbsp;$host_without_www&nbsp;$1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rewrite&nbsp;&nbsp;^(.*)$&nbsp;&nbsp;</span><a href="http://%24host_without_www%241/"><span style="font-size:14px;">http://$host_without_www$1</span></a><span style="font-size:14px;">&nbsp;permanent;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rewrite指令的最后一项参数为flag标记，支持flag标记有：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.last&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;相当于apache里面的[L]标记，表示rewrite。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.break&nbsp;本条规则匹配完成后，终止匹配，不再匹配后面的规则。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.redirect&nbsp;&nbsp;返回302临时重定向，浏览器地址会显示跳转后的URL地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.permanent&nbsp;&nbsp;返回301永久重定向，&nbsp;浏览器地址会显示跳转后的URL地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用last和break实现URI重写，浏览器地址栏不变。而且两者有细微差别，使用alias指令必须用last标记;使用proxy_pass指令时，需要使用break标记。Last标记在本条rewrite规则执行完毕后，会对其所在server{......}标签重新发起请求，而break标记则在本条规则匹配完成后，终止匹配。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般在跟location中(location&nbsp;/{...})或直接在server标签中编写rewrite规则，推荐使用last标记；在非根location中(location&nbsp;/cms/{...})，则使用break。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果URI中含有参数(/app/test.php?id=5)，默认情况下参数会被自动附加到替换串上，你可以通过在替换串的末尾加上?标记来解决这一问题。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：rewrite&nbsp;^/test(.*)$&nbsp;</span><a href="http://www.xiaozhe.com/hotm"><span style="font-size:14px;">http://www.xiaozhe.com/hom</span></a><span style="font-size:14px;">e&nbsp;permanent;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">访问http://www.xiaozhe.com/test?id=5&nbsp;会跳转到&nbsp;</span><a href="http://www.xiaozhe.com/home?id=5"><span style="font-size:14px;">http://www.xiaozhe.com/home?id=5</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：如果我们将类似URL&nbsp;/photo/123456&nbsp;重定向到&nbsp;/path/to/photo/12/1234/123456.png</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Rewrite&nbsp;"/photo/([0-9]{2})([0-9]{2})([0-9]{2})"&nbsp;/path/to/photo/$1/$1$2/$1$2$3.png&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：如果正则表达式里面有花括号"{"或"}"&nbsp;，应该使用双引号或单引号。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.Set指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：set&nbsp;variable&nbsp;value&nbsp;;&nbsp;默认值:none&nbsp;;&nbsp;使用环境：server,location,if;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于定义一个变量，并给变量赋值。变量的值可以为文本、变量以及文本变量的联合。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">示例：set&nbsp;$varname&nbsp;"hello&nbsp;world";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.Uninitialized_variable_warn指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：uninitialized_variable_warn&nbsp;on|off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用环境：http,server,location,if</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该指令用于开启和关闭未初始化变量的警告信息，默认值为开启。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.Nginx&nbsp;Rewrite可以用到的全局变量</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$args&nbsp;,$content_length&nbsp;,$content_type&nbsp;,$document_root&nbsp;,$document_uri&nbsp;,$host&nbsp;,$http_user_agent&nbsp;,$http_cookie&nbsp;,$limit_rate&nbsp;,$request_body_file&nbsp;,$request_method&nbsp;,$remote_addr&nbsp;,$remote_port&nbsp;,$remote_user&nbsp;,$request_filename&nbsp;,$request_uri&nbsp;,$query_string&nbsp;,$scheme&nbsp;,$server_protocol&nbsp;,$server_addr&nbsp;,$server_name&nbsp;,$server_port&nbsp;,$uri&nbsp;.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx的Rewrite规则编写实例</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.当访问的文件和目录不存在时，重定向到某个php文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if(&nbsp;!-e&nbsp;$request_filename&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rewrite&nbsp;^/(.*)$&nbsp;index.php&nbsp;last;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.目录对换&nbsp;/123456/xxxx&nbsp;&nbsp;====&gt;&nbsp;&nbsp;&nbsp;/xxxx?id=123456</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rewrite&nbsp;^/(\\d+)/(.+)/&nbsp;&nbsp;/$2?id=$1&nbsp;last;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.如果客户端使用的是IE浏览器，则重定向到/ie目录下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if(&nbsp;$http_user_agent&nbsp;&nbsp;~&nbsp;MSIE)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rewrite&nbsp;^(.*)$&nbsp;/ie/$1&nbsp;break;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.禁止访问多个目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;^/(cron|templates)/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">deny&nbsp;all;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">break;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.禁止访问以/data开头的文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;^/data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">deny&nbsp;all;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.禁止访问以.sh,.flv,.mp3为文件后缀名的文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;.*\\.(sh|flv|mp3)$</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">return&nbsp;403;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.设置某些类型文件的浏览器缓存时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;.*\\.(gif|jpg|jpeg|png|bmp|swf)$</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">expires&nbsp;30d;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;.*\\.(js|css)$</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">expires&nbsp;1h;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx和Apache的Rewrite规则实例对比</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.一般简单的Nginx和Apache规则的区别不大，基本能够完全兼容，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Apache:&nbsp;RewriteRule&nbsp;&nbsp;^/abc/$&nbsp;&nbsp;&nbsp;/web/abc.php&nbsp;[L]&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx:&nbsp;&nbsp;rewrite&nbsp;&nbsp;^/abc/$&nbsp;&nbsp;/web/abc.php&nbsp;last&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以看出来只要把Apache的RewriteRule改为Nginx的rewrite，Apache的[L]改为last&nbsp;即可。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果将Apache的规则改为Nginx规则后，用命令Nginx&nbsp;-t&nbsp;检查发现错误，则我们可以尝试给条件加上引号，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rewrite&nbsp;“^/([0-9]{5}).html$”&nbsp;&nbsp;&nbsp;/x.php?id=$1&nbsp;last;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.Apache和Nginx的Rewrite规则在URL跳转时有细微区别：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Apache:&nbsp;&nbsp;RewriteRule&nbsp;^/html/([a-zA-Z]+)/.*$&nbsp;&nbsp;/$1/&nbsp;&nbsp;[R=301,L]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx:&nbsp;&nbsp;&nbsp;rewrite&nbsp;^/html/([a-zA-Z]+)/.*$&nbsp;&nbsp;</span><a href="/"><span style="font-size:14px;">http://$host/$1/</span></a><span style="font-size:14px;">&nbsp;premanent&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以看到在Nginx的跳转中，我们需要加上http://$host，这是在Nginx中强烈要求的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.下面是一些Apache和Nginx规则的对应关系</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a.Apache的RewriteCond对应Nginx的if</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">b.Apache的RewriteRule对应Nginx的rewrite</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">c.Apache的[R]对应Nginx的redirect</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d.Apache的[P]对应Nginx的last</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">e.Apache的[R,L]对应Nginx的redirect</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">f.Apache的[P,L]对应Nginx的last</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">g.Apache的[PT,L]对应Nginx的last</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：允许指定的域名访问本站，其他的域名一律转向www.xiaozhe.com</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Apache:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RewriteCond&nbsp;%{HTTP_HOST}&nbsp;!^(.*?)\\.aaa\\.com$&nbsp;[NC]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RewriteCond&nbsp;%{HTTP_HOST}&nbsp;!^localhost$&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RewriteCond&nbsp;%{HTTP_HOST}&nbsp;!^192\\.168\\.0\\.(.*?)$</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RewriteRule&nbsp;^/(.*)$&nbsp;</span><a href="http://www.xiaozhe.com/"><span style="font-size:14px;">http://www.xiaozhe.com</span></a><span style="font-size:14px;">&nbsp;[R,L]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if(&nbsp;$host&nbsp;~*&nbsp;^(.*)\\.aaa\\.com$&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">set&nbsp;$allowHost&nbsp;‘1’;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if(&nbsp;$host&nbsp;~*&nbsp;^localhost&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">set&nbsp;$allowHost&nbsp;‘1’;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if(&nbsp;$host&nbsp;~*&nbsp;^192\\.168\\.1\\.(.*?)$&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">set&nbsp;$allowHost&nbsp;‘1’;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if(&nbsp;$allowHost&nbsp;!~&nbsp;‘1’&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rewrite&nbsp;^/(.*)$&nbsp;</span><a href="http://www.xiaozhe.com/"><span style="font-size:14px;">http://www.xiaozhe.com</span></a><span style="font-size:14px;">&nbsp;redirect&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>', 16, 'nginx', 1, 0, 1, '2013-03-10 12:43:20');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(212, '6 Nginx负载均衡和反向代理配置', '<p>\r\n	<span style="font-size:14px;">常见的Web负载均衡方法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.用户手动选择方式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">自己手动选择站点</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.DNS轮询方式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">大多数域名商都支持对同一个主机域名添加多条A记录，DNS解析域名就会按照A记录顺序随即分配到不同的IP上。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">添加完成后，我们可以在Linux上使用dig命令查看域名的解析情况。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;dig&nbsp;www.xiaozhe.com</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">缺点:1.可靠性低&nbsp;2.负载分配不均衡&nbsp;。适合图片服务器集群、纯静态网页服务器集群。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.四/七层负载均衡设备</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">第四层负载均衡是基于OSI的第四层协议，将一根Internet上合法注册的IP地址映射到多个内部服务器的IP地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">第七层负载均衡控制应用层服务的内容，提供一种对访问流量的高层控制方式，适合对HTTP服务器群的应用。第七层负载均衡的技术通过检查流经的HTTP报头，根据报头内的信息来执行负载均衡任务。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.多线多地区智能DNS解析和混合负载均衡方式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">比如北京电信用户访问sina，就会访问北京电信的服务器。湖北用户访问sina，就会访问湖北武汉的服务器。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx负载均衡与反向代理的配置实例</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.反向代理示例</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">完整示例：在书中的Page：第六章&nbsp;11&nbsp;，&nbsp;现在列出大致的代码</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">client_max_body_size&nbsp;300m;&nbsp;//允许请求文件最大字节数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">clent_body_buffer_size&nbsp;128K;&nbsp;//先保存到用户本地再传给用户的最大字节数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_connect_timeout&nbsp;600;&nbsp;//发起握手到等待响应的超时时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_read_timeout&nbsp;600;&nbsp;//等候后端服务器响应时间，排队等候处理时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_send_timeout&nbsp;600;&nbsp;//在规定时间内服务器必须传完所有数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_buffer_size&nbsp;16K;&nbsp;//这个会保存用户的头信息供Nginx进行处理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_buffers&nbsp;4&nbsp;32K;&nbsp;//告诉Nginx保存单个用的几个Buffer空间大小</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_busy_buffers_size&nbsp;64K;&nbsp;//官方推荐*2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_temp_file_write_size&nbsp;64K;&nbsp;//缓存临时文件大小</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">upstream&nbsp;php_server_pool</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.10:80&nbsp;weight=4&nbsp;max_fails=2&nbsp;fail_timeout=30s</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.11:80&nbsp;weight=4&nbsp;max_fails=2&nbsp;fail_timeout=30s</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.12:80&nbsp;weight=2&nbsp;max_fails=2&nbsp;fail_timeout=30s</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">upstream&nbsp;message_server_pool</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.13:3245;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.14:3245&nbsp;down;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">upstream&nbsp;bbs_server_pool</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.13:80&nbsp;weight=1&nbsp;max_fails=2&nbsp;fail_timeout=30s</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.14:80&nbsp;weight=1&nbsp;max_fails=2&nbsp;fail_timeout=30s</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server&nbsp;192.168.1.15:80&nbsp;weight=1&nbsp;max_fails=2&nbsp;fail_timeout=30s</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#第一个虚拟主机，反向代理php_server_pool</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;80;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;</span><a href="http://www.yourdomain.com%3B/"><span style="font-size:14px;">www.xiaozhe.com;</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#如果后端服务器返回502,504，执行超时等错误，自动将请求转发到upstream负载均衡池中的另一台服务器，实现故障转移</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_next_upstream&nbsp;http_502&nbsp;http_504&nbsp;error&nbsp;timeout&nbsp;invalid_header;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_pass&nbsp;</span><a href="http://php_server_pool/"><span style="font-size:14px;">http://php_server_pool</span></a><span style="font-size:14px;">;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;</span><a href="http://www.xiaozhe.com/"><span style="font-size:14px;">www.xiaozhe.com</span></a><span style="font-size:14px;">;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;X-Forwarded-For&nbsp;$remote_addr;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;/data1/logs/www.xiaozhe.com.access.log;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#第二个虚拟主机</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;80;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;www1.xiaozhe.com;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#访问http://www1.xiaozhe.com/message/*地址反向代理message_server_pool服务器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/message/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_pass&nbsp;</span><a href="http://message_server_pool/"><span style="font-size:14px;">http://message_server_pool</span></a><span style="font-size:14px;">;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;$host;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#访问除了/message/之外的http://www1.xiaozhe.com/**地址，反向代理php_server_pool这组服务器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_pass&nbsp;</span><a href="http://php_server_pool/"><span style="font-size:14px;">http://php_server_pool</span></a><span style="font-size:14px;">;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;$host;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;X-Forwarded-For&nbsp;$remote_addr;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;/data1/logs/message.xiaozhe.com.access.log;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#第三个虚拟主机</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;80;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;bbs.xiaozhe.com&nbsp;*.bbs.xiaozhe.com;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_pass&nbsp;</span><a href="http://bbs_server_pool%3B/"><span style="font-size:14px;">http://bbs_server_pool;</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;Host&nbsp;$host;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">proxy_set_header&nbsp;X-Forwarded-For&nbsp;$remote_addr;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;off;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上述示例中，Upstream指令用于设置一组可以在proxy_pass和fastcgi_pass指令中使用的代理服务器，默认的负载均衡方式为轮询。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当使用反向代理后，如果我们通过$_SERVER[''REMOTE_ADDR'']将得到的是Nginx负载均衡服务器的IP。这时我们在反向代理时添加了Header头信息X-Forwarded-For,这样我们就可以通过$_SERVER[''X-FORWARDED-FOR'']获得用户的IP。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx负载均衡的HTTP&nbsp;Upstream模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">相关Upstream指令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ip_hash&nbsp;:&nbsp;当对多台服务器进行负载均衡的时候，如果用户访问站点分配在A服务器，如果不使用ip_hash指令，则用户继续访问该站点其他页面可能会被分配到其他负载服务器，这样用户的Session会失去，造成提示需要用户登陆等情况。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是如果使用了ip_hash，服务器设置的权重方法就无效了。所以我们建议还是采用后端服务器的SESSION共享方式来代替Nginx的ip_hash方式。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Server&nbsp;:&nbsp;该指令用于指定后端服务器的名称和参数。服务器名称可以是一个域名、IP、端口号或Unix&nbsp;Socket。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在服务器名称之后，可以跟以下参数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">weight=Number&nbsp;&nbsp;//设置服务器权重，权重值越高，被分配的客户端请求就越多，默认权重是1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">max_fails=Number&nbsp;//在参数fail_timeout指定的时间内对后端服务器请求失败的次数，如果检测服务器无法连接，则标记失败。默认是1。设置为0将关闭这项功能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fail_timeout=TIME&nbsp;//在经历参数max_fails设置的失败次数后，暂停的时间。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">down&nbsp;//标记服务器为永久离线状态，用于ip_hash指令。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">backup&nbsp;//仅仅在非backup服务器全部宕机或繁忙时才启用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx负载均衡服务器双机高可用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">具体事例在第六章的19页</span>\r\n</p>', 16, 'nginx', 1, 0, 1, '2013-03-10 12:43:47'),
(213, '设置固定IP地址', '<p>\r\n	<span style="font-size:14px;">在Linux上可以通过ifconfig和route命令添加IP别名。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们在eth0上添加两个IP别名192.168.0.111和192.168.0.112：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ifconfig&nbsp;eth0:1&nbsp;192.168.0.111&nbsp;broadcast&nbsp;192.168.0.255&nbsp;netmask&nbsp;255.255.255.0&nbsp;up</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;route&nbsp;add&nbsp;-host&nbsp;192.168.0.111&nbsp;dev&nbsp;eth0:1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ifconfig&nbsp;eth0:2&nbsp;192.168.0.112&nbsp;broadcast&nbsp;192.168.0.255&nbsp;netmask&nbsp;255.255.255.0&nbsp;up</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;route&nbsp;add&nbsp;-host&nbsp;192.168.0.112&nbsp;dev&nbsp;eth0:2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是，通过ifconfig和route配置的IPD别名在服务器重启后会消息，不过可以将这两条ifconfig和route命令添加到/etc/rc.local文件中，让系统开机自动运行。</span>\r\n</p>', 10, 'linux,ubuntu', 1, 0, 1, '2013-03-10 12:45:11'),
(214, 'CodeIgniter笔记4', '<p>\r\n	<span style="font-size:14px;">自动连接数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在使用数据库之前，我们最好将数据库进行自动连接：config/autoload.php自动加载&nbsp;$autoload[''libraries'']&nbsp;=&nbsp;array(''database'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一些常用函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">选择数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;select();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">允许你在SQL查询中写&nbsp;SELECT&nbsp;部分。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;where();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;or_where();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;where_in();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">允许你在SQL查询中写&nbsp;WHERE部分，其余各种where语句请看手册。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;get();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">运行选择查询语句并且返回结果集。可以获取一个表的全部数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;like();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;or_like();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;not_like();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">本函数允许你生成&nbsp;LIKE&nbsp;子句，在做查询时非常有用，其余语法请看手册。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;order_by();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">帮助你设置一个&nbsp;ORDER&nbsp;BY&nbsp;子句。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;group_by();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">允许你编写查询语句中的&nbsp;GROUP&nbsp;BY&nbsp;部分:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;distinct();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">为查询语句添加&nbsp;"DISTINCT"&nbsp;关键字:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;having();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">允许你为你的查询语句编写&nbsp;HAVING&nbsp;部分。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;limit();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">限制查询所返回的结果数量:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;select_max();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">为你的查询编写一个&nbsp;"SELECT&nbsp;MAX(field)"。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;select_min();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">为你的查询编写一个&nbsp;"SELECT&nbsp;MIN(field)"&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;select_avg();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">为你的查询编写一个&nbsp;"SELECT&nbsp;AVG(field)"&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;select_sum();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">为你的查询编写一个&nbsp;"SELECT&nbsp;SUM(field)"&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;join();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">允许你编写查询中的JOIN部分。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;count_all_results();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">允许你获得某个特定的Active&nbsp;Record查询所返回的结果数量。可以使用Active&nbsp;Record限制函数，例如&nbsp;where(),&nbsp;or_where(),&nbsp;like(),&nbsp;or_like()&nbsp;等等。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">插入数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;insert();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成一条基于你所提供的数据的SQL插入字符串并执行查询。你可以向函数传递&nbsp;数组&nbsp;或一个&nbsp;对象。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;insert_batch();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一次插入多条数据，生成一条基于你所提供的数据的SQL插入字符串并执行查询。你可以向函数传递&nbsp;数组&nbsp;或一个&nbsp;对象。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;set();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">本函数使您能够设置inserts(插入)或updates(更新)值。它可以用来代替那种直接传递数组给插入和更新函数的方式。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">更新数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;update();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">根据你提供的数据生成并执行一条update(更新)语句。你可以将一个数组或者对象传递给本函数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;update_batch();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Generates&nbsp;an&nbsp;update&nbsp;string&nbsp;based&nbsp;on&nbsp;the&nbsp;data&nbsp;you&nbsp;supply,&nbsp;and&nbsp;runs&nbsp;the&nbsp;query.&nbsp;You&nbsp;can&nbsp;either&nbsp;pass&nbsp;an&nbsp;array&nbsp;or&nbsp;an&nbsp;object&nbsp;to&nbsp;the&nbsp;function.&nbsp;Here&nbsp;is&nbsp;an&nbsp;example&nbsp;using&nbsp;an&nbsp;array:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;delete();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成并执行一条DELETE(删除)语句。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;empty_table();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成并执行一条DELETE(删除)语句。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;truncate();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成并执行一条TRUNCATE(截断)语句。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">链式方法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">链式方法允许你以连接多个函数的方式简化你的语法。考虑一下这个范例:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;select(''title'')-&gt;from(''mytable'')-&gt;where(''id'',&nbsp;$id)-&gt;limit(10,&nbsp;20);</span><br />\r\n<span style="font-size:14px;"> $query&nbsp;=&nbsp;$this-&gt;db-&gt;get();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">说明:&nbsp;链式方法只能在PHP&nbsp;5下面运行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查询</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;query();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要提交一个查询，用以下函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;query(''YOUR&nbsp;QUERY&nbsp;HERE'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">query()&nbsp;函数以object(对象)的形式返回一个数据库结果集。&nbsp;当使用&nbsp;"read"&nbsp;模式来运行查询时,&nbsp;你可以使用“</span><a href="http://blog.sina.com.cn/s/results.html"><span style="font-size:14px;">显示你的结果集</span></a><span style="font-size:14px;">”来显示查询结果;&nbsp;当使用&nbsp;"write"&nbsp;模式来运行查询时,&nbsp;将会仅根据执行的成功或失败来返回&nbsp;TRUE&nbsp;或&nbsp;FALSE.&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">转义查询</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;escape()这个函数将会确定数据类型，以便仅对字符串类型数据进行转义。并且，它也会自动把数据用单引号括起来，所以你不必手动添加单引号，用法如下：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$sql&nbsp;=&nbsp;"INSERT&nbsp;INTO&nbsp;table&nbsp;(title)&nbsp;VALUES(".$this-&gt;db-&gt;escape($title).")";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查询辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;insert_id()&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个ID号是执行数据插入时的ID。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;affected_rows()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当执行写入操作（insert,update等）的查询后，显示被影响的行数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;count_all();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">计算出指定表的总行数并返回。在第一个参数中写入被提交的表名。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生成查询记录集</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">result()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该方法执行成功返回一个object&nbsp;数组，失败则返回一个空数组。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">result_array()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该方法执行成功时将记录集作为关联数组返回。失败时返回空数组。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">row()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该函数将当前请求的第一行数据作为&nbsp;object&nbsp;返回。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">你可以传递参数(参数是行的索引)以便获得某一行的数据。比如我们要获得第&nbsp;5&nbsp;行的数据：&nbsp;$row&nbsp;=&nbsp;$query-&gt;row(4);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">row_array()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">功能与&nbsp;row()&nbsp;一样,&nbsp;区别在于该函数返回的是一个数组。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">除此以外,&nbsp;我们还可以使用下面的方法通过游标的方式获取记录：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$row&nbsp;=&nbsp;$query-&gt;first_row()</span><br />\r\n<span style="font-size:14px;"> $row&nbsp;=&nbsp;$query-&gt;last_row()</span><br />\r\n<span style="font-size:14px;"> $row&nbsp;=&nbsp;$query-&gt;next_row()</span><br />\r\n<span style="font-size:14px;"> $row&nbsp;=&nbsp;$query-&gt;previous_row()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认情况下他们将返回一个&nbsp;object，同时你也可以传递参数&nbsp;"array"&nbsp;以便使用&nbsp;array&nbsp;的方式获取数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$row&nbsp;=&nbsp;$query-&gt;first_row(''array'')</span><br />\r\n<span style="font-size:14px;"> $row&nbsp;=&nbsp;$query-&gt;last_row(''array'')</span><br />\r\n<span style="font-size:14px;"> $row&nbsp;=&nbsp;$query-&gt;next_row(''array'')</span><br />\r\n<span style="font-size:14px;"> $row&nbsp;=&nbsp;$query-&gt;previous_row(''array'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">结果集辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$query-&gt;num_rows()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该函数将会返回当前请求的行数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$query-&gt;num_fields()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该函数返回当前请求的字段数（列数）：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$query-&gt;free_result()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该函数将会释放当前查询所占用的内存并删除其关联的资源标识。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">自动连接</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">“自动连接”&nbsp;功能将在每个一页面加载时被自动实例化数据库类。要启用“自动连接”，可在application/config/autoload.php中的&nbsp;library&nbsp;数组里添加&nbsp;database：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$autoload[''libraries'']&nbsp;=&nbsp;array(''database'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">手动连接</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果仅仅是一部分页面要求数据库连接，你可以在你有需要的函数里手工添加如下代码或者在你的类里手工添加以供该类使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;database();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">连接多数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你需要同时连接多于一个的数据库，你可以用以下方式来实现：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$DB1&nbsp;=&nbsp;$this-&gt;load-&gt;database(''group_one'',&nbsp;TRUE);</span><br />\r\n<span style="font-size:14px;"> $DB2&nbsp;=&nbsp;$this-&gt;load-&gt;database(''group_two'',&nbsp;TRUE);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;list_tables();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">返回一个包含当前连接数据库中所有表名称的数组。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;table_exists();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有时，在对某个表执行操作之前，使用该函数判断指定表是否存在很有用。返回一个布尔值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据库工具类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">重要提示：&nbsp;&nbsp;初始化数据库工具类之前，你的数据库驱动必须已经运行,因为工具类依赖于此。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">加载工具类：&nbsp;$this-&gt;load-&gt;dbutil()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一旦初始化完毕，你可以通过&nbsp;$this-&gt;dbutil&nbsp;对象来访问成员函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">$this-&gt;dbutil-&gt;list_databases()</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">$this-&gt;dbutil-&gt;database_exists();</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">$this-&gt;dbutil-&gt;xml_from_result($db_result)</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">$this-&gt;dbutil-&gt;backup()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据库缓存类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">激活缓存需要三步：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1、在服务器上创建一个可写的目录以便保存缓存文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、在文件&nbsp;application/config/database.php&nbsp;中$db[''xxxx''][''cachedir'']设置其目录。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3、激活缓存特性，可以在文件&nbsp;application/config/database.php&nbsp;中设置全局选项$db[''xxxx''][''cache_on'']=''TRUE''，也可以用以本页下面的方法手动设置。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一旦被激活，每一次含有数据库查询的页面被加载时缓存就会自动发生。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当有数据库更新，我们需要删除缓存文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;cache_delete()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除缓存文件与特定网页。如果你需要清除缓存后，更新您的数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;cache_delete(''/blog'',&nbsp;''comments'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意，手册上写的是&nbsp;$this-&gt;db-&gt;cache_delete(''blog'',&nbsp;''comments'');但根据实际测试应该在控制器名字前加斜杠''/''才能正确执行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;db-&gt;cache_delete_all()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">清除所有所有的缓存文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据库维护类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意:&nbsp;&nbsp;欲初始化数据库维护类，请确保你的数据库驱动已经运行，因为该类依赖于数据库驱动。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用如下方法载入数据库维护类:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;dbforge()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一旦初始化，就可以使用$this-&gt;dbforge&nbsp;对象访问类中函数:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">$this-&gt;dbforge-&gt;create_database(''db_name'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">允许你创建由第一个参数指定的数据库。</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">$this-&gt;dbforge-&gt;drop_database(''db_name'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">允许你删除由第一个参数指定的数据库。</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">$this-&gt;dbforge-&gt;create_table(''table_name'');</span><br />\r\n<span style="font-size:14px;"> 声明了字段和键之后，你就可以创建一个表。</span>\r\n</p>', 14, 'codeigniter,php', 1, 0, 1, '2013-03-10 12:45:55');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(215, 'CodeIgniter笔记3', '<p>\r\n	<span style="font-size:14px;">Cookie&nbsp;Helper</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">装载这个&nbsp;helper，这个&nbsp;helper&nbsp;可以通过下面的方法来装载:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;helper(''cookie'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以加载库后直接使用函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">set_cookie().</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">get_cookie().</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">delete_cookie()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Email&nbsp;辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">本辅助函数的装载通过如下代码完成:&nbsp;&nbsp;$this-&gt;load-&gt;helper(''email'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">valid_email(''email'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">检查&nbsp;email&nbsp;是否是一个正确的&nbsp;email&nbsp;地址格式。请注意，这实际上并不表示这个地址能接收邮件，只是简单地说明这是一个有效的地址格式。这个函数返回&nbsp;TRUE/FALSE</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">send_email(''recipient'',&nbsp;''subject'',&nbsp;''message'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用&nbsp;PHP&nbsp;的本地&nbsp;</span><a href="http://www.php.net/function.mail"><span style="font-size:14px;">mail()</span></a><span style="font-size:14px;">&nbsp;函数发送一封&nbsp;Email。如果需要更强大的&nbsp;Email&nbsp;解决方案，请参考&nbsp;CodeIgniter&nbsp;的&nbsp;</span><a href="http://blog.sina.com.cn/libraries/email.html"><span style="font-size:14px;">Email&nbsp;类</span></a><span style="font-size:14px;">。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">HTML辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以在控制器里面加载html，然后可以在View里面进行输出：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;helper(''html'');</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">br()&nbsp;生成指定个数的换行标签&nbsp;()&nbsp;。例如：&nbsp;echo&nbsp;br(3);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">heading()&nbsp;echo&nbsp;heading(''Welcome!'',&nbsp;3,&nbsp;''class="pink"'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将会生成：Welcome!</span>\r\n</p>\r\n<h3>\r\n	<br />\r\n<br />\r\n</h3>\r\n<p>\r\n	<a></a><span style="font-size:14px;">img()&nbsp;&nbsp;帮助你创建&nbsp;HTML&nbsp;&nbsp;标签</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">link_tag()&nbsp;帮助你创建&nbsp;HTML&nbsp;&nbsp;标签。在链接样式表以及其他内容时非常有用。</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">nbs()&nbsp;生成不换行的指定个数的空格标签(&nbsp;)。例如：echo&nbsp;nbs(3);</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">ol()&nbsp;和&nbsp;ul()&nbsp;允许你通过简单或多维的数组生成有序或无序的HTML列表</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">meta()&nbsp;&nbsp;帮助你创建meta标签.&nbsp;你可以将字符串、简单数组或者多维数组传递给函数.&nbsp;例如:&nbsp;echo&nbsp;meta(''description'',&nbsp;''My&nbsp;Great&nbsp;site'');</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">doctype()&nbsp;帮助你创建文档类型声明以及DTD。默认值是&nbsp;XHTML&nbsp;1.0&nbsp;Strict&nbsp;，但你也可以指定其他很多文档类型。&nbsp;echo&nbsp;doctype();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Inflector&nbsp;辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Inflector&nbsp;辅助函数文件包含允许你把单词更改为复数、单数或骆驼拼写法等形式的函数。&nbsp;$this-&gt;load-&gt;helper(''inflector'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">singular()&nbsp;&nbsp;把一个单词的复数形式更改为单数形式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">plural()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;把一个单词的单数形式更改为复数形式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">camelize()&nbsp;&nbsp;把一个以空格或下划线分隔的单词字符串更改为骆驼拼写法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">underscore()&nbsp;把以空格分隔的多个单词更改为以下划线分隔</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">humanize()&nbsp;把以下划线分隔的多个单词更改为以空格分隔，并且每个单词以大写开头</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">URL&nbsp;辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">URL&nbsp;辅助函数文件包含一些在处理&nbsp;URL&nbsp;中很有用的函数：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;helper(''url'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">site_url()&nbsp;&nbsp;做为参数传递给该函数的&nbsp;URI&nbsp;段可以是一个字符串，也可以是一个数组.&nbsp;下面是一个字符串的例子:&nbsp;&nbsp;echo&nbsp;site_url("news/local/123");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">base_url()&nbsp;&nbsp;返回在&nbsp;config.php&nbsp;中设定的&nbsp;base_url.&nbsp;例:&nbsp;echo&nbsp;base_url();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">current_url()&nbsp;返回当前正在查看的页面的完整URL(包括段)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">uri_string()&nbsp;&nbsp;返回此函数的页面的URI段。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index_page()&nbsp;&nbsp;返回在&nbsp;config.php&nbsp;中设定的&nbsp;index_page.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">anchor()&nbsp;创建基于你的本地站点URL&nbsp;.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如echo&nbsp;anchor(''news/local/123'',&nbsp;''My&nbsp;News'',&nbsp;''title="News&nbsp;title"'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">anchor_popup()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">几乎和anchor()&nbsp;函数相同,区别是它会在新窗口打开链接.&nbsp;你可以在第三个参数中指定JavaScript窗口属性来控制窗口的打开方式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mailto()&nbsp;创建标准HTML电子邮件链接.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">safe_mailto()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用法和上面的函数相同,区别是它用JavaScript写了基于顺序号码的不易识别的mailto版本标签,可以阻止email地址被垃圾邮件截获.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">redirect()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">通过发送HTTP头，命令客户端转向到您指定的URL。您既可以指定一个完整的URL，也可以对于站内内容，指定基于网站根目录的相对URL。本函数会自动根据您的配置文件，构造出完整的URL。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表单辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用下面的代码载入该辅助函数：&nbsp;$this-&gt;load-&gt;helper(''form'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">form_open()&nbsp;创建一个开始form标签</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">form_open_multipart()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个函数和上面的form_open()函数完全一样，不同之处在于它多了一个multipart属性。如果你要制作一个上传文件的表单，这个属性是必须的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">form_hidden()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以使你创建一个隐藏输入栏。你可以输入name和value来创建一个：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">form_input()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以使你创建一个标准输入栏。你可以在第一和第二个参数里输入name和value来创建.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">目录辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">请使用如下代码载入这个辅助函数：&nbsp;$this-&gt;load-&gt;helper(''directory'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">directory_map(''source&nbsp;directory'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个函数将读取第一个参数所给出的路径的目录，并且返回该目录所包含文件的数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">日期辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">本辅助函数的装载通过如下代码完成:&nbsp;$this-&gt;load-&gt;helper(''date'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">timezone_menu()&nbsp;&nbsp;生成一个时区下拉选单，像这样：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">echo&nbsp;timezone_menu(''UP8'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">文本辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">采用如下方式装载该辅助函数：$this-&gt;load-&gt;helper(''text'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">word_limiter()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">根据指定的词语(由于是英语，对中文应该是以空格为判断标准，译者注)数目对一段字符串进行截取</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">word_censor()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">让你可以对文本中的文字进行审核替换。第一个形参用于获取原始字符串。第二个形参用于存放你不允许的文字的数组。第三个形参(可选)用于存放一个替换不允许文字的字段。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">highlight_code()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对一段代码(PHP,HTML等)进行着色</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">本函数使用PHP的&nbsp;highlight_string()&nbsp;函数，因此所使用的颜色是你在&nbsp;php.ini&nbsp;文件中指定的那些。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">highlight_phrase()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对字符串内的一个短语进行突出显示。第一个参数是原始字符串，第二个参数是你想要突出显示的短语。如果要用HTML标签对短语进行标记，那么第三个和第四个参数分别是你想要对短语使用的HTML打开和关闭标签。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">文件辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用以下代码：$this-&gt;load-&gt;helper(''file'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">read_file(''path'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">返回路径为path的文件内容</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">write_file(''path'',&nbsp;$data)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">写进数据到path所指向文件。如果文件不存在则创建之</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">delete_files(''path'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除所有包含于path下的文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">get_filenames(''path/to/directory/'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">获取path/to/directory目录下所有文件名组成的数组。如果需要文件名中有其完整路径则可以设置可选的第二个参数为TRUE。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">get_dir_file_info(''path/to/directory/'',&nbsp;$top_level_only&nbsp;=&nbsp;TRUE)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">获取path/to/directory/目录下的所有文件的文件名，文件大小，日期，文件权限等，并将这些内容保存到返回的数组当中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">get_file_info(''path/to/file'',&nbsp;$file_information)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">通过给定的路径和文件名，获取到文件path/to/file的文件名，文件大小，文件更改日期等。第二个参数允许你说明需要返回的信息，这个参数的选项包括''name'',&nbsp;''server_path'',&nbsp;''size'',&nbsp;''date'',&nbsp;''readable'',&nbsp;''writable'',&nbsp;''executable'',&nbsp;''fileperms''。如果文件不存在则返回FALSE。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">symbolic_permissions($perms)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将数字式的权限表示方式（如fileperms()函数所返回值）转换成采用标准符号的标示方式，例如："33279"转换成"-rwxrwxrwx"）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">octal_permissions($perms)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将数字式的权限表示方式（如fileperms()函数所返回值）转换成采用三字符的八进制的标示方式，例如："33279"转换成"777"）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下载辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用下面的代码加载这个辅助函数：$this-&gt;load-&gt;helper(''download'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">force_download(''filename'',&nbsp;''data'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">服务器产生能下载数据到你桌面的头.&nbsp;这对你下载文件有帮助.&nbsp;第一个参数是下载文件的文件名,&nbsp;第二个参数是文件数据.&nbsp;Example:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$data&nbsp;=&nbsp;''Here&nbsp;is&nbsp;some&nbsp;text!'';</span><br />\r\n<span style="font-size:14px;"> $name&nbsp;=&nbsp;''mytext.txt'';</span><br />\r\n<span style="font-size:14px;"> force_download($name,&nbsp;$data);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你想在你的服务器上下载一个存在文件，你需要将它读到一个字符串中:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$data&nbsp;=&nbsp;file_get_contents("/path/to/photo.jpg");&nbsp;//&nbsp;读文件内容</span><br />\r\n<span style="font-size:14px;"> $name&nbsp;=&nbsp;''myphoto.jpg'';</span><br />\r\n<span style="font-size:14px;"> force_download($name,&nbsp;$data);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CAPTCHA&nbsp;辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用下面的代码加载验证码辅助函数:&nbsp;$this-&gt;load-&gt;helper(''captcha'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">create_captcha($data)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">根据你指定的一系列参数创建验证码图像,&nbsp;返回值是一个包含此图像数据的数组.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[array]</span><br />\r\n<span style="font-size:14px;"> (</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;''image''&nbsp;=&gt;&nbsp;IMAGE&nbsp;TAG</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;''time''&nbsp;=&gt;&nbsp;TIMESTAMP&nbsp;(毫秒)</span><br />\r\n<span style="font-size:14px;"> &nbsp;''word''&nbsp;=&gt;&nbsp;CAPTCHA&nbsp;WORD</span><br />\r\n<span style="font-size:14px;"> )</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">字符串辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">采用如下方式装载该辅助函数：$this-&gt;load-&gt;helper(''string'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">random_string()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">根据你所指定的类型和长度产生一个随机字符串。可用于生成密码串或随机字串。第一个参数指定字符串类型，第二个参数指定其长度。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">alternator()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当执行一个循环时，让两个或两个以上的条目轮换使用。范例：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">for&nbsp;($i&nbsp;=&nbsp;0;&nbsp;$i&nbsp;&lt;&nbsp;10;&nbsp;$i++)</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> &nbsp;echo&nbsp;alternator(''string&nbsp;one'',&nbsp;''string&nbsp;two'');</span><br />\r\n<span style="font-size:14px;"> }</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">repeater()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">重复生成你所提交的数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">reduce_multiples()</span>\r\n</p>\r\n<p>\r\n	去掉多余的一个紧接着一个重复出现的特殊字符。\r\n</p>', 14, 'codeigniter,php', 1, 0, 1, '2013-03-10 12:46:21'),
(216, 'CodeIgniter笔记2 ', '<p>\r\n	<span style="font-size:14px;">Email&nbsp;类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在配置文件中设置&nbsp;Email&nbsp;参数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果您不想使用使用上述方法设定参数，您可以把它们放入一个配置文件。创建一个新文件称为email.php&nbsp;，添加$config数组在该文件中。然后将该文件保存为config/email.php&nbsp;它将自动的被使用。如果您保存了一个参数配置文件，就不需要使用$this-&gt;email-&gt;initialize()函数来初始化参数了.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ftp类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在配置文件中设置参数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你更倾向把FTP参数设置保存在一个配置文件中，只需创建一个名为ftp.php的文件,&nbsp;把&nbsp;$config&nbsp;数组添加到该文件中，然后保存成config/ftp.php&nbsp;它就会自动被读取。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可用连接选项:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">hostname-&nbsp;FTP主机名。&nbsp;通常看起来是这样的:&nbsp;ftp.example.com</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">username-&nbsp;FTP用户名。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">password-&nbsp;FTP密码。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">port-&nbsp;端口号。&nbsp;默认设置为21</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">debug-&nbsp;TRUE/FALSE&nbsp;(布尔值).&nbsp;是否开启调试显示错误信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">passive-&nbsp;TRUE/FALSE&nbsp;(布尔值).&nbsp;是否使用被动模式，默认设置为被动模式。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Session类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Sessions会在每个页面载入后开始运行，所以session类必须首先被</span><a href="http://blog.sina.com.cn/general/libraries.html"><span style="font-size:14px;">初始化</span></a><span style="font-size:14px;">。您可以在</span><a href="http://blog.sina.com.cn/general/controllers.html"><span style="font-size:14px;">控制器</span></a><span style="font-size:14px;">中初始化，也可以在系统中</span><a href="http://blog.sina.com.cn/general/autoloader.html"><span style="font-size:14px;">自动加载</span></a><span style="font-size:14px;">（译者注：在autoload.php设定）。session类的绝大部分都会在后台运行，所以初始化session时，它session数据会被自动读取、创建和更新。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要在您的控制器构造函数中初始化session类，您可以使用&nbsp;$this-&gt;load-&gt;library&nbsp;函数:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;library(''session'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一旦被载入,&nbsp;session就可以这样使用：&nbsp;$this-&gt;session</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">写入Session:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$newdata[''username'']&nbsp;=&nbsp;''xiaozhe'';</span><br />\r\n<span style="font-size:14px;"> $this-&gt;session-&gt;set_userdata($newdata);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">取得Session:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$info&nbsp;=&nbsp;$this-&gt;session-&gt;userdata(''username'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除Session:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$newdata[''username'']&nbsp;=&nbsp;'''';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;session-&gt;unset_userdata($newdata);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">URI&nbsp;类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">URI类提供了帮助你分割URI字符串的函数集合。如果你使用URI路由功能，那么你就可以通过分段来重新分发地址栏信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意:&nbsp;URI类会被系统自动初始化，不必手动启用该功能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;uri-&gt;segment(n)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">它允许你重新分割一个详细的URI分段。&nbsp;n&nbsp;为你想要得到的段数。分割数按照从左至右的顺序编排。&nbsp;例如，如果你完整的URL的地址如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http://example.com/index.php/news/local/metro/crime_is_up</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">每个URI分段的数字编号为:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;news</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;local</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;metro</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&nbsp;crime_is_up</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认情况下URI没有分段那么该函数返回&nbsp;FALSE(布尔值)。如果分段信息丢失，Segment函数还有第二个参数用来设置你的默认值。例如，这样设置后，当发生错误时，函数就会返回数字“0”。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$product_id&nbsp;=&nbsp;$this-&gt;uri-&gt;segment(3,&nbsp;0);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">温馨提示：这个URI类蛮好用的，具体请看手册哦</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">User-Agent&nbsp;类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用户代理类提供的功能是，帮助识别是浏览器，还是移动设备或是机器人访问你的站点。另外，你可以得到referrer信息（译注：referrer信息就是访客来源信息，可以参照一般的统计系统来理解），以及语言，和支持的字符集信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">和大多数其他CI类一样，User&nbsp;Agent类也是在你的控制器里使用$this-&gt;load-&gt;library&nbsp;方法完成初始化工作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;library(''user_agent'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">温馨提示：这个User-Agent类蛮好用的，具体请看手册哦</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">XML-RPC&nbsp;和&nbsp;XML-RPC&nbsp;服务器类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">载入类库：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;library(''xmlrpc'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一旦XML-RPC类被载入,&nbsp;XML-RPC&nbsp;库的对象就可以使用了:&nbsp;$this-&gt;xmlrpc</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用下面的方法载入&nbsp;XML-RPC&nbsp;服务器类：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;library(''xmlrpc'');</span><br />\r\n<span style="font-size:14px;"> $this-&gt;load-&gt;library(''xmlrpcs'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一旦加入，可以通过$this-&gt;xmlrpcs,使用&nbsp;xml-rpcs库对象:&nbsp;$this-&gt;xmlrpcs</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意:&nbsp;使用&nbsp;XML-RPC&nbsp;服务器，必须同时载入&nbsp;XML-RPC&nbsp;类和&nbsp;XML-RPCS&nbsp;服务器类。具体的例子和详细的介绍都有，不懂可以去查看手册，不知道和CURL比，到底哪个更好啊。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Zip&nbsp;编码类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CodeIgniter的zip编码类允许你创建ZIP压缩文档。文档可以保存在你的桌面或者某个文件夹里</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">与其他CodeIgniter里的类一样，ZIP类在控制器里完成初始化工作，函数：$this-&gt;load-&gt;library</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;library(''zip'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一旦加载，ZIP库对象可以用$this-&gt;zip来使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安全类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">跨站请求伪造(Cross-site&nbsp;request&nbsp;forgery,CSRF)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">打开你的&nbsp;application/config/config.php&nbsp;文件，进行如下设置，即可启用&nbsp;csrf&nbsp;保护:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$config[''csrf_protection'']&nbsp;=&nbsp;TRUE;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你使用&nbsp;</span><a href="http://blog.sina.com.cn/helpers/form_helper.html"><span style="font-size:14px;">表单辅助函数</span></a><span style="font-size:14px;">,&nbsp;form_open()&nbsp;函数将会自动地在你的表单中插入一个隐藏的csrf字段.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表单验证</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面是如何实施CodeIgniter表单验证的一个简易教程，为了进行表单验证，你需要这三样东西：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&nbsp;一个包含表单的&nbsp;</span><a href="http://blog.sina.com.cn/general/views.html"><span style="font-size:14px;">视图</span></a><span style="font-size:14px;">&nbsp;文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&nbsp;一个包含“成功”信息的视图文件，在成功提交后将被显示。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&nbsp;一个接收并处理所提交数据的&nbsp;</span><a href="http://blog.sina.com.cn/general/controllers.html"><span style="font-size:14px;">控制器</span></a><span style="font-size:14px;">&nbsp;函数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">让我们以一个会员注册表单为例来创建这三个玩意。具体事例在手册上，以下就不进行书写了。</span>\r\n</p>\r\n<div>\r\n	<br />\r\n</div>', 14, 'codeigniter,php', 1, 0, 1, '2013-03-10 12:46:46');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(217, 'CodeIgniter笔记1 ', '<p>\r\n	<span style="font-size:14px;">URI路由</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一个典型的通配符路由看起来是这样的：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$route[''product/(:num)'']&nbsp;=&nbsp;"catalog/product_lookup";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在一个路由中,数组的键包含着被匹配的URI,而数组的值包含着路由将被重定向的目的地.在上面的例子中,如果单词“product”出现在URL的第一个部分中，而且数字(:num)出现在URI的第二个部分中,"catalog"类和"product_lookup"方法将被替代使用(即将被重定向).</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">你可以匹配文字的值或者使用以下两种通配符类型:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:num&nbsp;将匹配一个只包含有数字的segment(段).</span><br />\r\n<span style="font-size:14px;"> :any&nbsp;将匹配一个包含任何字符的segment.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意:&nbsp;路由将会按照定义的顺序来运行.高层的路由总是优先于低层的路由.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除&nbsp;index.php&nbsp;文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认情况下，index.php&nbsp;文件将被包含在你的&nbsp;URL&nbsp;中：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">example.com/index.php/news/article/my_article</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">你可以很容易的通过&nbsp;.htaccess&nbsp;文件来设置一些简单的规则删除它。下面是一个例子，使用“negative”方法将非指定内容进行重定向：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RewriteEngine&nbsp;on</span><br />\r\n<span style="font-size:14px;"> RewriteCond&nbsp;$1&nbsp;!^(index\\.php|images|robots\\.txt)</span><br />\r\n<span style="font-size:14px;"> RewriteRule&nbsp;^(.*)$&nbsp;/index.php/$1&nbsp;[L]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你的项目不在根目录请把上面这一句改为：RewriteRule&nbsp;^(.*)$&nbsp;index.php/$1&nbsp;[L]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在上面的例子中，可以实现任何非&nbsp;index.php、images&nbsp;和&nbsp;robots.txt&nbsp;的&nbsp;HTTP&nbsp;请求都被指向&nbsp;index.php。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建你自己的类库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">文件名首字母大写.&nbsp;例如:&nbsp;Myclass.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">类声明首字母大写.&nbsp;例如:&nbsp;class&nbsp;Myclass</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">类的名字和文件名应符合.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在所有的</span><a href="http://blog.sina.com.cn/s/controllers.html"><span style="font-size:14px;">Controller</span></a><span style="font-size:14px;">&nbsp;函数中,你可以用以下的标准方式初始化你的类:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;library(''myclass'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当&nbsp;someclass&nbsp;是文件名时,不用加上".php"扩展名.这里名字不分大小写.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一旦你自定义的类加载完毕,你可以通过以下方式调用类,注意使用&nbsp;小写&nbsp;的名字:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;myclass-&gt;some_function();&nbsp;//&nbsp;对象的实例名永远都是小写的</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">调试你的应用程序</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该分析器将在页面下方显示基准测试结果，运行过的&nbsp;SQL&nbsp;语句，以及&nbsp;$_POST&nbsp;数据。这些信息有助于开发过程中的调试和优化。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">初始化类</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意:&nbsp;此分析器无须手动初始化.如果已按照下面的方式激活,他将被</span><a href="http://blog.sina.com.cn/libraries/output.html"><span style="font-size:14px;">输出类</span></a><span style="font-size:14px;">自动装载。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">激活分析器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在</span><a href="http://blog.sina.com.cn/s/controllers.html"><span style="font-size:14px;">控制器</span></a><span style="font-size:14px;">中设置以下方法以激活该分析器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;output-&gt;enable_profiler(TRUE);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分析器激活后将产生一个报告并插入您的页面底部,使用以下方法禁用该分析器:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;output-&gt;enable_profiler(FALSE);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">载入辅助函数是非常简单的:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;helper(''name'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">name&nbsp;是辅助函数文件的名字(不带.php后缀&nbsp;和"helper"&nbsp;部分)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如，要载入文件名为url_helper.php的URL&nbsp;Helper，你将会用到下面的语句：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;helper(''url'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">辅助函数可以在你的控制器(controller)的任何地方被载入，甚至可以在视图(View)文件中被载入(我们并不建议你这么做)。请在使用辅助函数之前载入他们。你可以在你的控制器构造函数中载入它们，以便辅助函数能自动在其他函数之前被载入。你也可以在要用到辅助函数的地方当场载入。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">载入多个辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你想一次载入多个辅助函数，你可以这样做:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;helper(&nbsp;array(''helper1'',&nbsp;''helper2'',&nbsp;''helper3'')&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">自动载入辅助函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你想要的话，CodeIgniter可以自动为你载入辅助函数。你可以通过打开&nbsp;application/config/autoload.php&nbsp;，并往自动载入数组(autoload&nbsp;array)中增加辅助函数来实现。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">管理你的应用程序</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">更改你的应用程序的文件夹路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">你可以将&nbsp;application文件夹从system&nbsp;文件夹中挪放到服务器的其他的位置。但是你还要更改&nbsp;index.php&nbsp;文件里将$application_folder变量设置为服务器的全路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$application_folder&nbsp;=&nbsp;"/Path/to/your/application";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在一个&nbsp;CodeIgniter&nbsp;下运行多个应用程序</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你想要多个应用程序共享同一个&nbsp;CodeIgniter，&nbsp;你要将&nbsp;application&nbsp;下所有的文件夹放在不同的应用程序的文件夹内。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如，你要建立两个应用程序&nbsp;"foo"&nbsp;和&nbsp;"bar",你的应用程序文件夹的结构可能会像下面的这样:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">applications/foo/</span><br />\r\n<span style="font-size:14px;"> applications/foo/config/</span><br />\r\n<span style="font-size:14px;"> applications/foo/controllers/</span><br />\r\n<span style="font-size:14px;"> applications/foo/errors/</span><br />\r\n<span style="font-size:14px;"> applications/foo/libraries/</span><br />\r\n<span style="font-size:14px;"> applications/foo/models/</span><br />\r\n<span style="font-size:14px;"> applications/foo/views/</span><br />\r\n<span style="font-size:14px;"> applications/bar/</span><br />\r\n<span style="font-size:14px;"> applications/bar/config/</span><br />\r\n<span style="font-size:14px;"> applications/bar/controllers/</span><br />\r\n<span style="font-size:14px;"> applications/bar/errors/</span><br />\r\n<span style="font-size:14px;"> applications/bar/libraries/</span><br />\r\n<span style="font-size:14px;"> applications/bar/models/</span><br />\r\n<span style="font-size:14px;"> applications/bar/views/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要选择使用某个应用程序，你需要打开主&nbsp;index.php&nbsp;文件，并且设置&nbsp;$application_folder&nbsp;变量为目标路径。例如，通过如下设置，就可以选择使用&nbsp;"foo"&nbsp;应用程序:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$application_folder&nbsp;=&nbsp;"applications/foo";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">开发规范</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">PHP&nbsp;闭合标签</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">PHP闭合标签“?&gt;”在PHP中对PHP的分析器是可选的。&nbsp;但是，如果使用闭合标签，任何由开发者，用户，或者FTP应用程序插入闭合标签后面的空格都有可能会引起多余的输出、php错误、之后的输出无法显示、空白页。因此，所有的php文件应该省略这个php闭合标签，并插入一段注释来标明这是文件的底部并定位这个文件在这个应用的相对路径。这样有利于你确定这个文件已经结束而不是被删节的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">INCORRECT:&nbsp;&lt;?php&nbsp;echo&nbsp;"Here''s&nbsp;my&nbsp;code!";&nbsp;?&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;CORRECT:&nbsp;&nbsp;&nbsp;&lt;?php&nbsp;echo&nbsp;"Here''s&nbsp;my&nbsp;code!";&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">类和方法（函数）的命名规则</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">类名的首字母应该大写。如果名称由多个词组成，词之间要用下划线分隔，不要使用骆驼命名法。类中所有其他方法的名称应该完全小写并且名称能明确指明这个函数的用途，最好用动词开头。尽量避免过长和冗余的名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不当的:&nbsp;&nbsp;class&nbsp;superclass&nbsp;,&nbsp;class&nbsp;SuperClass&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">适当的:&nbsp;&nbsp;class&nbsp;Super_class</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不当的和适当的方法名称的示例：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不当的:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">function&nbsp;fileproperties()&nbsp;//&nbsp;方法名没有清晰的描述以及下划线分割单词</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">function&nbsp;fileProperties()&nbsp;//&nbsp;方法名没有清晰的描述以及使用了驼峰法命名&nbsp;function&nbsp;getfileproperties()&nbsp;//&nbsp;还可以!但是忘记了下划线分割单词</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">function&nbsp;getFileProperties()&nbsp;//&nbsp;使用了驼峰法命名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">function&nbsp;get_the_file_properties_from_the_file()&nbsp;//&nbsp;方法名太冗长</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">适当的:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">function&nbsp;get_file_properties()&nbsp;//&nbsp;清晰的方法名描述，下划线分割单词，全部使用小写字母</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">变量命名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">变量的命名规则与方法的命名规则十分相似。就是说，变量名应该只包含小写字母，用下划线分隔，并且能适当地指明变量的用途和内容。那些短的、无意义的变量名应该只作为迭代器用在for()循环里。</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">常量</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">常量命名除了要全部用大写外，其他的规则都和变量相同。在适当的时候，始终使用CodeIgniter常量，例如MY_NAME&nbsp;,&nbsp;LASH,&nbsp;LD,&nbsp;RD,&nbsp;PATH_CACHE等等.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">比较返回值与类型映射</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不当的:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if&nbsp;(strpos($str,&nbsp;''foo'')&nbsp;==&nbsp;FALSE)&nbsp;//&nbsp;如果&nbsp;''foo''&nbsp;位于此字符串的起始处，strpos将返回&nbsp;0,//&nbsp;此处条件判断的结果为TRUE</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">恰当的:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if&nbsp;(strpos($str,&nbsp;''foo'')&nbsp;===&nbsp;FALSE)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">数据库表名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">你的附加组件所用到的任何表都必须使用&nbsp;''exp_''&nbsp;这个前缀，然后是一个能够唯一标识开发者或公司的前缀，最后才是一个简短的描述性的表名。你不需要担心用户安装时所使用的数据库前缀，因为CodeIgniter的数据库类将根据实际情况自动地对&nbsp;''exp_''&nbsp;进行转换。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不当的:&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">email_addresses&nbsp;//&nbsp;缺少这两个前缀</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">pre_email_addresses&nbsp;//&nbsp;缺少&nbsp;exp_&nbsp;前缀&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">exp_email_addresses&nbsp;//&nbsp;缺少唯一前缀&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">恰当的:&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">exp_pre_email_addresses</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">代码缩进</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用&nbsp;Allman&nbsp;风格缩进。除了类声明以外，括号总是独占一行，且缩进与“属于”它的控制语句同级。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">恰当的:&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">function&nbsp;foo($bar)&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//&nbsp;...&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if&nbsp;($foo&nbsp;==&nbsp;$bar)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;{&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//&nbsp;...&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">else&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//&nbsp;...&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">私有方法和变量</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果方法和变量只在类的内部使用，应当使用下划线作为前缀。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">convert_text()&nbsp;//&nbsp;public&nbsp;method&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">_convert_text()&nbsp;//&nbsp;private&nbsp;method</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a></a><span style="font-size:14px;">字符串</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一直使用单引号除非你需要解析变量，如果需要解析变量请使用大括号，&nbsp;to&nbsp;prevent&nbsp;greedy&nbsp;token&nbsp;parsing.&nbsp;如果字符串包含单引号的话你可以使用双引号，这样就不用转义了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">INCORRECT:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;"My&nbsp;String"&nbsp;//&nbsp;没有解析变量，不需要使用双引号&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;"My&nbsp;string&nbsp;$foo"&nbsp;//&nbsp;解析变量需要使用括号&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;''SELECT&nbsp;foo&nbsp;FROM&nbsp;bar&nbsp;WHERE&nbsp;baz&nbsp;=&nbsp;\\''bag\\''''&nbsp;//&nbsp;需要转义单引号''''时这样写比较难看，可以使用双引号&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CORRECT:&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''My&nbsp;String''&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"My&nbsp;string&nbsp;{$foo}"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"SELECT&nbsp;foo&nbsp;FROM&nbsp;bar&nbsp;WHERE&nbsp;baz&nbsp;=&nbsp;''bag''"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">SQL&nbsp;查询</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MySQL&nbsp;的关键字一直大写：&nbsp;SELECT,&nbsp;INSERT,&nbsp;UPDATE,&nbsp;WHERE,&nbsp;AS,&nbsp;JOIN,&nbsp;ON,&nbsp;IN等等考虑到易读性，请将从句句分成多行来写。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CORRECT:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;$query&nbsp;=&nbsp;$this-&gt;db-&gt;query("SELECT&nbsp;foo,&nbsp;bar,&nbsp;baz,&nbsp;foofoo,&nbsp;foobar&nbsp;AS&nbsp;raboof,&nbsp;foobaz</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;FROM&nbsp;exp_pre_email_addresses</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;WHERE&nbsp;foo&nbsp;!=&nbsp;''oof''&nbsp;AND&nbsp;baz&nbsp;!=&nbsp;''zab''&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;ORDER&nbsp;BY&nbsp;foobaz&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;LIMIT&nbsp;5,&nbsp;100");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">控制器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将&nbsp;URI&nbsp;片段传递给方法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你的&nbsp;URI&nbsp;超过两个部分，那么超过的将被作为参数传递给方法。举例来说，如果你的&nbsp;URI&nbsp;是这样的：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">example.com/index.php/products/shoes/sandals/123&nbsp;,URI&nbsp;的第3和第4部分会被传递给你的方法（“arg1”&nbsp;和&nbsp;“arg2”）：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上面的方法调用时必须给两个相应的参数，要不然会出错。当然你也可以像下面这样写，就不用在调用的时候给参数了！</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;function&nbsp;shoes($arg1=''Test'',&nbsp;$arg2=1)</span><br />\r\n<span style="font-size:14px;"> &nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;echo&nbsp;$arg1;&nbsp;//sandals</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;echo&nbsp;$arg2;&nbsp;&nbsp;//123</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">重新定义方法的调用规则</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">被重新定义的方法调用方式（一般是&nbsp;URI&nbsp;中的第二片段）将作为一个参数传递给&nbsp;_remap()：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">public&nbsp;function&nbsp;_remap($method)</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> &nbsp;if&nbsp;($method&nbsp;==&nbsp;''some_method'')</span><br />\r\n<span style="font-size:14px;"> &nbsp;{</span><br />\r\n<span style="font-size:14px;"> $this-&gt;$method();</span><br />\r\n<span style="font-size:14px;"> &nbsp;}</span><br />\r\n<span style="font-size:14px;"> &nbsp;else</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;comments();</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style="font-size:14px;"> }</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">模型</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">模型可以在&nbsp;</span><a href="http://blog.sina.com.cn/s/controllers.html"><span style="font-size:14px;">controller</span></a><span style="font-size:14px;">&nbsp;中被引用。就像这样:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;model(''Model_name'');</span><br />\r\n<span style="font-size:14px;"> $this-&gt;Model_name-&gt;function();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在默认的情况下模型名称就直接被引入作为对象名，就如上面所示。当然，如果你愿意，可以起个更好记的对象名！那么，可以在加载模型函数中指定第二个参数来设定，例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$this-&gt;load-&gt;model(''Model_name'',&nbsp;''fubar'');</span><br />\r\n<span style="font-size:14px;"> $this-&gt;fubar-&gt;function();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">视图</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">获取视图内容</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">view函数第三个可选参数可以改变函数的行为，让数据作为字符串返回而不是发送到浏览器。如果想用其它方式对数据进一步处理，这样做很有用。如果将view第三个参数设置为true（布尔）则函数返回数据。view函数缺省行为是&nbsp;false,　将数据发送到浏览器。如果想返回数据，记得将它赋到一个变量中：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$string&nbsp;=&nbsp;$this-&gt;load-&gt;view(''myfile'',&nbsp;'''',&nbsp;true);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">网页缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">启用缓存功能，只需要将下面的代码放入你的任何一个控制器(controller)的方法(function)内：&nbsp;$this-&gt;output-&gt;cache(n);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其中&nbsp;n&nbsp;是你希望缓存更新的&nbsp;分钟&nbsp;数。可以使用&nbsp;m/60&nbsp;来精确到秒，例如&nbsp;1/60&nbsp;，则是精确到&nbsp;1秒。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">警告:由于CI存储缓存文件的方式，只有通过&nbsp;</span><a href="http://blog.sina.com.cn/s/views.html"><span style="font-size:14px;">view</span></a><span style="font-size:14px;">&nbsp;文件的输出才能被缓存。</span>\r\n</p>', 14, 'codeigniter,php', 1, 0, 1, '2013-03-10 12:47:33'),
(218, 'LNMP和LAMP的编译安装', '<p>\r\n	<span style="font-size:14px;">在编译这些源码包之前,我们需要确认系统中有gcc,gcc-c++,make编译器,一般系统都自带了gcc和make编译器,所以我们只要安装gcc.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;sudo&nbsp;apt-get&nbsp;install&nbsp;build-essentia&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般安装一个源码包的过程是：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.解压源码包的tar.gz文件,如&nbsp;tar&nbsp;-xvf&nbsp;mysql.tar.gz&nbsp;-C&nbsp;/opt/lamp,其中tar命令中的-C是指定解压路径.其实我们完全可以写一个shell脚本进行解压.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.配置源码,使用命令&nbsp;./configure</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.编译源码,使用命令&nbsp;make</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.安装,使用&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们开始安装lamp环境,在此之前,我们需要安装一系列的必须库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装libxml2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.进入libxml2源码包目录,进行配置设置安装的路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--prefix=/usr/local/libxml2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.使用make编译</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.使用make&nbsp;install&nbsp;安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注:在编译libxml2时,由于nanohttp.c中的open函数有问题,所以我们需要修改nanohttp.c的源代码,在1588行给open加上第三个参数0777就行了.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装libmcrypt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.进入libmcrypt源码包目录,进行配置设置安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--prefix=/usr/local/libmcrypt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.使用make编译</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.使用make&nbsp;install安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.但是需要注意的是在此目录下还有一个libltdl目录,里面的源码也需要进行编译.执行如下命令&nbsp;./configure&nbsp;--enable-ltdl-install&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install&nbsp;.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装zlib</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">因为这个库是很多库安装必须要的,所以建议安装这个库的时候,按照默认的安装路径即可.执行如下命令&nbsp;./configure&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装libpng</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">因为前面我们安装的zlib使用的是默认路径安装,所以这个配置就不需要指定zlib目录了,直接执行如下命令./configure&nbsp;--prefix=/usr/local/libpng&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装jpeg-6b</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">因为这个在安装的过程中不能自动创建目录,所以我们必须提给它安装好必须的目录.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;/usr/local/jpeg6</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;/usr/local/jpeg6/bin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;/usr/local/jpeg6/lib</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;/usr/local/jpeg6/include</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;-p&nbsp;/usr/local/jpeg6/man/man1&nbsp;&nbsp;这里-p表示递归创建man目录后再创建man1目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后开始配置,编译,安装命令如下&nbsp;./configure&nbsp;--prefix=/usr/local/jpeg6&nbsp;--enable-shared&nbsp;--enable-static&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装freetype</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">按顺序配置,编译和安装:&nbsp;./configure&nbsp;--prefix=/usr/local/freetype&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装autoconf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.在安装之前我们需要在ubuntu10.10中安装m4</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;apt-get&nbsp;install&nbsp;m4</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.同zlib一样,建议按默认安装路径执行.&nbsp;命令如下:&nbsp;&nbsp;./configure&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装gd</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在安装这个库的时候,我们需要指定前面的3个库jpeg6,freetype和zlib.但是由于zlib是默认路径,就不需要特指出来.命令如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;--prefix=/usr/local/gd2&nbsp;--with-jpeg=/usr/local/jpeg6&nbsp;--with-freetype=/usr/local/freetype&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装httpd(apache)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;--prefix=/usr/local/apache2&nbsp;--sysconfdir=/etc/httpd/&nbsp;--with-included-apr&nbsp;--disable-userdir&nbsp;--enable-so&nbsp;--enable-deflate=shared&nbsp;--enable-expires=shared&nbsp;--enable-rewrite=shared&nbsp;--enable-static-support&nbsp;&nbsp;;&nbsp;make&nbsp;&nbsp;;&nbsp;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">检测是否安装成功,启动apache:&nbsp;&nbsp;/usr/local/apache/bin/apachectl&nbsp;start&nbsp;&nbsp;&nbsp;查找进程,如果有则安装成功&nbsp;&nbsp;&nbsp;&nbsp;ps&nbsp;aux&nbsp;|&nbsp;grep&nbsp;httpd</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">最后在浏览器上输入你的IP地址看是否成功.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注:有很多教程就在配置的时候加了&nbsp;--with-z=/usr/local/zlib,但是因为我们已经把zlib安装在默认路径,所以在这里我们就不必加了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果在我们执行的时候,提示mod_rewrite.so或更多模块没有权限启动.则我们可以用这个命令解决：chcon&nbsp;-t&nbsp;texrel_shlib_t&nbsp;/usr/local/apache/modules/mod_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.在安装mysql的过程中,很容易出错,因为在安装mysql之前,我们必须要先安装编译一个ncurses.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装ncurses</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;--with-shared&nbsp;--without-debug&nbsp;--without-ada&nbsp;--enable-overwrite&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.创建用户和用户组</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;groupadd&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;useradd&nbsp;-g&nbsp;mysql&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.开始安装mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;--prefix=/usr/local/mysql&nbsp;--with-extra-charsets=all&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.把mysql源码里面support-files目录下的配置文件复制到/etc/目录下，生成配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cp&nbsp;my-medium.cnf&nbsp;/etc/my.cnf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.创建mysql数据库的授权表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;/usr/local/mysql/bin/mysql_install_db&nbsp;--user=mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.然后修改mysql数据目录的拥有者和拥有组</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;root&nbsp;/usr/local/mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;mysql&nbsp;/usr/local/mysql/var</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chgrp&nbsp;-R&nbsp;mysql&nbsp;/usr/local/mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.启动mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;/usr/local/mysql/bin/mysqld_safe&nbsp;--user=mysql&nbsp;&amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8.检查是否启动了</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;ps&nbsp;aux&nbsp;|&nbsp;grep&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以使用mysqladmin查看所有的参数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./mysqladmin&nbsp;variables</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后设置密码&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./mysqladmin&nbsp;-uroot&nbsp;password&nbsp;xiaozhe&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9.设置开机自动启动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以把这些启动命令写入系统每次开机时读取的文件如/etc/rc.d/rc.local,然后执行如下命令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">echo&nbsp;"/usr/local/apache2/bin/apachectl&nbsp;start"&nbsp;&gt;&gt;&nbsp;/etc/rc.d/rc.local</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者贝源码中自带的一个mysql.server文件拷贝到init.d目录下,可以重新取名.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;cp&nbsp;/opt/lamp/mysql-5.0.41/support-files/mysql.server&nbsp;/etc/rc.d/init.d/mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改这个文件的权限和所有权</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;root.root&nbsp;/etc/rc.d/init.d/mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chmod&nbsp;755&nbsp;/etc/rc.d/init.d/mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用chkconfig命令,没用过,我要学习这个命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chkconfig&nbsp;--add&nbsp;mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chkconfig&nbsp;--list&nbsp;mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改运行的等级</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chkconfig&nbsp;--levels&nbsp;245&nbsp;mysqld&nbsp;off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.如果是Nignx服务器，必须先下载php-fpm(既cgi,在配置中必须激活),然后把fpm加载入php安装文件夹中，如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;gzip&nbsp;-cd&nbsp;php-fpm.gz&nbsp;|&nbsp;patch&nbsp;-d&nbsp;php-5.2.10&nbsp;-p1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.进行配置,编译和安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--prefix=/usr/local/php&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-config-file-path=/usr/local/php/etc/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-apxs2=/usr/local/apache2/bin/apxs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#apache的配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-mysql=/usr/local/mysql/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-libxml-dir=/usr/local/libxml2/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-jpeg-dir=/usr/local/jpeg6/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-freetype-dir=/usr/local/freetype/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-gd=/usr/local/gd2/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-mcrypt=/usr/local/libmcrypt/&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-mysqli=/usr/local/mysql/bin/mysql_config&nbsp;&nbsp;#加载mysqli</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--enable-soap&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--enable-mbstring=all&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--enable-sockets&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--enable-fastcgi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#Nignx的配置，激活cgi</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--enable-fpm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#Nignx的配置，激活cgi</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.将php源码包里面的配置文件复制到php配置目录里面</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cp&nbsp;php.ini-dist&nbsp;/usr/local/php/etc/php.ini</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.修改apache配置文件增加执行php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;vim&nbsp;/etc/httpd/httpd.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">添加AddType&nbsp;application/x-httpd-php&nbsp;.php&nbsp;.phtml</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.重启服务器或先stop然后start</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;/usr/local/apache2/bin/apachectl&nbsp;restart</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.写一个php文件测试一下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">vim&nbsp;/usr/local/apache2/htdocs/phpinfo.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装zend加速器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">直接进入ZendOptimizer加速器目录，然后&nbsp;./install.sh&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">后面一切按配置自己修改</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装phpMyadmin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.直接将phpmyadmin文件夹复制到htdocs目录下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;cp&nbsp;-a&nbsp;phpMyAdmin-3.0.0-rc1-all-languages&nbsp;/usr/local/apache2/htdocs/phpmyadmin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.进入phpmyadmin目录,重命名配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cp&nbsp;config.sample.inc.php&nbsp;config.inc.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.修改配置文件,将auth_type为http即可</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.然后在浏览器打开phpmyadmin&nbsp;找到index文件点进即可</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">LNMP的安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装nginx</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.在安装nginx之前先安装pcre,openssl等</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;sudo&nbsp;apt-get&nbsp;install&nbsp;zlib1g&nbsp;openssl&nbsp;libssl-dev&nbsp;libpcre3&nbsp;libpcre3-dev&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.编译安装nginx：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Shell&gt;&nbsp;./configure&nbsp;\\</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--prefix=/usr/local/nginx&nbsp;\\</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_stub_status_module&nbsp;\\</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_ssl_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;make</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.启动nginx：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;/usr/local/nginx/sbin/nginx&nbsp;-c&nbsp;/usr/local/nginx/conf/nginx.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.测试nginx：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装完成后，在浏览器中输入：</span><a href="http://xn--ip-im8ckc/"><span style="font-size:14px;">http://ip地址</span></a><span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<h1>\r\n	<span style="font-size:14px;">显示“Welcome&nbsp;to&nbsp;nginx!”表示nginx安装成功</span>\r\n</h1>\r\n<p>\r\n	<span style="font-size:14px;">安装spawn-fcgi</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.Shell&gt;sudo&nbsp;apt-get&nbsp;install&nbsp;spawn-fcgi</span><br />\r\n<span style="font-size:14px;"> 2.执行spawn-fcgi</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;shell&gt;/usr/bin/spawn-fcgi.standalone&nbsp;-a&nbsp;127.0.0.1&nbsp;-p&nbsp;9000&nbsp;-C&nbsp;8&nbsp;-u&nbsp;www-data&nbsp;-g&nbsp;www-data&nbsp;-f&nbsp;/usr/local/php/bin/php-cgi&nbsp;-P&nbsp;/var/run/fastcgi-php.pid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx和php的整合：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1，修改nginx.confi&nbsp;配置文件：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">添加index.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">root&nbsp;html;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index&nbsp;index.html&nbsp;index.htm&nbsp;index.php&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.开启fastcgi执行php文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;location&nbsp;~&nbsp;.*\\.(php|php5)?$&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_pass&nbsp;&nbsp;&nbsp;127.0.0.1:9000;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_index&nbsp;&nbsp;index.php;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#fastcgi_param&nbsp;&nbsp;SCRIPT_FILENAME&nbsp;html$fastcgi_script_name;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#include&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_params;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;fastcgi.conf;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.在/usr/local/nginx/html/下建立php测试页面文test.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">添加下面代码：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;?php</span><br />\r\n<span style="font-size:14px;"> phpinfo();</span><br />\r\n<span style="font-size:14px;"> ?&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.重新加载nginx配置文件(不用重启服务，重新加载配置文件平滑过渡)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">测试配置文件，提示下面两条信息，表示没问题</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;/usr/local/nginx/sbin/nginx&nbsp;-c&nbsp;/usr/local/nginx/conf/nginx.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">重新加载配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;Kill&nbsp;–HUP&nbsp;‘cat&nbsp;&nbsp;/usr/local/nginx/logs/nginx.pid’</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4，测试：</span>\r\n</p>\r\n<p>\r\n	<a href="http://192.168.0.250/index.php"><span style="font-size:14px;">http://192.168.0.250/test.php</span></a><span style="font-size:14px;">，显示php信息，表示整合成功。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在/etc/rc.d/rc.local下添加下面两条信息，设置开机启动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1./usr/bin/spawn-fcgi.standalone&nbsp;-a&nbsp;127.0.0.1&nbsp;-p&nbsp;9000&nbsp;-C&nbsp;8&nbsp;-u&nbsp;www-data&nbsp;-g&nbsp;www-data&nbsp;-f&nbsp;/usr/local/php/bin/php-cgi&nbsp;-P&nbsp;/var/run/fastcgi-php.pid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2./usr/local/nginx/sbin/nginx&nbsp;-c&nbsp;/usr/local/nginx/conf/nginx.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">附上解压的shell命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#!/bin/bash</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cd&nbsp;/opt/Linux</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ls&nbsp;*.tar.gz&nbsp;&gt;&nbsp;file_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">for&nbsp;TAR&nbsp;in&nbsp;`cat&nbsp;file_name`</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">do</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">tar&nbsp;-xvf&nbsp;$TAR&nbsp;-C&nbsp;/opt/build_lamp</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">done</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rm&nbsp;file_name</span>\r\n</p>', 10, 'lnmp,lamp,linux,ubuntu', 1, 0, 1, '2013-03-10 12:48:27');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(219, 'php spawn-fcgi和php-fpm', '<p>\r\n	<span style="font-size:14px;">spawn-fcgi是一个通用的FastCGI管理服务器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">她是lighttpd中的一部份，但目前已经单独成为一个项目，最新的lighttpd没有这一块(</span><a href="http://www.lighttpd.net/search?q=spawn-fcgi"><span style="font-size:14px;">http://www.lighttpd.net/search?q=spawn-fcgi</span></a><span style="font-size:14px;">)，但可以在以前版本中找到她</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在lighttpd-1.4.15（ http://www.lighttpd.net/download/lighttpd-1.4.15.tar.gz ）中就有她</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Note注：最新的spawn-fcgi可以到lighttpd.net网站搜索“spawn-fcgi”找到她的最新版本发布地址</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">目前她的下载地址是http://redmine.lighttpd.net/news/2 最新版本是http://www.lighttpd.net/download/spawn-fcgi-1.6.0.tar.gz</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style="font-size:14px;">tar -zxvf lighttpd-1.4.15.tar.gz</span><br />\r\n<span style="font-size:14px;"> cd lighttpd-1.4.15</span><br />\r\n<span style="font-size:14px;"> ./configure #编译</span><br />\r\n<span style="font-size:14px;"> make&nbsp;&nbsp;#因为我不需要安装lighttp而是只需要他其中的某个文件，所以只make就可以了，不需要make install</span><br />\r\n<span style="font-size:14px;"> cp src/spawn-fcgi /usr/local/bin/spawn-fcgi&nbsp;&nbsp;#取出spawn-fcgi的程序</span>\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style="font-size:14px;">下面我们就可以使用 spawn-fcgi 来控制php-cgi的FastCGI进程了</span>\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style="font-size:14px;">/usr/local/bin/spawn-fcgi -a 127.0.0.1 -p 9000 -C 5 -u www-data -g www-data -f /usr/bin/php-cgi</span>\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style="font-size:14px;">参数含义如下:</span>\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style="font-size:14px;">-f 指定调用FastCGI的进程的执行程序位置，根据系统上所装的PHP的情况具体设置</span><br />\r\n<span style="font-size:14px;"> -a 绑定到地址addr</span><br />\r\n<span style="font-size:14px;"> -p 绑定到端口port</span><br />\r\n<span style="font-size:14px;"> -s 绑定到unix socket的路径path</span><br />\r\n<span style="font-size:14px;"> -C 指定产生的FastCGI的进程数，默认为5（仅用于PHP）</span><br />\r\n<span style="font-size:14px;"> -P 指定产生的进程的PID文件路径</span><br />\r\n<span style="font-size:14px;"> -u和-g FastCGI使用什么身份（-u 用户 -g 用户组）运行，Ubuntu下可以使用www-data，其他的根据情况配置，如nobody、apache等</span>\r\n	</p>\r\n</blockquote>\r\n<p>\r\n	<span style="font-size:14px;">php-fpm</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">她同样也是一个PHP FastCGI管理服务器，是只用于PHP的,可以在 http://php-fpm.org/download 下载得到.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">她其实是PHP源代码的一个补丁，必须将她patch到你的PHP源代码中，在编译安装PHP后才可以使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装方法类似：</span>\r\n</p>\r\n<blockquote>\r\n	<p>\r\n		<span style="font-size:14px;">tar zxvf php-5.2.10.tar.gz</span><br />\r\n<span style="font-size:14px;"> gzip -cd php-5.2.10-fpm-0.5.11.diff.gz | patch -d php-5.2.10 -p1</span><br />\r\n<span style="font-size:14px;"> cd php-5.2.10/</span><br />\r\n<span style="font-size:14px;"> ./configure --prefix=/usr/local/webserver/php \\</span><br />\r\n<span style="font-size:14px;"> --with-config-file-path=/usr/local/webserver/php/etc \\</span><br />\r\n<span style="font-size:14px;"> --with-mysql=/usr/local/webserver/mysql \\</span><br />\r\n<span style="font-size:14px;"> --with-mysqli=/usr/local/webserver/mysql/bin/mysql_config \\</span><br />\r\n<span style="font-size:14px;"> --with-iconv-dir=/usr/local \\</span><br />\r\n<span style="font-size:14px;"> --with-freetype-dir \\</span><br />\r\n<span style="font-size:14px;"> --with-jpeg-dir \\</span><br />\r\n<span style="font-size:14px;"> --with-png-dir \\</span><br />\r\n<span style="font-size:14px;"> --with-zlib \\</span><br />\r\n<span style="font-size:14px;"> --with-libxml-dir=/usr \\</span><br />\r\n<span style="font-size:14px;"> --enable-xml \\</span><br />\r\n<span style="font-size:14px;"> --disable-rpath \\</span><br />\r\n<span style="font-size:14px;"> --enable-discard-path \\</span><br />\r\n<span style="font-size:14px;"> --enable-safe-mode \\</span><br />\r\n<span style="font-size:14px;"> --enable-bcmath \\</span><br />\r\n<span style="font-size:14px;"> --enable-shmop \\</span><br />\r\n<span style="font-size:14px;"> --enable-sysvsem \\</span><br />\r\n<span style="font-size:14px;"> --enable-inline-optimization \\</span><br />\r\n<span style="font-size:14px;"> --with-curl \\</span><br />\r\n<span style="font-size:14px;"> --with-curlwrappers \\</span><br />\r\n<span style="font-size:14px;"> --enable-mbregex \\</span><br />\r\n<span style="font-size:14px;"> --enable-fastcgi \\</span><br />\r\n<span style="font-size:14px;"> --enable-fpm \\</span><br />\r\n<span style="font-size:14px;"> --enable-force-cgi-redirect \\</span><br />\r\n<span style="font-size:14px;"> --enable-mbstring \\</span><br />\r\n<span style="font-size:14px;"> --with-mcrypt \\</span><br />\r\n<span style="font-size:14px;"> --with-gd \\</span><br />\r\n<span style="font-size:14px;"> --enable-gd-native-ttf \\</span><br />\r\n<span style="font-size:14px;"> --with-openssl \\</span><br />\r\n<span style="font-size:14px;"> --with-mhash \\</span><br />\r\n<span style="font-size:14px;"> --enable-pcntl \\</span><br />\r\n<span style="font-size:14px;"> --enable-sockets \\</span><br />\r\n<span style="font-size:14px;"> --with-ldap \\</span><br />\r\n<span style="font-size:14px;"> --with-ldap-sasl \\</span><br />\r\n<span style="font-size:14px;"> --with-xmlrpc \\</span><br />\r\n<span style="font-size:14px;"> --enable-zip \\</span><br />\r\n<span style="font-size:14px;"> --enable-soap \\</span><br />\r\n<span style="font-size:14px;"> --without-pear</span><br />\r\n<span style="font-size:14px;"> make ZEND_EXTRA_LIBS=''-liconv''</span><br />\r\n<span style="font-size:14px;"> make install</span><br />\r\n<span style="font-size:14px;"> cp php.ini-dist /usr/local/webserver/php/etc/php.ini</span><br />\r\n<span style="font-size:14px;"> cd ../</span>\r\n	</p>\r\n</blockquote>', 10, 'nginx,linux,ubuntu', 1, 0, 1, '2013-03-10 12:49:10'),
(220, '3 Nginx的基本配置和优化', '<p>\r\n	<span style="font-size:14px;">Nignx的配置文件内容</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#运行用户</span><br />\r\n<span style="font-size:14px;"> user&nbsp;www-data;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> #启动进程,通常设置成和cpu的数量的两倍</span><br />\r\n<span style="font-size:14px;"> worker_processes&nbsp;&nbsp;4;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#全局错误日志及PID文件</span><br />\r\n<span style="font-size:14px;"> error_log&nbsp;&nbsp;/var/log/nginx/error.log;</span><br />\r\n<span style="font-size:14px;"> pid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/var/run/nginx.pid;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#工作模式及连接数上限</span><br />\r\n<span style="font-size:14px;"> events&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;use&nbsp;&nbsp;&nbsp;epoll;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#epoll是多路复用IO(I/O&nbsp;Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;worker_connections&nbsp;&nbsp;1024;#单个后台worker&nbsp;process进程的最大并发链接数</span><br />\r\n<span style="font-size:14px;"> }</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#设定http服务器，利用它的反向代理功能提供负载均衡支持</span><br />\r\n<span style="font-size:14px;"> http&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#设定mime类型,类型由mime.type文件定义</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mime.types;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;default_type&nbsp;&nbsp;application/octet-stream;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#设定日志格式</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;access_log&nbsp;&nbsp;&nbsp;&nbsp;/usr/local/nginx/logs/access.log;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;#sendfile&nbsp;指令指定&nbsp;nginx&nbsp;是否调用&nbsp;sendfile&nbsp;函数（zero&nbsp;copy&nbsp;方式）来输出文件，对于普通应用，</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#必须设为&nbsp;on,如果用来进行下载等应用磁盘IO重负载应用，可设置为&nbsp;off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;sendfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#tcp_nopush&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#连接超时时间</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#keepalive_timeout&nbsp;&nbsp;0;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;keepalive_timeout&nbsp;&nbsp;65;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;tcp_nodelay&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#fastcgi</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fasccgi_connect_timeout&nbsp;300;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_send_timeout&nbsp;300;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_read_timeout&nbsp;300;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_buffer_size&nbsp;64k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_buffers&nbsp;4&nbsp;64k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_busy_buffers_size&nbsp;128k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fastcgi_temp_file_write_size&nbsp;128k;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#开启gzip压缩</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;gzip&nbsp;&nbsp;on;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_min_length&nbsp;1k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_buffers&nbsp;4&nbsp;16k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_comp_level&nbsp;2;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_types&nbsp;text/plain&nbsp;application/x-javascript&nbsp;text/css&nbsp;application/xml;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_vary&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;gzip_disable&nbsp;"MSIE&nbsp;[1-6]\\.(?!.*SV1)";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#设定请求缓冲</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;client_header_buffer_size&nbsp;&nbsp;&nbsp;&nbsp;1k;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;large_client_header_buffers&nbsp;&nbsp;4&nbsp;4k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">include&nbsp;/usr/local/nginx/conf/*.conf;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;/etc/nginx/sites-enabled/*;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;#设定负载均衡的服务器列表</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;upstream&nbsp;mysvr&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#weigth参数表示权值，权值越高被分配到的几率越大</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#本机上的Squid开启3128端口</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server&nbsp;192.168.8.1:3128&nbsp;weight=5;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server&nbsp;192.168.8.2:80&nbsp;&nbsp;weight=1;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server&nbsp;192.168.8.3:80&nbsp;&nbsp;weight=6;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;#服务器定义</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;server&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#侦听80端口</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#定义使用</span><a href="http://www.xx.com/"><span style="font-size:14px;">www.xiaozhe.com</span></a><span style="font-size:14px;">访问</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server_name&nbsp;&nbsp;www.xiaozhe.com;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#设定本虚拟主机的访问日志</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_log&nbsp;&nbsp;logs/www.xiaozhe.com.access.log&nbsp;&nbsp;main;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;#默认请求</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;&nbsp;&nbsp;/root;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#定义服务器的默认网站根目录位置</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index&nbsp;index.php&nbsp;index.html&nbsp;index.htm;&nbsp;&nbsp;&nbsp;#定义首页索引文件名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_pass&nbsp;&nbsp;www.xiaozhe.com;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_param&nbsp;SCRIPT_FILENAME&nbsp;&nbsp;$document_root/$fastcgi_script_name;&nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;/etc/nginx/fastcgi_params;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#&nbsp;定义错误提示页面</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;error_page&nbsp;&nbsp;&nbsp;500&nbsp;502&nbsp;503&nbsp;504&nbsp;/50x.html;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;=&nbsp;/50x.html&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;&nbsp;&nbsp;/root;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#静态文件，nginx自己处理</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;~&nbsp;^/(images|javascript|js|css|flash|media|static)/&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;/var/www/virtual/htdocs;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires&nbsp;30d;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#PHP&nbsp;脚本请求全部转发到&nbsp;FastCGI处理.&nbsp;使用FastCGI默认配置.</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;~&nbsp;\\.php$&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;/root;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_pass&nbsp;127.0.0.1:9000;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_index&nbsp;index.php;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_param&nbsp;SCRIPT_FILENAME&nbsp;/home/www/www$fastcgi_script_name;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;fastcgi_params;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#设定查看Nginx状态的地址</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/NginxStatus&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stub_status&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_log&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auth_basic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"NginxStatus";</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auth_basic_user_file&nbsp;&nbsp;conf/htpasswd;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;#禁止访问&nbsp;.htxxx&nbsp;文件</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;~&nbsp;/\\.ht&nbsp;{</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deny&nbsp;all;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style="font-size:14px;"> }</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置基于IP的虚拟主机</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">IP别名的概念很简单，可以在一块网卡上绑定多个IP地址。在Linux上可以通过ifconfig和route命令添加IP别名。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们在eth0上添加两个IP别名192.168.0.111和192.168.0.112：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ifconfig&nbsp;eth0:1&nbsp;192.168.0.111&nbsp;broadcast&nbsp;192.168.0.255&nbsp;netmask&nbsp;255.255.255.0&nbsp;up</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;route&nbsp;add&nbsp;-host&nbsp;192.168.0.111&nbsp;dev&nbsp;eth0:1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ifconfig&nbsp;eth0:2&nbsp;192.168.0.112&nbsp;broadcast&nbsp;192.168.0.255&nbsp;netmask&nbsp;255.255.255.0&nbsp;up</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;route&nbsp;add&nbsp;-host&nbsp;192.168.0.112&nbsp;dev&nbsp;eth0:2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是，通过ifconfig和route配置的IPD别名在服务器重启后会消息，不过可以将这两条ifconfig和route命令添加到/etc/rc.local文件中，让系统开机自动运行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面我们在配置文件中(nginx.conf)中分别对这几个IP配置基于IP虚拟主机：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#第一个虚拟机</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;192.168.0.111:80;&nbsp;#监听IP和80端口</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;192.168.0.111;&nbsp;#主机名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;logs/server1.access.log&nbsp;combined&nbsp;;&nbsp;#访问日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#默认首页文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index&nbsp;index.html&nbsp;index.htm&nbsp;index.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#网站目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">root&nbsp;/var/web1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#第二个虚拟机</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;192.168.0.112:80;&nbsp;#监听IP和80端口</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;192.168.0.112;&nbsp;#主机名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;logs/server2.access.log&nbsp;combined&nbsp;;&nbsp;#访问日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#默认首页文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index&nbsp;index.html&nbsp;index.htm&nbsp;index.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#网站目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">root&nbsp;/var/web2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置基于域名的虚拟主机</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#第一个虚拟机</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;80;&nbsp;#监听80端口</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;aaa.domain.com;&nbsp;#主机名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;logs/server1.access.log&nbsp;combined&nbsp;;&nbsp;#访问日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#默认首页文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index&nbsp;index.html&nbsp;index.htm&nbsp;index.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#网站目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">root&nbsp;/var/web1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#第二个虚拟机</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listen&nbsp;80;&nbsp;#80端口</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">server_name&nbsp;bbb.domain.com;&nbsp;#主机名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log&nbsp;logs/server2.access.log&nbsp;combined&nbsp;;&nbsp;#访问日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#默认首页文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">index&nbsp;index.html&nbsp;index.htm&nbsp;index.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#网站目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">root&nbsp;/var/web2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">日志文件配置和切割</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nignx的日志格式主要与两条命令有关，第一条是log_format定义日志的格式，另一条是access_log定义日志的存放路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">log_format的语法如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">log_format&nbsp;name&nbsp;format&nbsp;[format&nbsp;...]&nbsp;&nbsp;其中name表示日志格式的名称，Nginx默认有个格式名称是combined&nbsp;。&nbsp;其具体参数如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Log_format&nbsp;combined&nbsp;''$remote_addr&nbsp;-&nbsp;$remote_user&nbsp;[$time_local]''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''"$request"&nbsp;$status&nbsp;$body_bytes_sent''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''"$http_referer"&nbsp;"$http_user_agent"''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是现在我们假设在Nignx上做了Web服务器，反向代理服务器，负载均衡等，如果Web服务器配置放在反向代理服务器配置后面，我们就不能通过$remote_addr得到用户的IP，因为我们只能得到反向代理服务器的IP了。&nbsp;所以我们需要用$http_x_forwarded_for变量来记录此用户IP。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">日志格式的意义：$remote_addr和$http_x_forwarded_for代表用户IP；$remote_user代表远程客户端名称；$time_local代表访问时间和时区；$request代表请求URL的HTTP协议；$status代表请求状态如200；$body_bytes_sent代表发送给客户端的内容大小；$http_referer代表从哪个页面访问过来的；$http_user_agent记录客户端浏览器信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">access_log命令的分析</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法为：access_log&nbsp;path&nbsp;[format&nbsp;[buffer&nbsp;=&nbsp;size&nbsp;|&nbsp;off]]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其中path表示日志存放路径，format表示使用log_format定义的格式名称，buffer表示设置内存缓存区的大小，例如buffer&nbsp;=&nbsp;32k&nbsp;。如果不想记录则可以使用access_log&nbsp;off&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nignx日志文件的切割</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在生产环境中的服务器，由于日志文件过大，会大大影响服务器的效率。所以我们需要对日志文件进行按天分割。主要是通过crontab脚本来自动执行下面的代码，保证下面的代码文件在每天的00:00点执行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假设文件名字为：cut_nignx_log.sh</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#!/bin/bash</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#定义日志目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">logs_path = "/usr/local/nignx/logs/"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#按时间创建日志目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mkdir&nbsp;-p&nbsp;${logs_path}$(date&nbsp;-d&nbsp;"yesterday"&nbsp;+&nbsp;"%Y")/$(date&nbsp;-d&nbsp;"yesterday"&nbsp;+&nbsp;"%m")/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#重命名前一天的access.log为日期名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mv&nbsp;${logs_path}/access.log&nbsp;&nbsp;${logs_path}$(date&nbsp;-d&nbsp;"yesterday"&nbsp;+&nbsp;"%Y")/$(date&nbsp;-d&nbsp;"yesterday"&nbsp;+&nbsp;"%m")/access_$(date&nbsp;-d&nbsp;"yesterday"&nbsp;+&nbsp;"%Y%m%d").log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#重启服务器，生成新的一天的access.log文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">kill&nbsp;-USR1&nbsp;`cat&nbsp;/usr/local/nignx/logs/nignx.pid`</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">定义crontab文件：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;crontab&nbsp;-e</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">00&nbsp;00&nbsp;*&nbsp;*&nbsp;*&nbsp;/bin/bash&nbsp;/usr/local/nignx/logs/cut_nignx_log.sh</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nignx的压缩输出配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Gzip可以将页面进行压缩，压缩后的页面大小可以变为原来的30%甚至更小，加快用户的访问速度。Gzip的配置位于http{...}里面</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip&nbsp;&nbsp;on;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_min_length&nbsp;1k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_buffers&nbsp;4&nbsp;16k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_http_version&nbsp;1.1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_comp_level&nbsp;2;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_types&nbsp;text/plain&nbsp;application/x-javascript&nbsp;text/css&nbsp;application/xml;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip_vary&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nignx自动列目录配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;/&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">autoindex&nbsp;on; #开启目录列出</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">autoindex_exact_size&nbsp;[on&nbsp;|&nbsp;off] #设置索引时文件大小的单位</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">autoindex_localtime [on&nbsp;|&nbsp;off] #开启本地时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx的浏览器本地缓存设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">浏览器缓存是为了加速用户浏览，将请求过的文档存储在用户磁盘上。浏览器缓存可以通过expires&nbsp;指定输出Header&nbsp;头来实现。expires指令的语法如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法：expire&nbsp;[time&nbsp;|&nbsp;epoch&nbsp;|&nbsp;max&nbsp;|&nbsp;off]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值:&nbsp;expire&nbsp;off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">作用域:&nbsp;http&nbsp;,&nbsp;server&nbsp;,&nbsp;location</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用途：&nbsp;可以控制HTTP应答中Expires和Cache-Control的header头信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：对常见格式的图片，flash文件在浏览器本地缓存30天，对js，css文件在浏览器本地缓存1小时。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;.*\\.(gif|jpeg|jpg|png|bmp|swf)$&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">expires&nbsp;30d;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">location&nbsp;~&nbsp;.*\\.(js|css)?$&nbsp;{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">expires&nbsp;1h;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>', 16, 'nginx', 1, 2, 1, '2013-03-10 12:49:37'),
(221, '我的linux学习8 shell脚本', '<p>\r\n	<span style="font-size:14px;">果用到数字计算：var=$((运算内容))这种方法不需要定义类型，而且方便。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">获得前天的时间：date --date=''1 days ago'' +%Y%m%d</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用test测试功能： 如test -e filename&nbsp;&nbsp;&nbsp;（以下为常用的）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-e 该文件名是否存在</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-f 是否为文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-d 是否为目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-r 是否可读&nbsp;&nbsp;&nbsp;-w 是否可写&nbsp;&nbsp;-x 是否可执行</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-nt 判断2文件新&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test file1 -nt file2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;判断file1是否比file2新</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-ot 判断2文件旧&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test file1 -ot file2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;判断file1是否比file2旧</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-ef 判断2文件是否为同一文件&nbsp;&nbsp;&nbsp;，主要用于判断硬链接</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">两个整数间的判断： test n1 -eq n2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-eq 两数相等</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-ne&nbsp;&nbsp;不相等</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-gt 大于&nbsp;&nbsp;&nbsp;-lt 小于</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-ge 大于等于&nbsp;&nbsp;&nbsp;-le 小于等于</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">判断字符串数据：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">test -z string 判断字符串是否为0，若字符串为空，则为true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">test -n string 判断字符串是否为非0，若字符串不为空，则为true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">test str1 = str2 判断str1是否等于str2 ，若相等，则返回true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">test str1 != str2 判断str1是否等于str2 ，若不相等，则返回true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">多重条件判断： test -r filename -a -x filename</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-a 并且</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-o 或</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">！ 反&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test! -x file，当file不具有执行，返回true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例子为：sh05.sh</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">除了使用test外，还可以使用 [ ]来判断 ，例如判断$HOME是否为空 [ -z "$HOME" ]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">特别注意：使用[ ]在每个组件中都要有空格&nbsp;&nbsp;[ "$HOME" == "$MAIL" ]，变量最好用双引号，常量最好用单引号或双引号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell脚本的默认变量（$0,$1......）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$0 ：代表脚本名（含路径）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$1~$n ：代表脚本的第几个参数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">条件判断：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if [ 条件判断 ]; then</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fi</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if [ 条件判断 ]; then</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;命令。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">elif [ 条件判断 ]; then</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;命令。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">else</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;命令。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fi</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">netstat：这个命令查看当前主机是否有打开的网络服务端口，可以利用netstat -tuln 获取主机启动服务。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">几个常用的端口：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">80：www</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">22：shh</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">21：ftp</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">25：mail</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例子在：sh09.sh</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例子：让用户输入退伍日期，然后得到还有多久退伍。&nbsp;&nbsp;&nbsp;sh10.sh</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用case....esac判断</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">case $变量 in</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;"第一个判断"）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;程序段</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;"第二个判断"）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;程序段</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;*)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;程序段</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;esac</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：sh08-2.sh</span>\r\n</p>\r\n<span style="font-size:14px;">case $1 in</span><br />\r\n<span style="font-size:14px;"> &nbsp;"hello")</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo ''Hello,how are you!!!''</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;; &nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;"")&nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "you must input parameters"</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;; &nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;*)</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "the parameters is not hello"</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;; &nbsp;</span><br />\r\n<span style="font-size:14px;"> esac</span><br />\r\n<br />\r\n<br />\r\n<span style="font-size:14px;"> 函数也拥有内置变量：$0表示函数名，后续的变量用$1,$2.....来表示</span><br />\r\n<span style="font-size:14px;"> &nbsp;function printit(){</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo -n "Your choice is $1 "</span><br />\r\n<span style="font-size:14px;"> &nbsp;}</span><br />\r\n<span style="font-size:14px;"> printit 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;====================&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your choice is 1</span><br />\r\n<br />\r\n<br />\r\n<span style="font-size:14px;"> 循环</span><br />\r\n<br />\r\n<span style="font-size:14px;"> while [ condition ]</span><br />\r\n<span style="font-size:14px;"> do</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;程序段落</span><br />\r\n<span style="font-size:14px;"> done</span><br />\r\n<span style="font-size:14px;"> 例子：sh13.sh</span><br />\r\n<br />\r\n<br />\r\n<span style="font-size:14px;"> until [ contidion ]</span><br />\r\n<span style="font-size:14px;"> do</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;程序段落</span><br />\r\n<span style="font-size:14px;"> done</span><br />\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">for (( 初始值；限制值；执行步长))</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">do</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;程序段落</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">done</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例子：sh15.sh</span>\r\n</p>\r\n<span style="font-size:14px;">total=0</span><br />\r\n<span style="font-size:14px;"> for(( i=1;i&lt;=100;i++ ))</span><br />\r\n<span style="font-size:14px;"> do</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;total=$(($total+$i))</span><br />\r\n<span style="font-size:14px;"> done</span><br />\r\n<span style="font-size:14px;"> echo "total=" $total</span><br />\r\n<br />\r\n<span style="font-size:14px;"> for的另一种用法：</span><br />\r\n<span style="font-size:14px;"> for var in con1 con2 con3......</span><br />\r\n<span style="font-size:14px;"> do</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;程序段</span><br />\r\n<span style="font-size:14px;"> done</span><br />\r\n<span style="font-size:14px;"> 例子：sh16.sh</span><br />\r\n<br />\r\n<span style="font-size:14px;"> Shell脚本的追踪与调试</span><br />\r\n<span style="font-size:14px;"> sh [-nvx] scripts.sh ： -n不要执行脚本，仅查询语法问题，-v在执行脚本前，先将脚本内容输出到屏幕上，-x将使用的脚本内容显示到屏幕上，这是很有用的参数。</span>', 10, '笔记,ubuntu', 1, 0, 1, '2013-03-10 12:50:48');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(222, '我的linux学习9 linux的帐号与身份管理', '<p>\r\n	<span style="font-size:14px;">/etc/passwd文件的分析：例如&nbsp;&nbsp;&nbsp;root:x:0:0:root:/root:/bin/bash&nbsp;&nbsp;&nbsp;以：分隔共7部分，分别是如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1：帐号名称，对应uid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2：密码，放在/etc/shadow</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3：UID，其中0代表系统管理员，1～499其实与500～65535差不多，普通帐户。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4：GID，与/etc/group有关</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5：解释帐号的意义</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6：用户家目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7：Shell命令，注：有一个/sbin/nologin可以让帐号无法登录，利用这点可以制作纯pop邮件帐号者数据。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/shadow文件分析：例如xiaozhe:$1$o8IR4$3dhoIo0a2ESg2Fv/Af9xM.:15380:0:99999:7::: 以：分隔共9部分。linux日期为：1970.01.01</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1：帐号名称：必须与/etc/passwd里面的相同</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2：密码：一般密码栏第一个字符为（*）或（！）表示这个账户不能用来登录，如果想让某个账户不能登录，可以在密码栏第一个字符加上（*）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3：最近更改密码的日期： 以天数来计算的</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4：密码不可更改的天数：0表示随时可以修改，如果设置为10表示修改密码后10天内不能再次修改</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5：密码需要重新更改的天数：99999表示不需要重新输入。如果设置表示在这个时间内要重新设置密码，否则帐号会失效。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6：密码更改期限前的警告期限：在帐号失效前7天警告用户</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7：密码过期的宽限时间：如果设置为N表示密码失效后的N天内还是可以登录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8：帐号失效日期：与第三个字段一样用天数计算，一般用在收费系统。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9：保留：保留字段。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/group文件分析：例如，root:x:0:root &nbsp;以：分隔为4部分</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1：用户组名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2：用户组密码，通常不设置，保存在/etc/gshadow</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3：GID：用户组ID</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4：支持的账号名称：一个账号能加入多个组，如果想让xiaozhe加入root用户组，在最后加上（,xiaozhe），注意不要空格，例如：root:x:0:root,xiaozhe</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有效用户组和初始用户组：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">初始用户组：用户登录时默认/etc/passwd里面的用户组</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">groups：输出我所属的用户组，并且第一个输出的用户组为有效用户组。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">newgrp groupname：可以用来切换有效i用户组～～～～</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">帐号管理：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">useradd username：参数过多，使用在查或者书上308页。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认情况的相关信息在：/etc/default/useradd中</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">关于用户家目录参考：/etc/skel/*</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">关于用户UID/GID的设置在/etc/login.defs中</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">passwd [useraccount]：修改密码</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">usermod：相关数据的修改，参数过多，使用查看书上312页。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">userdel [-r] username：删除用户，-r 连同用户的家目录也一起删除。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果要全部删除，先find / -user username 把其余文件也要删除掉</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用户功能：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chsh [-ls] ： -l 列出当前系统的shell，-s设置自己的shell</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chfn：更改自己的相关信息</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">id [username]：查看某人或自己的相关UID/GID信息</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">新增与删除用户组：基本与/etc/group和/etc/gshadow有关</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">groupadd [-g gid] [-r]：-g直接给予某个gid。-r建立系统用户组，与/etc/login.defs内的GID_MIN有关。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">groupmod [-g gid] [-n group_name]： -g修改已有的GID数字，-n修改已有的用户组名称。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">groupdel：删除用户组</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">passwd的一些用法，管理员管理用户很方便：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-l：将username帐号的密码锁住，在/etc/shadow内的密码栏修改。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-u：将帐号解锁</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-n：后面接天数，最短天数；即/etc/shadow内的第四栏</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-x：后面接天数，最长天数；即/etc/shadow内的第五栏</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-w：后面接天数，警告天数；即/etc/shadow内的第六栏</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-S：显示username的相关信息</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">su [-lcm] username：其中 su - 表示该用户想要变换身份为root,并且使用root的环境设置参数,如/root/.bash_profile</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">，-l 切换用户。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo：如果很多人管理主机，都需要知道root密码，会很不安全，所以当使用sudo时，只要查看/etc/sudoers里面你是否有权限，然后输入自己的密码确认就可以切换用户。修改使用visudo命令</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">PAM模块：一般如果执行某命令，例如passwd，就会搜索/etc/pam.d/passwd设置文件的数据，回传下一个操作（修改成功或者失败）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">pam的设置文件都放在/etc/pam.d/这个目录中，更多相关设置放在/etc/security/*中</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">lastlog：显示帐号最近登录时间；</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">发送消息给在线用户：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">w：查看有几个人在线，假如xiaozhe在线</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">write xiaozhe ： 输入内容后按crtl+d。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">xiaozhe的终端就会显示消息，如果不想看，可以mesg n关闭，开启mesg y。查看当前mesg状态直接输入mesg.</span>\r\n</p>', 10, '笔记,linux', 1, 0, 1, '2013-03-10 12:57:21'),
(223, '我的linux学习11 程序与资源管理', '<span style="font-size:14px;">作业管理：</span>\r\n<p>\r\n	<span style="font-size:14px;">cp file1 file2 &amp;&nbsp;&nbsp;&nbsp;重点在&amp;表示执行这个命令并且是在后台执行</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果在命令执行的过程中有输出，则就不会显示提示符，也就无法完好的控制前台作业，所以我们需要有数据流重导向：例如&nbsp;&nbsp;&nbsp;tar -cvzf /tmp/etc.tar.gz&nbsp;&nbsp;/etc &gt; /tmp/log.tar 2&gt; &amp;1 &amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将当前作业放到后台暂停： 【Crtl+Z】</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如我在执行vim编辑，突然不知道一个文件在哪里，我没必要关掉VIM，可以先暂停然后在使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">jobs [-lrs] ：观察后台作业的状态。-l 除了列出作业号之外同时列出PID，-r 仅列出正在后台运行（run）的作业，-s仅列出正在后台暂停（stop）的作业。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fg %jobnumber：将后台作业拿到前台处理，%可有可无。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">bg %jobnunber：将作业放到后台运行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">kill：-l 列出所有能够使用的信号。常用有-1重新读取，-2相当与crtl+c，-9立刻强制删除一个作业，-15以正常的方式终止一项作业。注：假如我在操作VIM，-9强制删除则会生成一个swf文件，而-15表示以正常方式结束，不会生成，这是这2个的区别。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">kill -n [ %jobnumber | PID]</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<span style="font-size:14px;">强制杀死某程序&nbsp;&nbsp;&nbsp;&nbsp;kill -9 `ps aux | grep ''syslog'' | head -n 1 | awk ''{print $2}''`</span><br />\r\n<br />\r\n<p>\r\n	<span style="font-size:14px;">killall：一般来说，kill一般用来杀死某进程，通过PID或者启动该服务的命令名称。但是一般删掉某个服务最简单的办法就是使用killall&nbsp;&nbsp;&nbsp;&nbsp;如：killall -9 httpd</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">进程的观察：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ps -l ：列出属于自己这次登录的PID与相关信息。</span>\r\n</p>\r\n<span style="font-size:14px;">F S&nbsp;&nbsp;&nbsp;UID&nbsp;&nbsp;&nbsp;PID&nbsp;&nbsp;PPID&nbsp;&nbsp;C PRI&nbsp;&nbsp;NI ADDR SZ WCHAN&nbsp;&nbsp;TTY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TIME CMD</span><br />\r\n<span style="font-size:14px;"> 0 S&nbsp;&nbsp;1000&nbsp;&nbsp;1925&nbsp;&nbsp;1921&nbsp;&nbsp;0&nbsp;&nbsp;80&nbsp;&nbsp;&nbsp;0 -&nbsp;&nbsp;2047 wait&nbsp;&nbsp;&nbsp;pts/0&nbsp;&nbsp;&nbsp;&nbsp;00:00:00 bash</span><br />\r\n<span style="font-size:14px;"> 0 S&nbsp;&nbsp;1000&nbsp;&nbsp;2216&nbsp;&nbsp;1925&nbsp;&nbsp;0&nbsp;&nbsp;80&nbsp;&nbsp;&nbsp;0 -&nbsp;&nbsp;2069 wait&nbsp;&nbsp;&nbsp;pts/0&nbsp;&nbsp;&nbsp;&nbsp;00:00:00 bash</span><br />\r\n<span style="font-size:14px;"> 0 R&nbsp;&nbsp;1000&nbsp;&nbsp;3022&nbsp;&nbsp;2216&nbsp;&nbsp;0&nbsp;&nbsp;80&nbsp;&nbsp;&nbsp;0 -&nbsp;&nbsp;1496 -&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pts/0&nbsp;&nbsp;&nbsp;&nbsp;00:00:00 ps</span><br />\r\n<span style="font-size:14px;"> 相关解释：F&nbsp;&nbsp;进程标志，4为超级用户。S&nbsp;&nbsp;进程状态。PID 和 PPID 分别为进程ID和父进程ID。 C&nbsp;&nbsp;&nbsp;表示CPU使用的资源百分比。PRI&nbsp;&nbsp;优先级 。 NI nice值。ADDR&nbsp;&nbsp;&nbsp;核心功能，指出该进程在内存的哪一部分，如果运行的进程，一般是 - 。SZ 用掉内存的大小。 WCHAN&nbsp;&nbsp;当前进程是否在运行，- 表示在运行。 TIME 用掉CPU的时间。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> ps aux：列出当前在内存中的进程。</span><br />\r\n<p>\r\n	<span style="font-size:14px;">ps -lA：以ps -l的形式列出所有的进程。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ps -ajxf ：以类似进程树的形式显示。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<span style="font-size:14px;">xiaozhe@ubuntu:~$ ps aux | head -n 3</span><br />\r\n<span style="font-size:14px;"> USER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PID %CPU %MEM&nbsp;&nbsp;&nbsp;&nbsp;VSZ&nbsp;&nbsp;&nbsp;RSS TTY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;STAT START&nbsp;&nbsp;&nbsp;TIME COMMAND</span><br />\r\n<span style="font-size:14px;"> root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;0.0&nbsp;&nbsp;0.0&nbsp;&nbsp;&nbsp;2892&nbsp;&nbsp;1684 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ss&nbsp;&nbsp;&nbsp;09:28&nbsp;&nbsp;&nbsp;0:00 /sbin/init</span><br />\r\n<span style="font-size:14px;"> root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;0.0&nbsp;&nbsp;0.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S&nbsp;&nbsp;&nbsp;&nbsp;09:28&nbsp;&nbsp;&nbsp;0:00 [kthreadd]</span><br />\r\n<span style="font-size:14px;"> 相关解释：USER&nbsp;&nbsp;属于哪个用户帐号。PID&nbsp;&nbsp;该进程号码。%CPU 进程占用CPU资源百分比。%MEM 进程占用物理内存的百分比。VSZ 该进程占用虚拟内存量（KB）。RSS 该进程占用的固定内存量（KB）。STAT R正在运行，S 睡眠，T 检测或停止，Z 僵尸程序。START 被触发启动的时间。TIME 实际使用CPU运行时间。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> top：进程观察工具</span><br />\r\n<span style="font-size:14px;"> -d ：后接秒数，就是整个进程画面更新的秒数，默认5秒。</span><br />\r\n<span style="font-size:14px;"> -b：以批处理文件执行top,还有更多的参数，通常会搭配数据流重导向，将批处理输出为文件。</span><br />\r\n<span style="font-size:14px;"> -n：与-b搭配，意义是需要进行几次top的输出结果。</span><br />\r\n<span style="font-size:14px;"> -p：指定某些个PID进行观察检测。</span><br />\r\n<span style="font-size:14px;"> 在top执行过程中可以使用的按键命令。</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?：显示在top中可以输入的按键命令</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;P：按CPU使用资源排序</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;M：按内存使用资源排序</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N：按PID来排序</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T：按该进程使用的CPU时间积累（TIME+）排序</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k：给某个PID一个信号&nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r：给某个PID重新确定一个值（NI&nbsp;&nbsp;&nbsp;nice值，与PR一样，都是越小越早执行）</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 例：将top执行2次并输入到文件&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top -b -n 2 &gt; /tmp/top.txt</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;仅观察某个特定的PID(如4134) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top -d 2 -p4134</span><br />\r\n<br />\r\n<span style="font-size:14px;"> pstree：进程树，-A 各进程树之间以ASCII字符来链接，-p 同时列出每个进程的PID ，-u 同时列出每个进程的所属帐号名称。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 系统资源观察:</span><br />\r\n<p>\r\n	<span style="font-size:14px;">free:显示系统内存容量</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">uname ： -a 显示所有系统基本信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">uptime：显示系统开机时间及负载率</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">netstat：-a将当前系统上所有的联机，监听，套接字数据都列出来，-t列出tcp网络包数据，-u列出udp网络包数据，-n不以进程名以端口号来显示，-l列出当前正在网络监听的服务，-p列出网络服务的进程PID。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">dmesg：输出所有核心开机时的信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">进程的执行顺序：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Pri(new) = Pri(old)+Ni(nice) 值越小优先级越高，一般Pri是系统给的，而NI是给用户的可调的（top命令中的r即可）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般用户的NICE值范围所0～19，而root的NICE值范围为-20~19</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">nice [-n] command：主要是用root用户工作，给一个 -19～20的值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：用root给一个nice值为-5 的vim并观察其进程。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">root@ubuntu:~# nice -n -5 vi &amp; 然后用ps -l 查看。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">renice [number] PID：将某个PID的nice值改为number</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如 renice 10 18852 将PID为18852的nice值改为了10</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">特殊文件与进程</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">SUID，SGID的权限。可以用find / -perm +6000找到系统中的所有此类文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/proc/*：因为进程都是在内存中，而内存中的数据又写值proc中，各个进程的PID以目录的形似存在/proc中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查询已打开文件或已执行进程打开的文件：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fuser [-ki] [-signal] file/dir：-k表示找出使用该文件或目录PID并试图将SIGNKILL信号传给PID。-i与-k配合，在删除PID之前要求用户确认。-signal如-1～-15等，若不添加默认为Signkill（-9）.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">xiaozhe@ubuntu:~$ fuser .&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;找出当前目录的使用（结果很多，例如1491c）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">xiaozhe@ubuntu:~$ ps aux | grep 1491&nbsp;&nbsp;&nbsp;&nbsp;通过PID找出此进程</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fuser执行结果中：c代表在当前目录下，e代表可执行，f是一个打开的文件，r表示根目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：找出/var下属于FIFO类型的文件，并找出访问该文件的进程。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">步骤1：find /var -type p</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">步骤2：fuser /var/lib/urandom/random-seed 加入使用该文件的进程PID为（1666和1667）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">步骤3：ps aux | egrep ''(1666 | 1667)''&nbsp;&nbsp;&nbsp;得到信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">同上，如果要删除PID，则：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fuser -ki&nbsp;&nbsp;/var/lib/urandom/random-seed</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fuser是通过文件查找使用它的进程，而lsof是通过进程查找使用的文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;lsof [-Uu] [+d]：-a需要多项数据同时成立才显示结果。-U仅列出类Unix系统的套接字文件类型。-u后面接用户名，列出该用户相关进程所打开的文件。+d后接目录，找出某个目录下已打开的文件。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">pidof [-sx] programe_name：-s仅列出一个PID而不列出所有的PID。-x同时列出该程序名（programe_name）可能的PPID进程的PID。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：列出init和syslogd这两个进程的PID</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">pidof init syslogd</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">pidof -x bash 找出以bash为PPID的几个主要的PID</span>\r\n</p>', 10, '笔记,ubuntu', 1, 0, 1, '2013-03-10 12:57:51'),
(224, '我的linux学习10 例行命令 cron', '<p>\r\n	<span style="font-size:14px;">cron：例行任务，工作持续干下去。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">at：工作执行一次就从linux系统任务分配中取消。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">首先开启atd服务（使用root权限）：/etc/init.d/atd restart</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置开机启动：chkconfig --level 35 atd on</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">先找/etc/at.allow，写作这个文件中的用户才能使用at,如果没有这个文件则找/etc/at.deny,写在里面的用户不能使用at，如果2个文件都没有，则只能root使用at。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">at [-m] TIME：-m表示在工作完成后以电子邮件的方式通知用户。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">TIME的格式：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;HH：MM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ex&gt; 04:00&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在今日的4点开始，若超过，则明天4点开始</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;HH：MM YYYY-MM-DD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ex&gt; 04:00 2012-02-22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;强制规定在具体时间开始</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;HH：MM[am| pm][Month] [Date]&nbsp;&nbsp;ex&gt; 04pm December 3 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;强制具体时间开始&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;HH：MM[am | pm] + number [minutes | hours | days | weeks ]&nbsp;&nbsp;&nbsp;ex&gt; now + 5 minutes&nbsp;&nbsp;&nbsp;或者ex&gt; 04pm + 3 days</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例：at now + 3 minutes</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&gt; /bin/ls -l /etc &gt; /tmp/etc.back</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&gt; &nbsp;&nbsp;&nbsp;&nbsp;（使用crtl+d结束）</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例：at 23:00 2012-02-22</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&gt; /bin/sync</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&gt;/bin/sync</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&gt;/sbin/shutdown -h now</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">atq：使用atq查看需要执行的任务列表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">atrm [jobnumber]：删除工作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">循环执行的例行命令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1 首先启动crond&nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;service crond start</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;或者</span><br />\r\n<span style="font-size:14px;"> &nbsp;/etc/rc.d/init.d/crond&nbsp;</span><br />\r\n<span style="font-size:14px;"> 2 检测crond 是否被启动</span><br />\r\n<span style="font-size:14px;"> &nbsp;ps aux |grep crond&nbsp;</span><br />\r\n<span style="font-size:14px;"> 3 还有一点就是你的cron配置的时候要用绝对路径，</span><br />\r\n<span style="font-size:14px;"> */1 * * * * /bin/echo "haha" &gt;&gt; /tmp/hello.txt&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">export EDITOR=vim 改变默认编辑器为vim</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crontab：为了安全，同at一样有/etc/cron.allow和/etc/cron.deny。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crontab [-u username] [-l | -e | -r] ： -u表示只有root才能执行这个任务，即帮其他用户建立/删除crontab，-e编辑crontab工作内容，-l查看crontab工作内容，-r删除crontab的工作内容。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当使用crontab建立一个任务后（一行代表一个任务）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分 时 日 月 周 命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">0&nbsp;&nbsp;12&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ls -l /etc &gt; /tmp/etc.back&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表示每天12点备份一次etc目录到tmp中，（注，0或7都可以表示星期天），还有一些特殊字符如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">*： 表示任何时间都接受</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">,：表示分隔时段，举例要执行的工作所3点和6点，则&nbsp;&nbsp;0 3,6 * * * command</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-：表示一段时间范围内，如8点到12点之间，每小时的20分都进行一工作，则 20 8-12 * * * command</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/n：表示每隔n单位时间，例如每5分钟进行一次，则 */5 * * * * command</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<span style="font-size:14px;">*/2 * * * * /bin/echo "xiaozhe" &gt;&gt; /tmp/xiaozhe.txt</span><br />\r\n<span style="font-size:14px;"> */2 * * * * /bin/echo "hello" &gt;&gt; /tmp/hello.txt</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 如果是系统的例行命令，可以直接修改/etc/crontab中的内容</span><br />\r\n<br />\r\n<span style="font-size:14px;"> /etc/crontab中支持命令类型和目录规划。</span><br />\r\n<span style="font-size:14px;"> 执行命令类型如上所示：</span><br />\r\n<span style="font-size:14px;"> 执行目录规划如下：</span><br />\r\n<span style="font-size:14px;"> */2 * * * * root run-parts /etc/cron.min&nbsp;&nbsp;&nbsp;相当与每2分钟执行这个目录下的所有可执行文件，其中run-parts相当与一个文件，如果不需要执行整个目录，则可：</span><br />\r\n<span style="font-size:14px;"> */5 * * * * root /bin/mrtg /etc/mrtg/mrtg.cfg 每5分钟检测一次流量</span><br />\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一些使用的优化和特性：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假如2个项目或更多都在5分钟执行，同时执行则会造成系统负载过重，有如下办法解决,vim /etc/crontab</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1,6,11,16,21,26,31,36,41,46,51,56 * * * * root command1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2,7,12,17,22,27,32,37,42,47,52,57 * * * * root command2</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">取消不需要的输出项目，直接重导向丢到/dev/null中</span>\r\n</p>', 10, '笔记,ubuntu', 1, 0, 1, '2013-03-10 12:58:16'),
(225, 'Nginx configure 选项', '<p>\r\n	<span style="font-size:14px;">configure&nbsp;支持下面的选项：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--prefix=&nbsp;-&nbsp;Nginx安装路径。如果没有指定，默认为&nbsp;/usr/local/nginx。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--sbin-path=&nbsp;-&nbsp;Nginx可执行文件安装路径。只能安装时指定，如果没有指定，默认为/sbin/nginx。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--conf-path=&nbsp;-&nbsp;在没有给定-c选项下默认的nginx.conf的路径。如果没有指定，默认为/conf/nginx.conf。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--pid-path=&nbsp;-&nbsp;在nginx.conf中没有指定pid指令的情况下，默认的nginx.pid的路径。如果没有指定，默认为&nbsp;/logs/nginx.pid。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--lock-path=&nbsp;-&nbsp;nginx.lock文件的路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--error-log-path=&nbsp;-&nbsp;在nginx.conf中没有指定error_log指令的情况下，默认的错误日志的路径。如果没有指定，默认为&nbsp;/logs/error.log。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--http-log-path=&nbsp;-&nbsp;在nginx.conf中没有指定access_log指令的情况下，默认的访问日志的路径。如果没有指定，默认为&nbsp;/logs/access.log。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--user=&nbsp;-&nbsp;在nginx.conf中没有指定user指令的情况下，默认的nginx使用的用户。如果没有指定，默认为&nbsp;nobody。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--group=&nbsp;-&nbsp;在nginx.conf中没有指定user指令的情况下，默认的nginx使用的组。如果没有指定，默认为&nbsp;nobody。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--builddir=DIR&nbsp;-&nbsp;指定编译的目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-rtsig_module&nbsp;-&nbsp;启用&nbsp;rtsig&nbsp;模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-select_module&nbsp;--without-select_module&nbsp;-&nbsp;Whether&nbsp;or&nbsp;not&nbsp;to&nbsp;enable&nbsp;the&nbsp;select&nbsp;module.&nbsp;This&nbsp;module&nbsp;is&nbsp;enabled&nbsp;by&nbsp;default&nbsp;if&nbsp;a&nbsp;more&nbsp;suitable&nbsp;method&nbsp;such&nbsp;as&nbsp;kqueue,&nbsp;epoll,&nbsp;rtsig&nbsp;or&nbsp;/dev/poll&nbsp;is&nbsp;not&nbsp;discovered&nbsp;by&nbsp;configure.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//允许或不允许开启SELECT模式，如果&nbsp;configure&nbsp;没有找到更合适的模式，比如：kqueue(sun&nbsp;os),epoll&nbsp;(linux&nbsp;kenel&nbsp;2.6+),&nbsp;rtsig(实时信号)或者/dev/poll(一种类似select的模式，底层实现与SELECT基本相&nbsp;同，都是采用轮训方法)&nbsp;SELECT模式将是默认安装模式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-poll_module&nbsp;--without-poll_module&nbsp;-&nbsp;Whether&nbsp;or&nbsp;not&nbsp;to&nbsp;enable&nbsp;the&nbsp;poll&nbsp;module.&nbsp;This&nbsp;module&nbsp;is&nbsp;enabled&nbsp;by&nbsp;default&nbsp;if&nbsp;a&nbsp;more&nbsp;suitable&nbsp;method&nbsp;such&nbsp;as&nbsp;kqueue,&nbsp;epoll,&nbsp;rtsig&nbsp;or&nbsp;/dev/poll&nbsp;is&nbsp;not&nbsp;discovered&nbsp;by&nbsp;configure.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_ssl_module&nbsp;-&nbsp;Enable&nbsp;ngx_http_ssl_module.&nbsp;Enables&nbsp;SSL&nbsp;support&nbsp;and&nbsp;the&nbsp;ability&nbsp;to&nbsp;handle&nbsp;HTTPS&nbsp;requests.&nbsp;Requires&nbsp;OpenSSL.&nbsp;On&nbsp;Debian,&nbsp;this&nbsp;is&nbsp;libssl-dev.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//开启HTTP&nbsp;SSL模块，使NGINX可以支持HTTPS请求。这个模块需要已经安装了OPENSSL，在DEBIAN上是libssl-dev</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_realip_module&nbsp;-&nbsp;启用&nbsp;ngx_http_realip_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_addition_module&nbsp;-&nbsp;启用&nbsp;ngx_http_addition_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_sub_module&nbsp;-&nbsp;启用&nbsp;ngx_http_sub_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_dav_module&nbsp;-&nbsp;启用&nbsp;ngx_http_dav_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_flv_module&nbsp;-&nbsp;启用&nbsp;ngx_http_flv_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_stub_status_module&nbsp;-&nbsp;启用&nbsp;"server&nbsp;status"&nbsp;页</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_charset_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_charset_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_gzip_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_gzip_module.&nbsp;如果启用，需要&nbsp;zlib&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_ssi_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_ssi_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_userid_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_userid_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_access_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_access_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_auth_basic_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_auth_basic_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_autoindex_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_autoindex_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_geo_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_geo_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_map_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_map_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_referer_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_referer_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_rewrite_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_rewrite_module.&nbsp;如果启用需要&nbsp;PCRE&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_proxy_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_proxy_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_fastcgi_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_fastcgi_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_memcached_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_memcached_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_limit_zone_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_limit_zone_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_empty_gif_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_empty_gif_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_browser_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_browser_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http_upstream_ip_hash_module&nbsp;-&nbsp;禁用&nbsp;ngx_http_upstream_ip_hash_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-http_perl_module&nbsp;-&nbsp;启用&nbsp;ngx_http_perl_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-perl_modules_path=PATH&nbsp;-&nbsp;指定&nbsp;perl&nbsp;模块的路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-perl=PATH&nbsp;-&nbsp;指定&nbsp;perl&nbsp;执行文件的路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--http-log-path=PATH&nbsp;-&nbsp;Set&nbsp;path&nbsp;to&nbsp;the&nbsp;http&nbsp;access&nbsp;log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--http-client-body-temp-path=PATH&nbsp;-&nbsp;Set&nbsp;path&nbsp;to&nbsp;the&nbsp;http&nbsp;client&nbsp;request&nbsp;body&nbsp;temporary&nbsp;files</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--http-proxy-temp-path=PATH&nbsp;-&nbsp;Set&nbsp;path&nbsp;to&nbsp;the&nbsp;http&nbsp;proxy&nbsp;temporary&nbsp;files</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--http-fastcgi-temp-path=PATH&nbsp;-&nbsp;Set&nbsp;path&nbsp;to&nbsp;the&nbsp;http&nbsp;fastcgi&nbsp;temporary&nbsp;files</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-http&nbsp;-&nbsp;禁用&nbsp;HTTP&nbsp;server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-mail&nbsp;-&nbsp;启用&nbsp;IMAP4/POP3/SMTP&nbsp;代理模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-mail_ssl_module&nbsp;-&nbsp;启用&nbsp;ngx_mail_ssl_module</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-cc=PATH&nbsp;-&nbsp;指定&nbsp;C&nbsp;编译器的路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-cpp=PATH&nbsp;-&nbsp;指定&nbsp;C&nbsp;预处理器的路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-cc-opt=OPTIONS&nbsp;-&nbsp;Additional&nbsp;parameters&nbsp;which&nbsp;will&nbsp;be&nbsp;added&nbsp;to&nbsp;the&nbsp;variable&nbsp;CFLAGS.&nbsp;With&nbsp;the&nbsp;use&nbsp;of&nbsp;the&nbsp;system&nbsp;library&nbsp;PCRE&nbsp;in&nbsp;FreeBSD,&nbsp;it&nbsp;is&nbsp;necessary&nbsp;to&nbsp;indicate&nbsp;--with-cc-opt="-I&nbsp;/usr/local/include".&nbsp;If&nbsp;we&nbsp;are&nbsp;using&nbsp;select()&nbsp;and&nbsp;it&nbsp;is&nbsp;necessary&nbsp;to&nbsp;increase&nbsp;the&nbsp;number&nbsp;of&nbsp;file&nbsp;descriptors,&nbsp;then&nbsp;this&nbsp;also&nbsp;can&nbsp;be&nbsp;assigned&nbsp;here:&nbsp;--with-cc-opt="-D&nbsp;FD_SETSIZE=2048".</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-ld-opt=OPTIONS&nbsp;-&nbsp;Additional&nbsp;parameters&nbsp;passed&nbsp;to&nbsp;the&nbsp;linker.&nbsp;With&nbsp;the&nbsp;use&nbsp;of&nbsp;the&nbsp;system&nbsp;library&nbsp;PCRE&nbsp;in&nbsp;FreeBSD,&nbsp;it&nbsp;is&nbsp;necessary&nbsp;to&nbsp;indicate&nbsp;--with-ld-opt="-L&nbsp;/usr/local/lib".</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-cpu-opt=CPU&nbsp;-&nbsp;为特定的&nbsp;CPU&nbsp;编译，有效的值包括：pentium,&nbsp;pentiumpro,&nbsp;pentium3,&nbsp;pentium4,&nbsp;athlon,&nbsp;opteron,&nbsp;amd64,&nbsp;sparc32,&nbsp;sparc64,&nbsp;ppc64</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--without-pcre&nbsp;-&nbsp;禁止&nbsp;PCRE&nbsp;库的使用。同时也会禁止&nbsp;HTTP&nbsp;rewrite&nbsp;模块。在&nbsp;"location"&nbsp;配置指令中的正则表达式也需要&nbsp;PCRE&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-pcre=DIR&nbsp;-&nbsp;指定&nbsp;PCRE&nbsp;库的源代码的路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-pcre-opt=OPTIONS&nbsp;-&nbsp;Set&nbsp;additional&nbsp;options&nbsp;for&nbsp;PCRE&nbsp;building.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-md5=DIR&nbsp;-&nbsp;Set&nbsp;path&nbsp;to&nbsp;md5&nbsp;library&nbsp;sources.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-md5-opt=OPTIONS&nbsp;-&nbsp;Set&nbsp;additional&nbsp;options&nbsp;for&nbsp;md5&nbsp;building.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-md5-asm&nbsp;-&nbsp;Use&nbsp;md5&nbsp;assembler&nbsp;sources.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-sha1=DIR&nbsp;-&nbsp;Set&nbsp;path&nbsp;to&nbsp;sha1&nbsp;library&nbsp;sources.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-sha1-opt=OPTIONS&nbsp;-&nbsp;Set&nbsp;additional&nbsp;options&nbsp;for&nbsp;sha1&nbsp;building.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-sha1-asm&nbsp;-&nbsp;Use&nbsp;sha1&nbsp;assembler&nbsp;sources.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-zlib=DIR&nbsp;-&nbsp;Set&nbsp;path&nbsp;to&nbsp;zlib&nbsp;library&nbsp;sources.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-zlib-opt=OPTIONS&nbsp;-&nbsp;Set&nbsp;additional&nbsp;options&nbsp;for&nbsp;zlib&nbsp;building.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-zlib-asm=CPU&nbsp;-&nbsp;Use&nbsp;zlib&nbsp;assembler&nbsp;sources&nbsp;optimized&nbsp;for&nbsp;specified&nbsp;CPU,&nbsp;valid&nbsp;values&nbsp;are:&nbsp;pentium,&nbsp;pentiumpro</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-openssl=DIR&nbsp;-&nbsp;Set&nbsp;path&nbsp;to&nbsp;OpenSSL&nbsp;library&nbsp;sources</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-openssl-opt=OPTIONS&nbsp;-&nbsp;Set&nbsp;additional&nbsp;options&nbsp;for&nbsp;OpenSSL&nbsp;building</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--with-debug&nbsp;-&nbsp;启用调试日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--add-module=PATH&nbsp;-&nbsp;Add&nbsp;in&nbsp;a&nbsp;third-party&nbsp;module&nbsp;found&nbsp;in&nbsp;directory&nbsp;PATH</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在不同版本间，选项可能会有些许变化，请总是使用&nbsp;./configure&nbsp;--help&nbsp;命令来检查一下当前的选项列表</span>\r\n</p>', 16, 'nginx', 1, 0, 1, '2013-03-10 12:58:47'),
(226, '2 Nginx服务器的安装与配置', '<p>\r\n	<span style="font-size:14px;">编译Nginx需要安装GCC编译器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;sudo&nbsp;apt-get&nbsp;install&nbsp;autoconf&nbsp;automake&nbsp;build-essential</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">模块依赖性：nginx的一些模块需要第三方库支持，例如gzip模块需要zlib库，rewrite模块需要pcre库，ssl功能需要openssl库等。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;sudo&nbsp;apt-get&nbsp;install&nbsp;zlib1g&nbsp;openssl&nbsp;libssl-dev&nbsp;libpcre3&nbsp;libpcre3-dev&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx启动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;./nginx&nbsp;-c&nbsp;/usr/local/nginx/conf/nginx.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">参数-c指定了配置文件的路径，如果不加-c参数，Nginx会默认加载其安装目录的下的conf子目录中的nginx.conf文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx关闭</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们使用shell&gt;ps&nbsp;aux&nbsp;|&nbsp;grep&nbsp;nginx&nbsp;可以看到进程中，有一个为master&nbsp;process&nbsp;表示主进程,其他为worker&nbsp;process&nbsp;表示为子进程.&nbsp;然后直接使用kill&nbsp;进程号即可.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx的平滑重启配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果改变了Nginx的配置文件(nginx.conf)，为了确认配置文件的语法是否正确，我们可以通过下面命令进行判断：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;/usr/local/nginx/sbin/nginx&nbsp;-t&nbsp;-c&nbsp;/usr/local/nginx/conf/nginx.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果配置文件正确，我们可以使用shell&gt;kill&nbsp;-HUP&nbsp;主进程号;&nbsp;命令来执行，它会首先解析配置文件，如果成功，就应用新的配置文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx的信号控制</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx支持以下几种信号：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">TERM,INT&nbsp;快速关闭;&nbsp;QUIT&nbsp;从容关闭;&nbsp;HUP&nbsp;平滑重启;&nbsp;USR1&nbsp;重新打开日志文件，在切割日志时用途大;&nbsp;USR2&nbsp;平滑升级可执行程序;&nbsp;WINCH&nbsp;从容关闭工作进程;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Nginx的平滑升级</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当需要将正在运行中的Nignx升级，添加或删除模块时，可以在不中断服务的情况下进行更新，步骤如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.使用新的可执行程序替换旧的可执行文件，如果是编译安装，则可将新版本的编译安装到旧版本的Nginx安装路径中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.发送指令&nbsp;&nbsp;shell&gt;kill&nbsp;-USR2&nbsp;旧版本进程号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.旧版本会自动将进程号重名命为.oldbin，然后执行新版本的Nginx可执行程序。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.发送信号逐步停止&nbsp;&nbsp;shell&gt;kill&nbsp;-WINCH&nbsp;旧版本进程号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.旧版本慢慢处理所有链接并关闭</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.现在我们可以决定使用新版本还是旧版本&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;kill&nbsp;-HUP&nbsp;旧进程号&nbsp;&nbsp;&nbsp;Nginx不重载配置文件启动它的工作进程</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;kill&nbsp;-QUIT&nbsp;新进程号&nbsp;&nbsp;&nbsp;从容关闭其工作进程</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;kill&nbsp;-TERM&nbsp;新进程号&nbsp;&nbsp;&nbsp;强制退出</span>\r\n</p>', 16, '笔记,nginx', 1, 0, 1, '2013-03-10 12:59:07'),
(227, '在Ubuntu或者Debian中安装PCRE库 ', '<span style="font-size:14px;">我需要编译一些应用程序，同时也需要Perl 5 兼容正则表达式库（PCRE）。在CentOs下，我可以使用一个叫pcre-devel，但是Debian可就不一样了。我怎样在Debian/Ubuntu&nbsp;</span><a href="http://www.2cto.com/os/linux/" target="_blank"><span style="font-size:14px;">Linux</span></a><span style="font-size:14px;">下安装pcre-devel呢？</span><br />\r\n<br />\r\n<span style="font-size:14px;"> Perl-compatible regular expression library. PCRE has its own native API, but a set of “wrapper” functions that are based on the POSIX API are also supplied in the library libpcreposix. Note that this just provides a POSIX calling interface to PCRE: the regular expressions themselves still follow Perl syntax and semantics. The header file for the POSIX-style functions is called pcreposix.h. To install PCRE, type thy following command:</span><br />\r\n<br />\r\n<span style="font-size:14px;"> Perl兼容正则表达式库（PCRE）有自己原生API，但是这一系列封装函是基于POSIX API，而POSIX API也支持libpcreposix库。这样只要提供一个POSIX的调用接口给PCRE后，正则表达式本身仍遵循Perl的语法和语义。POSIX-style的头文件是pcreposix.h，所以，安装PCRE，需要运行以下命令。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> sudo apt-get update&nbsp;</span><br />\r\n<span style="font-size:14px;"> sudo apt-get install libpcre3 libpcre3-dev&nbsp;</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 你可能还需要安装</span><br />\r\n<span style="font-size:14px;"> sudo apt-get install openssl libssl-dev</span>', 10, 'pcre,ubuntu,linux', 1, 0, 1, '2013-03-10 12:59:34');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(228, 'eval解析JSON中的注意点', '<p>\r\n	<span style="font-size:14px;">在JS中将JSON的字符串解析成JSON数据格式，一般有两种方式：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.一种为使用eval_r()函数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2. 使用Function对象来进行返回解析。</span>\r\n</p>\r\n<h4>\r\n	<span style="font-size:14px;">使用eval函数来解析，并且使用jquery的each方法来遍历</span>\r\n</h4>\r\n<p>\r\n	<span style="font-size:14px;">用jquery解析JSON数据的方法,作为jquery异步请求的传输对象，jquery请求后返回的结果是json对象,这里考虑的都是服务器 返回JSON形式的字符串的形式，对于利用JSONObject等插件封装的JSON对象，与此亦是大同小异，这里不再做说明。</span><br />\r\n<span style="font-size:14px;"> 这里首先给出JSON字符串集，字符串集如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">代码如下:</span><br />\r\n<span style="font-size:14px;"> var data="</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> root:</span><br />\r\n<span style="font-size:14px;"> [</span><br />\r\n<span style="font-size:14px;"> {name:''1'',value:''0''},</span><br />\r\n<span style="font-size:14px;"> {name:''6101'',value:''北京市''},</span><br />\r\n<span style="font-size:14px;"> {name:''6102'',value:''天津市''},</span><br />\r\n<span style="font-size:14px;"> {name:''6103'',value:''上海市''},</span><br />\r\n<span style="font-size:14px;"> {name:''6104'',value:''重庆市''},</span><br />\r\n<span style="font-size:14px;"> {name:''6105'',value:''渭南市''},</span><br />\r\n<span style="font-size:14px;"> {name:''6106'',value:''延安市''},</span><br />\r\n<span style="font-size:14px;"> {name:''6107'',value:''汉中市''},</span><br />\r\n<span style="font-size:14px;"> {name:''6108'',value:''榆林市''},</span><br />\r\n<span style="font-size:14px;"> {name:''6109'',value:''安康市''},</span><br />\r\n<span style="font-size:14px;"> {name:''6110'',value:''商洛市''}</span><br />\r\n<span style="font-size:14px;"> ]</span><br />\r\n<span style="font-size:14px;"> }";</span><br />\r\n<span style="font-size:14px;"> 这里以jquery异步获取的数据类型——json对象和字符串为依据，分别介绍两种方式获取到的结果处理方式。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.对于服务器返回的JSON字符串，如果jquery异步请求没做类型说明，或者以字符串方式接受，那么需要做一次对象化处理，方式不是太麻烦，就是将该字符串放于eval_r()中执行一次。这种方式也适合以普通javascipt方式获取json对象，以下举例说明：</span>\r\n</p>\r\n<h3>\r\n	<span style="font-size:14px;">var dataObj=eval_r("("+data+")");//转换为json对象</span>\r\n</h3>\r\n<p>\r\n	<img src="http://images.cnblogs.com/cnblogs_com/myjavawork/201103/201103100015284479.png" alt="Red rose" title="eval解析JSON中的注意点" /><span style="font-size:14px;">为什么要 eval这里要添加 “("("+data+")");//”呢？</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">原因在于：eval本身的问题。 由于json是以”{}”的方式来开始以及结束的，在JS中，它会被当成一个语句块来处理，所以必须强制性的将它转换成一种表达式。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">加上圆括号的目的是迫使eval函数在处理JavaScript代码的时候强制将括号内的表达式（expression）转化为对象，而不是作为语 句（statement）来执行。举一个例子，例如对象字面量{}，如若不加外层的括号，那么eval会将大括号识别为JavaScript代码块的开始 和结束标记，那么{}将会被认为是执行了一句空语句。所以下面两个执行结果是不同的：</span><br />\r\n<span style="font-size:14px;"> alert(eval_r("{}"); // return undefined</span><br />\r\n<span style="font-size:14px;"> alert(eval_r("({})");// return object[Object]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于这种写法，在JS中，可以到处看到。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如: (function()) {}();&nbsp;&nbsp;做闭包操作时等。</span>\r\n</p>\r\n<hr />\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> alert(dataObj.root.length);//输出root的子对象数量</span><br />\r\n<span style="font-size:14px;"> $.each(dataObj.root,fucntion(idx,item){</span><br />\r\n<span style="font-size:14px;"> if(idx==0){</span><br />\r\n<span style="font-size:14px;"> return true;</span><br />\r\n<span style="font-size:14px;"> }</span><br />\r\n<span style="font-size:14px;"> //输出每个root子对象的名称和值</span><br />\r\n<span style="font-size:14px;"> alert("name:"+item.name+",value:"+item.value);</span><br />\r\n<span style="font-size:14px;"> })</span><br />\r\n<span style="font-size:14px;"> 注：对于一般的js生成json对象，只需要将$.each()方法替换为for语句即可，其他不变。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 2.对于服务器返回的JSON字符串，如果jquery异步请求将type（一般为这个配置属性）设为“json”，或者利 用$.getJSON()方法获得服务器返回，那么就不需要eval（）方法了，因为这时候得到的结果已经是json对象了，只需直接调用该对象即可，这 里以$.getJSON方法为例说明数据处理方法：</span><br />\r\n<span style="font-size:14px;"> $.getJSON("http://www.phpzixue.cn/",{param:"gaoyusi"},function(data){</span><br />\r\n<span style="font-size:14px;"> //此处返回的data已经是json对象</span><br />\r\n<span style="font-size:14px;"> //以下其他操作同第一种情况</span><br />\r\n<span style="font-size:14px;"> $.each(data.root,function(idx,item){</span><br />\r\n<span style="font-size:14px;"> if(idx==0){</span><br />\r\n<span style="font-size:14px;"> return true;//同countinue，返回false同break</span><br />\r\n<span style="font-size:14px;"> }</span><br />\r\n<span style="font-size:14px;"> alert("name:"+item.name+",value:"+item.value);</span><br />\r\n<span style="font-size:14px;"> });</span><br />\r\n<span style="font-size:14px;"> });</span><br />\r\n<span style="font-size:14px;"> 这里特别需要注意的是方式1中的eval_r()方法是动态执行其中字符串（可能是js脚本）的，这样很容易会造成系统的安全问题。所以可以采用一些规避了eval_r()的第三方客户端脚本库，比如JSON in JavaScript就提供了一个不超过3k的脚本库。</span>\r\n</p>\r\n<h3>\r\n	<span style="font-size:14px;">第二种解析方式就是使用Function对象来完成，它的典型应用就是在JQUERY中的AJAX方法下的success等对于返回数据data的解析</span>\r\n</h3>\r\n<p>\r\n	<span style="font-size:14px;">var json=''{"name":"CJ","age":18}'';</span><br />\r\n<br />\r\n<span style="font-size:14px;"> data =(new Function("","return "+json))();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">此时的data就是一个会解析成一个 json对象了.</span>\r\n</p>', 13, 'json', 1, 0, 1, '2013-03-10 12:59:58'),
(229, 'mongod修复 Mon Mar 317:46:37 [conn148] Assertion: 10295:getFile(): bad file number value', '<span style="font-size:14px;">查看mongodb.log日志，发现日志里有以下语句：</span><br />\r\n<span style="font-size:14px;"> ..............</span><br />\r\n<span style="font-size:14px;"> Mon Mar&nbsp;&nbsp;317:46:37 [conn148] Assertion: 10295:getFile(): bad file number value (corrupt db?): run repair</span><br />\r\n<span style="font-size:14px;"> ..............</span><br />\r\n<span style="font-size:14px;"> 翻译 为： 声明： getFile（）：错误的文件数值（损坏的数据库？）：运行修复</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 查了查mongodb的文档，遂用以下方法进程修复：</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 首先停止mongod服务，删除 mongodb.log，也可以备份一下</span><br />\r\n<span style="font-size:14px;"> # rm -rf&nbsp;&nbsp;/data/mongodb/mongodb.log</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 删除mongodb进程文件</span><br />\r\n<span style="font-size:14px;"> # rm -rf&nbsp;&nbsp;/mongodb/mongod.lock</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 进行修复</span><br />\r\n<span style="font-size:14px;"> # /usr/local/mongodb/bin/mongod --repair --dbpath /mongodb/ --repairpath /mongodb/repair/</span><br />\r\n<span style="font-size:14px;"> 临时修复目录一定要大，否则会出现磁盘容量不够的提示，无法修复</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 这时mongodb进程会在/mongodb/repair/ 目录下储存临时的修复数据库文件，文件目录为“$tmp_repairDatabase_0”所以此目录空间要足够大。</span><br />\r\n<span style="font-size:14px;"> 生产环境数据库为100G，修复进行了大约3个半小时，在“/mongodb/repair/$tmp_repairDatabase_0"目录下产生了近30G的数据库临时文件，修复完成后数据库临时文件自动清除。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 之后开启mongod服务，检查数据库，发现读写正常，mongodb.log没有出现错误。修复OK</span>', 17, 'mongodb', 1, 0, 1, '2013-03-10 13:02:27'),
(230, 'Ubuntu下安装MongoDB', '<p>\r\n	<span style="font-size:14px;">一、什么是MongoDB?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　NOSQL指的是非关系型的数据库。随着互联网web2.0网站的兴起，传统的关系数据库在应付web2.0网站，特别是超大规模和高并发的&nbsp;SNS类型的web2.0纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　MongoDB是一个基于分布式文件存储的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。MongoDB是&nbsp;一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bjson&nbsp;格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数&nbsp;据库单表查询的绝大部分功能，而且还支持对数据建立索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　它的特点是高性能、易部署、易使用，存储数据非常方便。主要功能特性有：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　面向集合存储，易存储对象类型的数据。</span><br />\r\n<span style="font-size:14px;"> 　　模式自由。</span><br />\r\n<span style="font-size:14px;"> 　　支持动态查询。</span><br />\r\n<span style="font-size:14px;"> 　　支持完全索引，包含内部对象。</span><br />\r\n<span style="font-size:14px;"> 　　支持查询。</span><br />\r\n<span style="font-size:14px;"> 　　支持复制和故障恢复。</span><br />\r\n<span style="font-size:14px;"> 　　使用高效的二进制数据存储，包括大型对象（如视频等）。</span><br />\r\n<span style="font-size:14px;"> 　　自动处理碎片，以支持云计算层次的扩展性</span><br />\r\n<span style="font-size:14px;"> 　　支持RUBY，PYTHON，JAVA，C++，PHP等多种语言。</span><br />\r\n<span style="font-size:14px;"> 　　文件存储格式为BSON（一种JSON的扩展）</span><br />\r\n<span style="font-size:14px;"> 　　可通过网络访问</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　所谓“面向集合”(Collenction-Orented)，意思是数据被分组存储在数据集中，被称为一个集合(Collenction)。&nbsp;每个集合在数据库中都有一个唯一的标识名，并且可以包含无限数目的文档。集合的概念类似关系型数据库(RDBMS)里的表(table)，不同的是它不需&nbsp;要定义任何模式(schema)。模式自由(schema-free)，意味着对于存储在mongodb数据库中的文件，我们不需要知道它的任何结构定&nbsp;义。如果需要的话，你完全可以把不同结构的文件存储在同一个数据库里。存储在集合中的文档，被存储为键-值对的形式。键用于唯一标识一个文档，为字符串类&nbsp;型，而值则可以是各中复杂的文件类型。我们称这种存储形式为BSON(Binary&nbsp;Serialized&nbsp;dOcument&nbsp;Format)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　MongoDB服务端可运行在Linux、Windows或OS&nbsp;X平台，支持32位和64位应用，默认端口为27017。推荐运行在64位平台，因为MongoDB在32位模式运行时支持的最大文件尺寸为2GB。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MongoDB把数据存储在文件中(默认路径为：/data/db)，为提高效率使用内存映射文件进行管理。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　二、安装MongoDB</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　A、通过二进制包安装</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">2</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">3</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">4</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">5</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">6</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">#下载安装包</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">wget&nbsp;http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-1.8.3.tgz</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">#解压安装包</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">tar&nbsp;-xvzf&nbsp;mongodb-linux-x86_64-1.8.3.tgz&nbsp;</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">#移动安装包到需要安装的目录并更名</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">mv&nbsp;mongodb-linux-x86_64-1.8.3&nbsp;/usr/local/mongodb</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">　　建立运行MongoDB的用户</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">useradd&nbsp;&nbsp;-M&nbsp;-s&nbsp;/sbin/nologin&nbsp;mongodb</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">　　建立数据目录</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">2</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">mkdir&nbsp;-p&nbsp;/var/local/mongodata</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">chown&nbsp;-R&nbsp;mongodb.mongodb&nbsp;/var/local/mongodata</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">　　注：MongoDB缺省的数据目录为/data/db/。如修改为其它不同路径，启动时需在–dbpath指出。也可以在主配置文件中指出。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　启动MongoDB服务</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">2</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">cd&nbsp;/usr/local/mongodb</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">bin/mongod&nbsp;--dbpath=/var/local/mongodata/&nbsp;&amp;</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B、通过软件包安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　由于Ubuntu官方APT源里的MongoDB版本比较旧，这里用MongoDB提供的APT源进行安装。要使用第三方源上的软件，除了在sources.list上添加对应的源外，还要有增加相应的公钥Key才能正确安装软件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　通过apt-key增加MongoDB的公钥Key到本地Key数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　增加软件源</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　官方提供了两个软件源，一个是SysV样式的启动脚本，一个是Upstart样式的启动脚本。我这里用的是SysV样式的，目前Upstart的工作原理还不熟悉。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　这里我把两种样式的软件源都给出来，请根据实际情况自行调整。</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">apt-key&nbsp;adv&nbsp;--keyserver&nbsp;keyserver.ubuntu.com&nbsp;--recv&nbsp;7F0CEB10</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">2</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">3</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">4</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">#SysV&nbsp;style</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">deb&nbsp;http://downloads-distro.mongodb.org/repo/debian-sysvinit&nbsp;dist&nbsp;10gen</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">#Upstart</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">deb&nbsp;http://downloads-distro.mongodb.org/repo/ubuntu-upstart&nbsp;dist&nbsp;10gen</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">　　编辑/etc/apt/sources.list,添加MongoDB软件源</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">2</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">3</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">4</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">vi&nbsp;/etc/apt/sources.list</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">#增加下面的软件源</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">deb&nbsp;http://downloads-distro.mongodb.org/repo/debian-sysvinit&nbsp;dist&nbsp;10gen</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　安装MongoDB</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">2</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">3</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">4</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">#更新本地软件包列表信息</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">apt-get&nbsp;update</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">#安装MongoDB</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">apt-get&nbsp;install&nbsp;mongodb-10gen</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">　　配置MongoDB</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　和二进制包安装不同，通过deb包安装的MongoDB会生成一个主配置文件(/etc/mongodb.conf)，如果要更改启动选项，可直接修改这个配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　启动MongoDB</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　APT方式安装好的包，安装完后缺省就已经启动了MongoDB。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　运行如下命令，查看MongoDB是否正常启动。</span>\r\n</p>\r\n<p>\r\n	<a href="http://www.ericbess.com/ericblog/2008/03/03/wp-codebox/#examples"><span style="font-size:14px;">?</span></a><a><span style="font-size:14px;">View&nbsp;Code</span></a><span style="font-size:14px;">&nbsp;BASH</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　</span><br />\r\n<span style="font-size:14px;"> 　　如果包含上面这行，说明MongoDB已正常启动。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　重启MongoDB</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">2</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">3</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">netstat&nbsp;-tlunp</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:27017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15048/mongod</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　C、一键安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　这是最简单的方法，如果初次安装建议用前二种方法，可以加强对Mongodb的熟悉。这种方法仅是为了批量安装方便而提供的。</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">/etc/init.d/mongodb&nbsp;restart</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">2</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">3</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">4</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">5</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">6</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">7</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">8</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">#下载安装脚本</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">wget&nbsp;http://www.mike.org.cn/wp-content/uploads/2011/08/install_mongodb_sh.zip</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">#解压安装脚本</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">unzip&nbsp;install_mongodb_sh.zip</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">#给脚本赋权</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">chmod&nbsp;755&nbsp;install_mongodb_sh</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">#执行脚本安装</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">./install_mongodb_sh</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　三、安装RockMongo</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　MongoDB本身只提供了一个字符界面的客户端工具，为了方便使用这里安装一个MongoDB的管理工具RockMongo。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　RockMongo是一个PHP5写的MongoDB管理工具。RockMongo主要特征:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">系统：可以配置多个主机，每个主机可以有多个管理员。需要管理员密码才能登入操作，确保数据库的安全性</span><br />\r\n<span style="font-size:14px;"> 　　服务器：服务器信息(WEB服务器,&nbsp;PHP,&nbsp;PHP.ini相关指令&nbsp;…)、状态、数据库信息</span><br />\r\n<span style="font-size:14px;"> 　　数据库：查询，创建和删除、执行命令和Javascript代码、统计信息</span><br />\r\n<span style="font-size:14px;"> 　　集合(相当于表)：强大的查询工具、读数据，写数据，更改数据，复制数据，删除数据、查询、创建和删除索引、清空数据、批量删除和更改数据、统计信息、GridFS、查看分块、下载文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　A、安装PHP环境</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　B、安装php_mongo扩展</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　RockMongo是通过php_mongo连接到MongoDB的，为了能让RockMongo正常运行，这里就必须先安装php_mongo扩展。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　安装php_mongo的方法有好几种，这里用比较方便的pecl方式进行安装。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　启用php_mongo扩展</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　编辑mongodb.ini文件</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">apt-get&nbsp;install&nbsp;apache2&nbsp;php5&nbsp;php5-dev&nbsp;php5-cli&nbsp;php-pear</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">　　重启Apache,让配置生效。</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">pecl&nbsp;install&nbsp;mongo</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">　　C、安装RockMongo</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　下载安装包</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">2</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">vi&nbsp;/etc/php5/apache2/conf.d/mongodb.ini</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">extension=mongo.so</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">　　解压到网站主目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　配置RockMongo</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">/etc/init.d/apache2&nbsp;restart</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">wget&nbsp;http://rock-php.googlecode.com/files/rockmongo-v1.1.0.zip</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">1</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">&nbsp;</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">unzip&nbsp;rockmongo-v1.1.0.zip&nbsp;-d&nbsp;/var/www/rockmongo</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">　　我这里没有更改默认端口，也就没什么要改的，默认就好。MongoDB缺省是没有进行认证的，如果加入了认证记得修改config.php相应的选项。</span><br />\r\n<span style="font-size:14px;"> 　　D、访问RockMongo</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　使用http://&lt;服务器IP&gt;/rockmongo/index.php访问RockMongo即可，初始用户名及密码均为admin。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置PHP里面的Mongo</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">vi&nbsp;/etc/php5/conf.d/mongodb.ini</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">extension=mongo.so</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mongo]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">;&nbsp;If&nbsp;the&nbsp;driver&nbsp;should&nbsp;reconnect&nbsp;to&nbsp;mongo</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongo.auto_reconnect&nbsp;=&nbsp;true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">;&nbsp;Whether&nbsp;to&nbsp;allow&nbsp;persistent&nbsp;connections</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongo.allow_persistent&nbsp;=&nbsp;On</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">;&nbsp;Maximum&nbsp;number&nbsp;of&nbsp;persistent&nbsp;connections&nbsp;(-1&nbsp;means&nbsp;unlimited)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongo.max_persistent&nbsp;=&nbsp;-1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">;&nbsp;Maximum&nbsp;number&nbsp;of&nbsp;links&nbsp;(persistent&nbsp;and&nbsp;non-persistent,&nbsp;-1&nbsp;means&nbsp;unlimited)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongo.max_connections&nbsp;=&nbsp;-1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">;&nbsp;Default&nbsp;host&nbsp;for&nbsp;mongo&nbsp;connection</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongo.default_host&nbsp;=&nbsp;www.example.com</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">;&nbsp;Default&nbsp;port&nbsp;for&nbsp;mongo&nbsp;database</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongo.default_port&nbsp;=&nbsp;42</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">;&nbsp;When&nbsp;saving&nbsp;files&nbsp;to&nbsp;the&nbsp;database,&nbsp;size&nbsp;of&nbsp;chunks&nbsp;to&nbsp;split&nbsp;them&nbsp;into</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongo.chunk_size&nbsp;=&nbsp;1024</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">;&nbsp;Specify&nbsp;an&nbsp;alternate&nbsp;character&nbsp;to&nbsp;$&nbsp;to&nbsp;use&nbsp;for&nbsp;special&nbsp;db&nbsp;functions&nbsp;($set,&nbsp;$push,&nbsp;$exists,&nbsp;etc.)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongo.cmd&nbsp;=&nbsp;"$"</span>\r\n</p>', 17, 'mongodb', 1, 0, 1, '2013-03-10 13:03:06'),
(231, 'PHP5.3 下安装ZendGuardLoader及eaccelerator 加速器', '<p>\r\n	<span style="font-size:14px;">PHP5.3下安装ZendGuardLoader及eaccelerator</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">原来安装的PHP加速软件是ZendOptimizer，这次重装系统，由于PHP版本升级到5.3，原来的ZendOptimizer只能支持到5.2，通过网上搜索，发现最新的PHP加速软件更名为ZendGuardLoader，以下是ZendGuardLoader及eaccelerator的安装步骤：</span><br />\r\n<span style="font-size:14px;"> 一、ZendGuardLoader5.5安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1、下载Zend&nbsp;Guard</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">32位&nbsp;http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-linux-glibc23-i386.tar.gz</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">64位&nbsp;http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-linux-glibc23-x86_64.tar.gz</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo&nbsp;mkdir&nbsp;/usr/zend</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">tar&nbsp;-zxvf&nbsp;ZendGuardLoader-php-5.3-linux-glibc23-i386.tar.gz</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Sudo&nbsp;cp&nbsp;ZendGuardLoader/php5.3.x/ZendGuardLoader.so&nbsp;/usr/zend/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo&nbsp;vim&nbsp;/etc/php5/apache/php.ini</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">最后加上：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">zend_extension=/usr/zend/ZendGuardLoader.so</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">zend_loader.enable=1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">zend_loader.disable_licensing=0</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">zend_loader.obfuscation_level_support=3</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">zend_loader.license_path=</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">重启web服务器软件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二、eaccelerator安装</span><br />\r\n<span style="font-size:14px;"> mkdir&nbsp;/tmp/eaccelerator</span><br />\r\n<span style="font-size:14px;"> chmod&nbsp;0777&nbsp;/tmp/eaccelerator</span><br />\r\n<span style="font-size:14px;"> wget&nbsp;http://bart.eaccelerator.net/source/0.9.6.1/eaccelerator-0.9.6.1.tar.bz2</span><br />\r\n<span style="font-size:14px;"> tar&nbsp;xvjf&nbsp;eaccelerator-0.9.6.1.tar.bz2</span><br />\r\n<span style="font-size:14px;"> cd&nbsp;eaccelerator-0.9.6.1</span><br />\r\n<span style="font-size:14px;"> cp&nbsp;control.php&nbsp;/var/www/control.php&nbsp;//复制控制程序到网站目录，通过http://网站名/control.php访问，默认帐号为admin，密码为eAccelertor，可编辑此文件修改。</span><br />\r\n<span style="font-size:14px;"> phpize：如果不能运行，先运行apt-get&nbsp;install&nbsp;php5-dev安装php5-dev，再运行phpize</span><br />\r\n<span style="font-size:14px;"> sudo&nbsp;./configure&nbsp;--enable-eaccelerator=shared</span><br />\r\n<span style="font-size:14px;"> sudo&nbsp;make</span><br />\r\n<span style="font-size:14px;"> sudo&nbsp;make&nbsp;install</span><br />\r\n<span style="font-size:14px;"> sudo&nbsp;vim&nbsp;/etc/php5/apache/php.ini</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在配置文件php.ini最后加上：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">代码:zend_extension="/usr/lib/php5/20090626+lfs/eaccelerator.so"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.shm_size="16"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.cache_dir="/tmp/eaccelerator"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.enable="1"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.optimizer="1"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.check_mtime="1"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.debug="0"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.filter=""</span><br />\r\n<span style="font-size:14px;"> eaccelerator.shm_max="0"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.shm_ttl="0"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.shm_prune_period="0"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.shm_only="0"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.compress="1"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.compress_level="9"</span><br />\r\n<span style="font-size:14px;"> eaccelerator.allowed_admin_path="/var/www/control.php"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在phpinfo里如果出现如下信息，表示安装成功：This&nbsp;program&nbsp;makes&nbsp;use&nbsp;of&nbsp;the&nbsp;Zend&nbsp;Scripting&nbsp;Language&nbsp;Engine:</span><br />\r\n<span style="font-size:14px;"> Zend&nbsp;Engine&nbsp;v2.3.0,&nbsp;Copyright&nbsp;(c)&nbsp;1998-2010&nbsp;Zend&nbsp;Technologies</span><br />\r\n<span style="font-size:14px;"> with&nbsp;Zend&nbsp;Guard&nbsp;Loader&nbsp;v3.3,&nbsp;Copyright&nbsp;(c)&nbsp;1998-2010,&nbsp;by&nbsp;Zend&nbsp;Technologies</span><br />\r\n<span style="font-size:14px;"> with&nbsp;eAccelerator&nbsp;v0.9.6.1,&nbsp;Copyright&nbsp;(c)&nbsp;2004-2010&nbsp;eAccelerator,&nbsp;by&nbsp;eAccelerator</span>\r\n</p>', 9, 'zend,linux', 1, 0, 1, '2013-03-10 13:04:16');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(232, '10 MongoDB分片', '<p>\r\n	<span style="font-size:14px;">进行分片，只要启动一下mongos进程即可。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不分片的时候，是客户端直接连接mongod进行数据的查找。进行分别后，客户端会先连接到mongos，然后mongos会连接每个进行了分片的mongod进行数据查找。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">考虑分片的情况</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.机器的磁盘不够用了</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.单个mongod已经不能满足写数据的性能需要了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.想将大量的数据放在内存中提高性能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.一般来说，先从不分片开始，然后在需要的时候将其转换成分片。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">片键</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在设置分片的时候，需要从集合里面选一个键，用该键的值作为数据拆分的依据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如我有个文档集合表示人员，如果选择名字(name)为片键，则第一片可以是存放A~F开头的文档，第二片存放G~P的文档.....</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">建立分片</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">建立分片只有两步：启动实际的服务器，然后决定怎么切分数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分片一般有3个组成部分：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.片&nbsp;&nbsp;就是保存子集合数据的容器。片可以是单个mongod服务器，也可以是副本集。所以即使一片内有多台服务器，也只能有一个主服务器。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.Mongos&nbsp;&nbsp;是MongoDB各版本中配的路由器进程。它路由所有请求，然后将结果聚合。它本身并不存储数据或者配置信息（但会缓存配置服务器的信息）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.配置服务器&nbsp;&nbsp;存储了集群的配置信息，数据和分片的对应关系。Mongos不永久存放数据，所以需要个地方存放分片配置，它会从配置服务器获取同步数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">首先启动配置服务器和mongos</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置服务器需要先启动，因为mongos会用到配置信息。配置服务器的启动就像普通的mongod一样。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;mkdir&nbsp;-p&nbsp;~/dbs/config</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--dbpath&nbsp;~/dbs/config&nbsp;--port&nbsp;20000</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">建立mongos进程，这种路由服务器连接数据目录都不需要，但一定要指明配置服务器的位置。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongos&nbsp;--port&nbsp;30000&nbsp;--configdb&nbsp;localhost:20000</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">添加片</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">片就是普通的mongod实例（或者副本集），现在我们添加一个片</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;mkdir&nbsp;-p&nbsp;~/dbs/shard1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--dbpath&nbsp;~/dbs/shard1&nbsp;--port&nbsp;10000</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在连接刚才启动的mongos，为集群添加一个片。启动shell，连接mongos</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongo&nbsp;localhost:30000/admin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.runCommand({</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"addshard"&nbsp;:&nbsp;"localhost:10000",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"allowLocal"&nbsp;:&nbsp;true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当在localhost上运行片时，得设定allowLocal键。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">切分数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MongoDB不会将存储的每一条数据都直接发布，得先在数据库和集合的级别将分片功能打开。下面例子我们以"_id"为基准切分foo数据库的bar集合。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">首先开启数据库foo的分片功能：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"enablesharding":"foo"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后开启集合bar的分片功能并以_id为片键</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"shardcollection":"foo.bar",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"key":{"_id":1}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生产配置（正式环境配置）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">成功地构建分片需要如下条件：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.多个配置服务器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.多个mongos服务器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.每个片都是副本集</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.正确设置w</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">多个配置服务器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建配置服务器如上，现在启动mongos的时候应将其连接到这3个配置服务器。假如3个配置文件的端口号是20001~2003</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongos&nbsp;--configdb&nbsp;localhost:20001,localhost:20002,localhost:2003</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置服务器使用的是两步提交机制，不是普通的MongoDB的异步复制，来维护集群配置的不同副本。这样能保证集群状态的一致性。这意味着某台配置服务器宕掉了后，集群配置信息将是只读的。但是客户端还是能够读写的，只有所有配置服务器备份了以后才能重新均衡数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">多个mongos</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mongos的数量不受限制，建议针对一个应用服务器只运行一个mongos进程。这样每个应用服务器就可以与mongos进行本地会话。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">健壮的片</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生产环境中，每个片都应是副本集。这样单个服务器坏了，就不会导致整个片失效。用addshard命令就可以讲副本集作为片添加，添加时只要指定副本集的名字和种子就好了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如现在添加副本集foo，其中包含一个服务器xiaozhe.com:27017(还有别的服务器)，就可以使用下列命令将其添加到集群里。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"addshard":"foo/xiaozhe.com:27017"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果xiaozhe.com挂了，则mongos会知道它所连接的是哪个副本集，并去寻找新的主节点。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">管理分片</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分片的信息主要存放在config数据库上，这样就能被任何连接到mongos的进程访问到了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置集合</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面的代码都假设已经在shell中连接了mongos，并且已经运行了use&nbsp;config。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.片</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以在shards集合中查到所有的片&nbsp;&nbsp;&nbsp;&nbsp;&gt;db.shards.find();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">databases集合含有已经在片上的数据库列表和一些相关信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.databases.find()&nbsp;&nbsp;&nbsp;键的解释如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"_id"&nbsp;：&nbsp;表示数据名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"partitioned"&nbsp;：&nbsp;是否启用分片功能</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"primary"&nbsp;：这个值与"_id"对应，表示这个数据的大本营在哪里。也就是开始创建数据库文件的位置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">块信息保存在chunks集合中，你可以看到数据到底是怎么切分到集群的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.chunks.find()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分片命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.获得概要</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.printShardingStatus()&nbsp;给出前面说的那些集合的概要</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.删除片</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用removeshard就能从集群中删除片，removeshard会把给定片上的所有块都挪到其他片上。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"removeshard":"localhost:10000"})</span>\r\n</p>', 17, 'mongodb,笔记', 1, 0, 1, '2013-03-10 13:04:37'),
(233, '9 MongoDB主从复制和集群', '<p>\r\n	<span style="font-size:14px;">主从复制</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">最基本的设置是建立一个主节点和多个从节点，每个从节点要知道主节点的地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">运行mongod&nbsp;--master就启动了主服务器。运行mongod&nbsp;--slave&nbsp;--source&nbsp;master_address则启动了从服务器，其中master_address就是上面的主节点地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">生产环境下有多台服务器，不过这里我们的例子就在同一机器上试验。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.给主节点建立数据目录，并绑定端口(10000)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;mkdir&nbsp;-p&nbsp;~/dbs/master</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--dbpath&nbsp;~/dbs/master&nbsp;--port&nbsp;10000&nbsp;--master</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.接着设置从节点，记得要选择不同的端口号，并且用--source为从节点指定主节点地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;mkdir&nbsp;-p&nbsp;~/dbs/slave</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--dbpath&nbsp;~/dbs/slave&nbsp;--port&nbsp;10001&nbsp;--slave&nbsp;--source&nbsp;localhost:10000</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这样就完成了主从复制，注意不超过12个从节点的集群就可以运行良好。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">选项</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--only&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在从节点上指定复制某个数据库（默认复制所有数据库）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--slavedelay</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用在从节点上，当应用主节点的操作时增加延时（秒）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--fastsync</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">以主节点的数据快照为基础启动从节点，如果数据目录一开始是主节点的数据快照，从节点用这个选项启动要比完整同步快多了</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--autoresync</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果从节点与主节点不同步，则自动重新同步</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--oplogSize</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">主节点oplog的大小（MB）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">添加及删除源</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">启动从节点时，可以用--source指定主节点，也可以在shell中配置这个选项。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假设主节点绑定了localhost:27017。启动从节点时可以不添加源，而是随后向sources集合添加主节点信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--slave&nbsp;--dbpath&nbsp;~/dbs/slave&nbsp;--port&nbsp;27018</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在可以在shell中运行如下命令，将localhost:27017作为源添加到从节点上：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;use&nbsp;local</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.sources.insert({"host":"localhost:27017"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假设在生产环境下，想更改从节点的配置，改为www.xiaozhe.com为源，则可以用insert和remove来完成。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.sources.insert({"host","www.xiaozhe.com"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.sources.remove({"host","localhost:27017"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以看到，sources集合可以当做普通集合进行操作，而且为管理从节点提供了很大的灵活性。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：要是切换的两个主节点有相同的集合名，则MongoDB会尝试合并，但不能保证正确合并，要是使用一个从节点对应多个不同的主节点，最好使用不同的命名空间。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">副本集（相当于集群）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">副本集就是有自动故障恢复功能的主从集群。主从集群和副本集最为明显的区别就是副本集没有固定的主节点。可以把副本集当做一个集群，整个集群会选出一个主节点，当其不能正常工作时则会激活其他节点。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置副本集比主从稍微复杂点，我们从2个服务器开始：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意不能用localhost作为地址成员，我们需要找到主机名，$&nbsp;cat&nbsp;/etc/hostname(假如主机名是morton)&nbsp;。然后为每一个服务器创建数据目录，选择端口，$&nbsp;mkdir&nbsp;-p&nbsp;~/dbs/node1&nbsp;~/dbs/node2&nbsp;。在启动之前，我们需要给副本集一个名字，这里命名为blort&nbsp;。之后我们用&nbsp;--replSet选项，作用是让服务器知晓在这个blort副本集还有别的同伴。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--dbpath&nbsp;~/dbs/node1&nbsp;--port&nbsp;10001&nbsp;--replSet&nbsp;blort/morton:10002</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--dbpath&nbsp;~/dbs/node2&nbsp;--port&nbsp;10002&nbsp;--replSet&nbsp;blort/morton:10001</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果想添加第三台：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--dbpath&nbsp;~/dbs/node3&nbsp;--port&nbsp;10003&nbsp;--replSet&nbsp;blort/morton:10001,morton:10002</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们启动一个服务器morton:10001，并进行初始化设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongo&nbsp;morton:10001/admin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.runCommand({"replSetInitiate":{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"_id"&nbsp;:&nbsp;"blort",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"members"&nbsp;:&nbsp;[</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"_id"&nbsp;:&nbsp;1,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"host"&nbsp;:&nbsp;"morton:10001"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"_id"&nbsp;:&nbsp;2,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"host"&nbsp;:&nbsp;"morton:10002"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">副本集中节点的类型</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">standard:常规节点，它存储一份完整的数据副本，参与选举投票可以成为活跃节点。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">passive:存储了完整的数据副本，参与投票，不能成为活跃节点。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">arbiter:仲裁者只参与投票，不能接受复制数据，也不能成为活跃节点。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">每个参与节点（非仲裁者）都有个优先权，优先权为0是被动的，不能成为活跃节点，优先值不为0，则按照大小选出活跃节点。如果2个值一样，则数据最新的为活跃节点。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在节点配置中修改priority键，来配置成标准节点或被动节点。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;member.push({</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"_id":3,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"host":"morton:10003",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"priority":40</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认优先级是1，可以是0~1000</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">arbiterOnly键可以指定仲裁节点</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;member.push({</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"_id":4,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"host":"morton:10004",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"arbiterOnly":true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在从服务器上执行操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">读扩展</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用mongodb扩展读取的一种方式就是将查询放在从节点上。这样主节点的负载就减轻了。一般来说，当负载是读取密集型时这是非常不错的方案。要是写入密集型，则要参见第十章用分片来进行扩展。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">扩展读取本身很简单，和往常一样设置主从复制，连接从服务器处理请求，唯一的技巧是告诉从服务器是否可以处理请求（默认是不可以的）。这个选项叫做slaveOkay。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用从节点做数据处理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以使用--master参数启动一个普通的从节点。同时使用--slave和--master有点矛盾，其实这意味着如果对从节点进行写入，则把从节点就当做普通的MongoDB。其实它还是会不断的复制主节点的数据，这样就可以对节点执行阻塞操作而不影响主节点性能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：用这种技术的时候，一定要确保不能对正在复制的主节点的从节点进行数据库插入。而且从节点第一次启动时也不能有正被复制的数据库。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">工作原理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Oplog</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">主节点的操作记录称为oplog(operation&nbsp;log)。Oplog存储在一个特殊的数据库中，叫做local。Oplog就在其中的oplog.$main集合里面。Oplog中的每个文档都代表主节点执行的一个操作。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ts:操作的时间戳</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">op:操作的类型,只有1字节代码（如i代表插入）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ns：执行操作的命令空间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">o：进一步指定要执行的操作的文档，对插入来说，就是要插入的文档</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：oplog不记录查询操作，oplog存储在固定集合里面，所以它们会自动替换旧的操作。我们在启动服务器的时候可以用--oplogSize指定这个大小（MB）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">重新同步</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果从节点的数据被主节点的数据拉开太远了，则从节点可能跟不上主节点的步</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">子，有可能造成同步失败。解决方法是从新进行同步{"resync":1}，也可以在启动从节点的时候用--autoresync选项让其自动启动。建议oplog的大小是剩余磁盘空间的5%。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">复制状态和本地数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">本地数据库（local）用来存放所有内部复制状态。其内容不会被复制，从而确保了一个MongoDB服务器只有一个本地数据库。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">管理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">诊断</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当连接到主节点后，使用db.printReplicationInfo函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.printReplicationInfo();&nbsp;这些信息是oplog的大小和oplog中操作的时间范围。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当连接到从节点时，用db.printSlaveReplicationInfo()函数，能得到从节点的一些信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">变更oplog的大小</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">若发现oplog大小不适合，最简单的方法是停掉主节点，删除local数据库的文件，用新的设置(--oplogSize)重新启动。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;rm&nbsp;/data/db/local.*</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--master&nbsp;--oplogSize&nbsp;size(新大小)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">重启主节点后，所有的从节点要用--autoresync重启，否则需要手动同步更新。</span>\r\n</p>', 17, 'mongodb,笔记', 1, 0, 1, '2013-03-10 13:05:07'),
(234, 'MongoDB 8 MongoDB的管理 ', '<p>\r\n	<span style="font-size:14px;">启动和停止MongoDB</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">从命令行启动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">执行mongodb,启动MongoDB服务器。有很多选项，在命令行启动mongod&nbsp;--help可以查看所有选项。一些主要选项如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--dbpath</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">指定数据目录，每个mongod进程都需要独立的数据目录，所以要是有3个mongoDB事例，必须要有3个独立的数据目录。当mongod启动的时候会创建mongod.lock文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--port</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">指定服务器监听端口，默认是27017。要是运行多个mongod进程，则要给每个进程指定不同的端口号。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--fork</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">以守护进程的方式运行MongoDB，创建服务器进程。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--logpath</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">指定日志输出路径，而不是输出到命令行，会覆盖原来的日志。如果想保留原来的日志，还需要使用--logappend选项。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--config</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">指定配置文件，加载命令行未指定的各种选项。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如我们现在用端口号5586启动进程并输出记录到mongodb.log:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongod&nbsp;--port&nbsp;5586&nbsp;--fork&nbsp;--logpath&nbsp;mongodb.log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MongoDB支持从文件获取配置信息。当配置信息很多的时候，最好把配置文件写入到一个文件中。指定配置文件可以用&nbsp;-f&nbsp;或&nbsp;--config&nbsp;选项。例如：$&nbsp;./mongod&nbsp;--config&nbsp;~/.mongodb.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置文件的格式如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">port&nbsp;&nbsp;=&nbsp;&nbsp;5586</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fork&nbsp;&nbsp;= true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">logpath = mongod.log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">停止MongoDB</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">让MongoDB稳妥的停下来很重要，最基本的方法是向MongoDB服务器发送一个SIGINT或者SIGTERM信号。如果服务器在前台运行，可以直接用Ctrl+c。否则就用kill命令结束一个进程。如果pid是10014，则可以kill&nbsp;-2&nbsp;10014(SIGINT)&nbsp;或&nbsp;kill&nbsp;10014(SINTERM)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">稳妥退出也就是说当运行操作或文件预分配完成，关闭所有打开连接，将缓存的数据刷新到磁盘，最后才停止。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：如果向MongoDB发送SIGKILL(kill&nbsp;-9)会造成数据库直接关闭。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">另一种关闭的方式是使用shutdown命令，{"shutdown":1}。这是管理命令，要在admin数据库下使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;use&nbsp;admin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.shutdownServer();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">监控</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用管理接口</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认情况下，启动mongod时还会启动一个基本的HTTP服务器，该服务器监听的端口比主服务器端口号大1000，例如默认的端口号是27017，则管理接口是28017。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：</span><a href="http://localhost:28017/"><span style="font-size:14px;">http://localhost:28017</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要想利用好管理接口（比如，访问命令列表），需要用--rest选项开启支持。也可以在启动mongod时使用--nohttpinterface</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">serverStatus：可以获取运行中MongoDB服务器统计信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：&gt;db.runCommand({"serverStatus":1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">统计信息还可以通过HTTP借口以Json的形式得到，位置在/_status(http://localhost:28027/_status)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mongostat：可以便捷的查看serverStatus的结果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">第三方监控插件：Nagios,Munin,Ganglia,Cacti.登录http://dochub.mongodb.org/core/monitoring查看相关文档。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安全和认证</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">认证的基础知识</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">每个MongoDB实例中的数据库都有多个用户，如果开启了安全性检查，则只有数据库认证用户才能执行读或写操作。在认证的上下文中，MongoDB会将普通的数据作为admin数据库处理。admin数据库中的用户被视为超级用户。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在开启安全检查之前，一定要至少有个管理员账号。开始时shell连接的是没有开启安全检查的服务器。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;use&nbsp;admin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.addUser("root","abcd");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;use&nbsp;test</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.addUser("test_user","abcd");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.addUser("user_read_only","abcd",true);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上面添加了管理员root，在test数据库添加了两个普通账号，其中一个是只读权限的，不能对数据库写入。在shell中创建只读用户只需要将addUser的第三个参数设置为true即可。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们重启服务器，这次加入&nbsp;--auth&nbsp;命令选项，开启安全检查。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;use&nbsp;test</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.test.find();&nbsp;#这样会报错，因为没有登录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.auth(''user_read_only'',''abcd'');&nbsp;#用户登录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">认证的工作原理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据库的用户账户以文档的形式存储在system.users集合里面，文档的结构是</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"user":username,"readonly":true,"pwd":password_hash}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果需要删除用户，和删除文档一样：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.system.users.remove({"user":"username"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其他安全考虑</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">建议将MongoDB服务器布置在防火墙后或者布置在只有应用服务器能访问的网络中。但要是MongoDB必须能被外面访问到的话，建议使用&nbsp;--bindip&nbsp;选项，可以指定mongod绑定到本地IP地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如，只能从本机应用服务器访问。Mongod&nbsp;--bindip&nbsp;localhost</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">备份和修复</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据库文件备份</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">先关闭服务器，然后备份数据，只要简单的创建数据目录中所有文件的副本就可以了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongodump和mongorestore</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongodump是一种能在运行时备份的方法。mongodump对运行的MongoDB做查询，然后将所有查到的文档写入磁盘。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongodump也可以通过运行&nbsp;--help&nbsp;选项查看所有选项。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如:$&nbsp;./mongodump&nbsp;-d&nbsp;test&nbsp;-o&nbsp;backup</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mongorestore可以获取mongodump的输出结果，并将备份的数据插入到运行的MongoDB实例中。下面的例子演示了从数据库test到backup目录的热备份。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如:$&nbsp;./mongorestore&nbsp;-d&nbsp;foo&nbsp;--drop&nbsp;backup/test/</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-d指定了要恢复的数据库，--drop代表在恢复前删除集合，否则数据就会与现有集合数据合并。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">fsync和锁</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">虽然mongodump和mongorestore能不停机备份，但是我们失去了获取实时数据视图的能力。fsync能够在MongoDB运行时复制数据目录还不会损坏数据。我们还可以选择上锁阻止对数据库的进一步写入。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：&nbsp;&gt;use&nbsp;admin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"fsync":1,"lock":1});</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上锁了，备份成功之后，我们就要解锁。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：&nbsp;&gt;db.$cmd.sys.unlock.findOne();&nbsp;#解锁</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.currentOp();&nbsp;#确保已经解锁</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修复</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果停电什么的造成数据没有存好，我们就需要修复&nbsp;--repair。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在启动的时候&nbsp;mongod&nbsp;--repair&nbsp;修复数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修复正在运行中的服务器上的数据库，要在shell中用repairDatabase。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;use&nbsp;test ; &gt;db.repairDatabase()</span>\r\n</p>', 17, 'mongodb,笔记', 1, 0, 1, '2013-03-10 13:05:27');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(235, 'MongoDB 7 MongoDB进阶指南 ', '<p>\r\n	<span style="font-size:14px;">数据库命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">命令的工作原理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Drop命令可以在shell中删除一个集合。比如db.coll.drop()。同理也可以用runCommand来达到一样的效果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"drop":"coll"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">命令参考</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MongoDB支持超过75个命令，我们可以在shell中运行：db.listCommands()或者从驱动程序中运行等价的命令list-commands。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">浏览器管理员接口：</span><a href="http://localhost:28017/_commands"><span style="font-size:14px;">http://localhost:28017/_commands</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">常用的一些命令，执行用&gt;db.runCommand({"xxx":"xx"})&nbsp;执行</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">buildInfo:管理专用命令，返回MongoDB服务器的版本号和主机等</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"buildinfo":1}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">collStats:返回指定集合的统计信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"collStats":"coll"}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">distinct:返回指定集合中满足条件的文档的指定键的所有不同值</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"distinct":"coll","key":"key","query":"query"}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">drop:删除集合的所有数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"drop":"coll"}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">dropDatabase:删除当前数据库的所有数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"dropDatabase":1}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">dropIndexes:删除集合里面名称为name的索引，如果名称为*，则代表删除全部。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"dropIndexes":"coll","index":"name"}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">findAndModify&nbsp;用法在第3章有记录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">getLastError:查看对本集合执行的最后一次操作的信息。在w台服务器复制集合的最后操作之前，这个命令会阻塞(超时的毫秒数)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"getLastError":1&nbsp;[,"w":w[,"wtimeout":&nbsp;timeout]]}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">isMaster:检查本服务器是主服务器还是从服务器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"isMaster":1}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ListCommands:返回所有可以在服务器上运行的命令及相关信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"ListCommands":1}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">listDatabases:管理专用命令，列出服务器上所有的数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"listDatabases":1}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ping:检查服务器连接是否正常。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"ping":1}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">renameCollection:将集合a重命名为b，其中a和b都必须是完整的集合命名空间(例如"foo.bar"表示foo数据库中的bar集合)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"renameCollection":a,"to":b}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">repairDatabase:修复并压缩当前数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"repairDatabase":1}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">serverStatus:返回服务器的管理统计信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"serverStatus":1}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建固定集合</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">固定集合是一个大小固定的集合，很像环形队列，如果空间不足，最早的文档会被删除，为新的文档腾出空间。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不像普通集合，固定集合需要在使用前显示的创建。使用createCollection命令创建。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.createCollection("my_coll":{capped:true,size:100000,max:100})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建了一个my_coll固定集合，大小100000字节，文档数量上限100个。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以转换已有的普通集合的方式来创建固定集合。使用convertToCapped命令来完成。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"convertToCapped":"test",size:100000})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">自然排序</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">固定集合有种特殊的排序方法，是自然排序。自然排序就是文档在磁盘上的顺序。因为固定集合的文档总是按照插入顺序存储的，自然排序就与此相同。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"$natural":1}排序表示与默认的排序一样，非固定集合用自然排序的意义不大。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如:&nbsp;&gt;&nbsp;db.coll.find().sort({"$natural":1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">尾部游标</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">尾部游标是一种特殊的持久游标，这类游标会不断的获取最新结果，是受linux中tail&nbsp;-f&nbsp;命令的启发开发出来的。但是注意mongo&nbsp;shell不支持尾部游标，所以我们看一个php例子：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$cursor&nbsp;=&nbsp;$coll-&gt;find()-&gt;tailable();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">While(true){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">If(&nbsp;!$cursor-&gt;hasNext()&nbsp;){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">If(&nbsp;$cursor-&gt;dead()&nbsp;){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Break;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Sleep(1);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}else{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">While(&nbsp;$cursor-&gt;hasNext()&nbsp;){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Do_stuff($cursor-&gt;getNext());</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">GridFS存储文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">开始使用GridFS:mongofiles</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mongofiles内置在MongoDB发布版汇总，可以用来在GridFS中上传，下载，列示，查找或删除文件。像执行其他命令行工具一样，执行mongofiles&nbsp;--help可以查看可用选项。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们向GridFS上传文件，列出文件和下载文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;echo&nbsp;"hello,word"&nbsp;&gt;&nbsp;foo.txt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongofiles&nbsp;put&nbsp;foo.txt&nbsp;#上传文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongofiles&nbsp;list&nbsp;#列出文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;&nbsp;rm&nbsp;foo.txt&nbsp;#删除本地文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongofiles&nbsp;get&nbsp;foo.txt&nbsp;#下载文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$ cat&nbsp;foo.txt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongofiles&nbsp;search&nbsp;foo.txt&nbsp;#查询文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$&nbsp;./mongofiles&nbsp;delete&nbsp;foo.txt&nbsp;#删除Grid上的文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">内部原理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">GridFS的块有个单独的集合，默认情况下，都会使用fs.chunks集合，结构如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">_id #块的唯一键</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">n #块编号，也就是这个块在原文件中的编号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">data #包含组成文件块的二进制数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">files_id #包含这个块原数据的文件文档&nbsp;"_id"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">文件的原数据都放在另一个集合中，fs.files里面。结构如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">_id #文件的唯一id,对应files_id</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">length #文件内容的字节数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chunkSize #每块的大小，以字节为单位，默认是256K</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">updateDate #文件存入GridFS的时间戳</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">md5 #文件内容的md5校验和，由服务器端生成</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在这里需要提一下md5，它是用于计算上传块的md5校验和，也就意味着用户可以检验md5键的这个值，确保文件正确的上传。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：我们可以使用distinct命令获取GridFS中不重复的文件名列表。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.fs.files.distinct("filename")</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">服务器端脚本</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.eval</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在服务器端可以使用db.eval函数执行javascript脚本。这个函数先将给定的javascript字符串传给MongoDB，然后返回结果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">发送代码有两种选择，或者封装进一个函数，或者不封装。下面代码是等价的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.eval_r("return&nbsp;1;")</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.eval_r("function(){return&nbsp;1;}")</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">只有传递参数需要封装成一个函数，参数通过db.eval的第二个参数传递，不过要写成一个数据的形式。例如传递给函数username。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.eval_r("function(u){print(''hello''+&nbsp;u&nbsp;+''!'');}",[username])</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有必要的话，可以传递多个参数，例如要计算3个数之和。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.eval_r("function(x,y,z){return&nbsp;x+y+z;}",[num1,num2,num3])</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">存储Javascript</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">每个MongoDB的数据库中都有个特殊的集合，叫做system.js，用来存放Javascript变量。这些变量可以在任何MongoDB的javascript上下文中调用，包括$where字句，db.eval调用，MapReduce作业。用insert可以将变量加入到system.js之中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.system.js.insert({"_id":"x","value":1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">System.js还可以存入Javascript代码。如用javascript写一个日志函数，将其放在system.js中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.system.js.insert({"_id":"log","value":function(msg,level){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Var&nbsp;levels&nbsp;=&nbsp;[''debug'',''warning'',''error''];</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">level&nbsp;=&nbsp;level&nbsp;?&nbsp;level&nbsp;:&nbsp;0&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Var&nbsp;now&nbsp;=&nbsp;new&nbsp;Date();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Print(now&nbsp;+&nbsp;"&nbsp;"&nbsp;+&nbsp;levels[level]&nbsp;+&nbsp;msg&nbsp;);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们可以调用这个函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.eval_r("x=''aaa'';log(''x&nbsp;is''+x,1);");</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安全性</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">为了避免注射漏洞，我们需要限定作用域。在PHP中代码如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$func=new&nbsp;MongoCode("function(){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">print(''hello,''&nbsp;+&nbsp;username&nbsp;+&nbsp;''!'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}",array("username"&nbsp;=&gt;&nbsp;$username))</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据库引用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MongoDB最鲜为人知的功能就是数据库引用，也叫DBRef。DBRef就像Url，唯一确定一个到文档的引用。它加载的方式如同浏览器加载url一样。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">DBRef是个内嵌文档，下面有几个是DBRef的必选键,注意必须建的顺序不能改变。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"$ref":"coll","$id":id_value}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$ref #指定集合</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$id #指定文档的&nbsp;_id</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果想用另外一个数据的文档，还有个$db键</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"$ref":"coll","$id":id_value,"$db":database}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">事例模式：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们使用DBRef跨集合引用文档。本例中含有两个集合users和notes。</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01017k22&amp;url=http://s7.sinaimg.cn/orignal/788e5b7axc65499ad6536" target="_blank"><img src="http://s7.sinaimg.cn/middle/788e5b7axc65499ad6536&amp;690" height="431" width="554" alt="MongoDB&nbsp;&lt;wbr&gt;7&nbsp;&lt;wbr&gt;MongoDB进阶指南" title="MongoDB&nbsp;&lt;wbr&gt;7&nbsp;&lt;wbr&gt;MongoDB进阶指南" /></a> \r\n</p>', 17, 'mongodb,笔记', 1, 0, 1, '2013-03-10 13:05:51'),
(236, 'MongoDB 6 聚合 ', '<p>\r\n	<span style="font-size:14px;">count</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">最简单的聚合工具，返回集合中的文档数量，速度非常快。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.count()&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">计算查询条件为name是xiaozhe的总数，有条件的查询速度会变慢。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.count({"name":"xiaozhe"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">distinct</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用来找出给定键的所有不同值，使用时必须指定集合和键。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"distinct":"coll","key":"age"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">group</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">先选定分组所依据的键，而后MongoDB就会将集合依据选定键值的不同分成若干组。然后可以通过聚合每一组内的文档，产生一个结果文档。类似SQL中的Group&nbsp;By&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例子：现在我们需要从下面文档得到最近30每天最后时刻(time)的价格</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01017j4v&amp;url=http://s4.sinaimg.cn/orignal/788e5b7axc64046f813e3" target="_blank"><img src="http://s4.sinaimg.cn/middle/788e5b7axc64046f813e3&amp;690" height="106" width="554" alt="MongoDB&nbsp;&lt;wbr&gt;6&nbsp;&lt;wbr&gt;聚合" title="MongoDB&nbsp;&lt;wbr&gt;6&nbsp;&lt;wbr&gt;聚合" /></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们先将集合按照天分组，然后在每一组里取包含最新时间戳的文档，将其放置到结果中就完成了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"group":{</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"ns":"stocks",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"key":"day",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"initial":{"time":0},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"$reduce":function(doc,prev){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">if(&nbsp;doc.time&nbsp;&gt;&nbsp;prev.time&nbsp;){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">prev.price&nbsp;=&nbsp;doc.price;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">prve.time&nbsp;=&nbsp;doc.time&nbsp;;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"condition":{"day":{"$gt":"2010/09/30"}}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们分解上面的命令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"ns":"stocks"&nbsp;&nbsp;#指定要进行分组的集合</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"key":"day"&nbsp;#指定文档分组的键，所有day值相同的划分到一组</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"initial":{"time":0}&nbsp;#每一组reduce函数调用的初始时间，会作为初始文档传递给后续过程。每一组的所有成员都会使用这个累加器，所以改变会保留住。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"$reduce":function(doc,prev){...}&nbsp;#每个文档都对应这一次调用，系统会传递2个参数：当前文档和累加器文档(本组当前的结果)。本例中，想让reduce函数比较当前文档的时间和累加器的时间。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"condition":{"day":{"$gt":"2010/09/30"}}&nbsp;#分组的条件，有些资料提及cond或q，其实和condition键是一样的意思。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">finalize</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">完成器可以精简从数据库传到用户的数据，这个步骤非常重要，因为group命令的输出一定要放在单个数据库响应中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">具体实例：PAGE&nbsp;~&nbsp;102</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将函数做为键使用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有时候分组的依据条件非常复杂，不仅仅是一个键。比如要计算有多少篇不同类别的文章，但是由于作者建立类别的时候大小写不注意。造成两种不同的结果，为了消除这种影响，我们需要定义一个函数来确定文档分组依据的键。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：定义分组函数就要用到$keyf键(注意不是$key)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.group({</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"ns":"coll",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"$keyf":function&nbsp;(x){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Return&nbsp;x.category.toLowerCase();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MapReduce</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">PAGE&nbsp;~&nbsp;104</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MapReduce是聚合工具中的明星。Count，distinct,group能做的上述事情MapReduce都能做。它是一个可以轻松并行化到多个服务器的聚合，它会拆分问题，再将各个部分发送到不同的的机器上，让每个机器完成一部分，当所有机器都完成的时候，再把结果汇总形成最终结果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>', 17, 'mongodb,笔记', 1, 0, 1, '2013-03-10 13:06:18'),
(237, 'Squid普通代理设置', '<p>\r\n	<span style="font-size:14px;">Squid普通代理设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.网络拓扑图</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01017iex&amp;url=http://s4.sinaimg.cn/orignal/788e5b7agc62e8009fc53" target="_blank"><img src="http://s4.sinaimg.cn/middle/788e5b7agc62e8009fc53&amp;690" width="553" height="317" alt="Squid普通代理设置" title="Squid普通代理设置" /></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.准备前提：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">客户机IP&nbsp;192.168.10.2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Web服务器IP&nbsp;200.168.10.2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Squid的连接客户机IP&nbsp;192.168.10.1，Squid连接外网Web服务器IP&nbsp;200.168.10.1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.修改squid配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;vim&nbsp;/etc/squid/squid.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http_port&nbsp;192.168.10.1:3128&nbsp;#设置http</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">visible_hostname&nbsp;192.168.10.1&nbsp;#设置主机名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">acl&nbsp;innet&nbsp;src&nbsp;192.168.10.0/24&nbsp;#acl防火墙的设置名字为innet并指定允许网段</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">acl&nbsp;all&nbsp;src&nbsp;0.0.0.0/0.0.0.0&nbsp;#acl防火墙的设置名字为all并指定所有的网段</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http_access&nbsp;allow&nbsp;innet&nbsp;#设置允许innet网段通过</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">http_access&nbsp;deny&nbsp;all&nbsp;#设置其余的网段不允许通过</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.设置浏览器代理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将浏览器的代理服务器设置为：192.168.10.1&nbsp;&nbsp;&nbsp;&nbsp;端口：3128</span>\r\n</p>', 10, 'squid,linux', 1, 0, 1, '2013-03-10 13:06:50'),
(238, 'mongodb 5 索引 ', '<p>\r\n	<span style="font-size:14px;">索引简介</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在要依据某个键进行查找：&gt;db.coll.find({"username":"mark"})，现在我们可以对username创建索引，可以使用ensureIndex方法。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.ensureIndex({"username":1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如下面的查询不会从先前建立的索引中获得任何的性能提升。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.find({"date":date1}).sort("date":1,"username":1)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果需要提升此次查询的性能，我们必须还要对date创建索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.ensureIndex({"date":1,"username":1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：创建索引的缺点就是每次插入、更新和删除的时候都会产生额外的开销。这是因为数据库不但需要执行这些操作，还要操作集合中的索引。因此，要尽可能少创建索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">索引的顺序</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果我们需要查询用户和日期，肯定会创建这样的索引&gt;db.coll.ensureIndex({"user":1,"date":-1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这样创建索引的话，数据会先按照用户名升序，然后日期降序排列，我们就不能得到最新的数据。所以正确的索引创建方法是：&gt;db.coll.ensureIndex({"date":-1,"user":1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">索引内嵌文档中的键</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建索引的方法与普通的键创建类似:&gt;db.coll.ensureIndex({"comment.date":1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">为排序创建索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当我们为某个键值要进行sort排序的时候，如果没有创建索引，MongoDB需要将所有数据提到内存在进行排序，所以无索引排序在内存中保存是有上限大小的，超过了就会报错。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">唯一索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以确保集合每个文档指定键都有唯一值。例如要保证文档username键都有不一样的值，就可以创建一个唯一索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.ensureIndex({"username":1},{"unique":true})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">消除重复</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当创建索引的时候，可能有些值已经重复了。所以我们想要删掉那些重复的值。可以使用dropDups选项，它会保留发现的第一个文档，删除接下来重复的文档。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.ensureIndex({"username":1},{"unique":true,"dropDups":true})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用explain和hint&nbsp;&nbsp;Page：90</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.find().explain(),它会返回查询使用的索引情况和耗时及扫描文档数的统计信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果发现MongoDB使用了非预期的索引，可以使用hint强制使用某个索引。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.find({"age":14,"username":"/.*/"}).hint({"username":1,"age":1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">多数情况下是无需的，因为mongoDB的查询优化器非常智能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">索引管理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">索引的元信息存储在每个数据库的system.indexes集合中，这是个保留集合，只能通过ensureIndex和dropIndexes进行操作。System.indexes集合包含每个索引的详细信息。&gt;db.system.indexes.find()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">同时system.namespaces集合也含有索引的名字，而且会发现每个集合至少有两个文档与之对应，一个是对应集合本身，一个对应集合包含的索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">随着程序和数据的不断增加，以后可能会修改索引，但是庞大的数据会使修改非常慢，我们就可以在后台进行索引的更新。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.ensureIndex({"username":1},{"background":true})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除一个索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"dropIndexes":"coll","index":"a"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除所有索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({"dropIndexes":"coll","index":"*"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">地理空间索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假设我们要查找给定纬度坐标周围最近的咖啡馆，就需要创建一个专门的索引来提高这种查询的效率，因为这种查询需要搜索两个维度。地理空间索引同样可以由ensureIndex来创建，只不过参数不是1或-1，而是"2d"。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.map.ensureIndex({"gps":"2d"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gps键的值必须是某种形式的一对值：一个包含两个元素的数组或是包含两个键的内嵌文档。如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"gps":[0,100]}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"gps":{"x":-30,"y":30}}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"gps":{"latitude":-180,"longitude":180}}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认情况下，地理空间索引假设值的范围在-180~180,要想用其他值，可以通过ensertIndex的选项来指定最大最小值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.map.ensureIndex({"gps":"2d"},{"min":-1000,"max":1000})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">地理空间的查询</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">地理空间查询以两种方式进行，即普通查询(find)和数据库命令。Find的方式与一般方式查询差别不大，只不过用了"$near"。需要两个目标值的数组作为参数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.map.find({"gps":{"$near":[40&nbsp;,&nbsp;-73]}})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这会按照离点(40,-73)由近及远的方式将map集合的所有文档都返回。在没有指定limit的值时，默认是100个文档。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">也可以用geoNear来完成相同的操作：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.runCommand({geoNear:"map",near:[40,-73],num:10})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MongoDB不但能找到靠近一个点的文档，还能找到指定形状内的文档。做法就是把原来的"$near"换成"$within"。具体帮助文档:http://www.mongodb.org/display/DOCS/Geospatial+Indexing</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">复合地理空间索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有时候我们要找的东西往往不是一个点。例如用户要找出周围所有的咖啡店。将地理空间索引和普通索引组合起来就好了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.ensureIndex({"location":"2d","desc":1})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后我们去找附近的咖啡馆：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.coll.find({"location":{"$near":[-70,30]},"desc":"coffee"}).limit(1)</span>\r\n</p>', 17, 'mongodb,笔记', 1, 0, 1, '2013-03-10 13:07:13'),
(239, 'mongodb 4 查询', '<span style="font-size:14px;">show dbs 可以查看所有的数据库</span><br />\r\n<br />\r\n<div>\r\n	<p>\r\n		<span style="font-size:14px;">find简介</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">find()里面如果不加键值对，默认就是{},即查询所有。如果加上了键值对，就相当于加上了查找条件。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">指定返回的键值对</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如果用户只需要查询得到用户的email和username,则可以通过find或者findOne的第二个参数来指定想要的键。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如：&gt;db.user.find({},{"email":1,"username":1})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如果只是不需要得到用户的email,则可以将键值设置为0.</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如:&gt;db.user.find({},{"email":0})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">限制</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">查询上使用的查询文档，必须是常量(在你自己的代码里可以是正常的变量),但是不能引用文档中的其他键的值。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">查询条件</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">"$lt","$lte","$gt","$gte","$ne"分别对应的&lt;&nbsp;&lt;=&nbsp;&gt;&nbsp;&gt;=&nbsp;!=&nbsp;例如查询一个在18~30岁之间的用户:</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.user.find({"age":{"$gte":18,"$lte":30}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">这样的查询对有关日期的更方便，比如查询2007/01/01日之后注册的用户。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;start&nbsp;=&nbsp;new&nbsp;Date("2007/01/01")</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.user.find({"register":{"$gt":start}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">查询用户名不等于andy的文档</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.user.find({"username":{"$ne":"andy"}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">OR,IN查询</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">"$in"&nbsp;加一个条件数组，用来查询一个键的多个值。例如中奖号码是5,8,22，要找出这些数据。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.coll.find({"ticket":{"$in":[5,8,22]}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">"$nin"与"$in"是相对的，将返回与数组中所有条件都不匹配的文档。要是想返回所有没中奖的人。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.coll.find({"ticket":{"$nin":[5,8,22]}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">"$or"&nbsp;查询ticket为10或者winner为true的文档。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.coll.find({"$or":[{"$ticket":10},{"winner":true}]})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">特定类型的查询</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">null</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Null值的查询。如果查询y键的值为Null，不仅会匹配值为Null的文档，还会匹配这个键不存在的文档。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">所以如果仅仅是需要匹配键值为Null的文档，只能通过用"$exists"判定键值：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.coll.find({"y":{"$in":[null],"$exists":true}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">正则表达式</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">匹配用户名为joe的用户，不分别大小写</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.user.find({"username":/joe/i})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">MongoDB使用Perl兼容的正则表达式(PCRE)来匹配，PCRE支持的正则表达式语法都能被MongoDB接受。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">查询数组</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">数组绝大数情况下可以这样理解：每一个元素都是整个键的值。假如有一个数组文档。Db.food.insert({"fruit":["apple","banana","peach"]})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$all</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如果要用多个数组元素来找到匹配的文档，就必须要使用"$all"</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.food.find({"fruit":{"$all":["apple","banana"]}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">要是想查询数组指定位置的元素，则需要使用key.index的语法指定下标，例如：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.food.find({"fruit.2":"peach"})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$size</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">查询指定长度的数组</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.food.find({"fruit":{"$size":3}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$slice</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">前面已经提及，find的第二个参数是可选的，可以指定返回哪些键。$slice也可以返回数组的一个子集合。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">{{},"comments":{"$slice":10}}&nbsp;返回前10条留言</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">{{},"comments":{"$slice":-10}}&nbsp;返回后10条留言</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">{{},"comments":{"$slice":[10,20]}}&nbsp;返回第10-20条留言，不包含10，包含20</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">例如：data={"name":"aaaa","favor":["a","b","c"]}，如果我仅需要返回favor的第一个值。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.coll.find({"name":"aaaa"},{"favor":{"$slice":1}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">查询内嵌文档</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">如果有一个comments数组，需要访问其中的数组内容，那些数组内容就是属于内嵌文档，我们需要用&nbsp;&nbsp;.&nbsp;&nbsp;来进行访问,如果comment.author</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$where查询</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">$where自居可以执行任意的Javascript作为查询的一部分。不建议使用。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">游标</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">先创建一个简单的集合，然后做个查询</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;for(i=0;i&lt;100;i++){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Db.coll.insert({"num":i})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Var&nbsp;cursor&nbsp;=&nbsp;db.coll.find()</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">现在我们可以使用迭代将数据一个一个的查找出来。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;while(&nbsp;cursor.hasNext()&nbsp;){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Var&nbsp;obj&nbsp;=&nbsp;cursor.next();</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Print(obj&nbsp;.num);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">例如我们还可以使用foreach.</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;&nbsp;cursor.forEach(function(data){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Print(data.num);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">limit、skip和sort</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">最常用的查询选项就是限制返回结果的数量，忽略一定数量的结果并排序。所有这些选项一定要在查询被派发到服务器之前添加。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">要限制结果数量，可以在find后面使用limit函数。例如只返回3个结果。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.coll.find().limit(3)</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">与limit相反的是skip，它会跳过前N个文档，然后返回余下的文档。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.coll.find().skip(3)</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Sort用一个对象作为参数：键是文档的键名，值代表排序的方向。1代表升序，-1代表降序。如果指定了多个键，则按照多个键的顺序逐个排序。例如：按照username升序及age降序排序。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.coll.find().sort({"username":1,"age":-1})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Mongodb的分页算法：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">假如有个商店搜索MP3，每页返回50个结果，而且价格按照从高到低排序。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.shop.find({"desc":"mp3"}).limit(50).sort({"price":-1})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">点击下一页的时候，只要跳过前50个就好了</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.shop.find({"desc":"mp3"}).limit(50).skip(50).sort({"price":-1})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">避免使用Skip略过大量结果，因为skip数量非常多的话，速度就会变的很慢。现在我们不使用skip,按照date降序显示文档进行分页。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;var&nbsp;page1&nbsp;=&nbsp;db.coll.find().sort({"date":-1}).limit(100)</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">然后，可以利用最后一条数据里面的date作为查询条件来获取下一页</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Var&nbsp;last&nbsp;=&nbsp;null;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">While(&nbsp;page1.hasNext()&nbsp;){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">last&nbsp;=&nbsp;page1.next();</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">display(last);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Var&nbsp;page2&nbsp;=&nbsp;db.coll.find({"date":{"$gt":last.date}});</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Page2.sort({"date":-1}).limit(100);</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">Mongodb随即选取文档算法：</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">在插入文档时，给每个文档添加一个额外的随机数，例如在shell中，可以用Math.random()生成一个随机数。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;db.coll.insert({"name":"joe","random":Math.random()})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">然后在集合中查询一个随即的文档，可以这样做</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;var&nbsp;random&nbsp;=&nbsp;Math.random();</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;var&nbsp;result&nbsp;=&nbsp;db.coll.findOne({"random":{"$gt":random}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">偶尔会遇到random比所有的随机数都大的话，我们在下面在加上一条语句即可。</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&gt;if(&nbsp;result&nbsp;==&nbsp;null&nbsp;){</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">&nbsp;&nbsp;result&nbsp;=&nbsp;db.coll.findOne({"random":{"$lt":random}})</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-size:14px;">}</span>\r\n	</p>\r\n</div>', 17, 'mongodb,笔记', 1, 0, 1, '2013-03-10 13:07:33');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(240, '用PHP实现定时器功能', '<span style="font-size:14px;">以前只知道用JS能实现定时器功能，而且很方便，但今天做项目过程中要实现个功能模块，做到其中某部分时，心想要是可以通过PHP来实现个定时器功能就好了，于是在网上找了找，发现用gnore_user_abort（）函数配合set_time_limit()函数 和一个死循环就可以实现类似功能。虽然项目最终未使用该功能，但觉得潜在的使用价值还是很高的，因此后来又参考网上的一些资料，整理如下：</span>\r\n<p>\r\n	<span style="font-size:14px;">　　1、范例代码：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　ignore_user_abort(true);//设置与客户机断开是否会终止脚本的执行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　set_time_limit(0); //设置脚本超时时间，为0时不受时间限制</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　ob_end_clean();//清空缓存</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　ob_start();//开始缓冲数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　while(1){</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　echo str_repeat(” “,1024);//写满IE有默认的1k buffer</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　ob_flush();//将缓存中的数据压入队列</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　flush();//输出缓存队列中的数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　echo “now time is “.date(‘h:i:s’) . ”</span><br />\r\n<span style="font-size:14px;"> “;//打印数据，其实是先将数据存入了缓存中</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　usleep(1000000);//延迟一秒（暂停一秒）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　?&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　该段程序实现的功能是每隔一秒钟输出一次包含当前时间的字符串，运行结果如图a：</span>\r\n</p>\r\n<p>\r\n	<a><img title="a" alt="php脚本" src="http://www.elongtian.com/blog/wp-content/uploads/2012/06/a1.jpg" width="312" height="270" /></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　图a</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　2、说明：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　大家应该注意到了，范例中有四句标红的代码，这是四句缓存相关的语句。通过测试，如果将该四句缓存语句去掉，则输出结果为不连贯输出，如图b所示，输出结果分块输出，即每次一次性输出八条（该数量与echo str_repeat(” “,1024);设置的字节大小相关），而非图a中的每次输出一条的连贯性输出。</span>\r\n</p>\r\n<p>\r\n	<a><img title="b" alt="php实现定时器功能" src="http://www.elongtian.com/blog/wp-content/uploads/2012/06/b.jpg" width="333" height="300" /></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　图b</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　由测试可知，如果要求实现连续、均匀的输出效果（如输出时间），则应设置缓存，即使用图a对应的方法；如果对输出显示的连续性要求不高，或者时间间隔比较大（如定期自动备份，定时加密控制等），则使用图b对应的方法即可。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　为方便理解，提供相关函数作用说明如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　①ignore_user_abort(bool):设置与客户机断开是否会终止脚本的执行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　②set_time_limit(int seconds)设置允许脚本运行的时间，单位为秒。参数值为0时不受限制。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　③ob_end_clean()：清除服务端缓存的数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　④ob_start()：开启一个缓存（可嵌套）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　⑤ob_flush()：将缓存中的数据压入队列</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　⑥flush()：输出缓存队列中的数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　⑦usleep(int m-seconds)：以指定的微秒数延缓程序的执行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　注：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　flush()和ob_flush()的正确顺序应是，先ob_flush()再flush()，不可弄混。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　usleep()函数可替换成sleep()函数，不同之处在于sleep()的参数是秒。</span>\r\n</p>', 9, '笔记', 1, 0, 1, '2013-03-10 13:08:01'),
(241, '3 创建，更新及删除文档', '<p>\r\n	<span style="font-size:14px;">插入并保存文档</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.coll.insert()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">插入的机制，是使用驱动程序将数据转为Bson的形式，然后将其送入数据库。数据库解析Bson，检验是否包含"_id"键并且文档不超过4MB。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果验证正确，则插入只是简单的将文档原样存入数据库中，这样有可能会插入无效的数据。如果需要检查，则可以在启动的时候执行&nbsp;--objcheck&nbsp;选项进行文档结构的检查。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MongoDB在插入时并不执行代码，所以这块天生就没有注入式攻击的可能</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除文档</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.coll.remove()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上述命令会删除集合coll的所有文档，但不会删除集合本身，原有的索引也会保留。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Remove可以接受一个参数作为删除条件，比如删除mailing.list集合中所有"optout"为true的人：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Db.mailing.list.remove({"optout":true})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果要删除一个集合的所有数据，建议直接删除集合然后建立索引比删除所有数据快的多</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果只是删除文档中的一个属性，则可以先得到此对象，然后删除此对象的属性（假如删除xiaozhe文档中的年龄属性）：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Var&nbsp;obj=db.coll.findOne({"name":"xiaohze"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">delete&nbsp;obj.age</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">更新文档</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">更新文档使用update方法进行修改，update有两个参数，一个是条件，一个是修改器文档，描述对找到的文档做哪些修改。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：在coll集合中有一个原始文档为{&nbsp;"_id"&nbsp;:&nbsp;ObjectId("4ffa6e9550274818c2372320"),&nbsp;"name"&nbsp;:&nbsp;"xiaozhe"}，现将原始文档更新增加一个年龄和性别。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Var&nbsp;xiaozhe=db.coll.findOne({"name":"xiaozhe"})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Xiaozhe.age=22</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Xiaozhe.sex="male"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Db.coll.update({"name":"xiaozhe"},xiaozhe)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般修改器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">通常文档只会有一部分要更新，利用原子的更新修改器，可以使这种部分更新极为高效。更新修改器是种特殊的键，用来指定复杂的更新操作，比如调整、增加或者删除键，还可能是操作数组或者内嵌文档。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$inc</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用来增加已有键的值或者在键不存在时创建一个键。例子：假如我需要统计访问www.xiaozhe.com页面的访问次数，每当访问一次就把count加上1，可以通过修改器&nbsp;"$inc"&nbsp;进行修改。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.coll.update({"url":"www.xiaozhe.com"},{"$inc":{"count":1}})&nbsp;&nbsp;只要这样就可以达到效果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$set</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用来指定一个键的值，如果这个键不存在，则创建它。如果存在，则进行更新文档。这对更新模式或者增加用户定义键来说非常方便。例如：给用户新增一个爱好是篮球。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.coll.update({"_id":ObjectId("xxxxx")},{"$set":{"favor":"baskteball"}})&nbsp;,不仅可以加字符串，还可以加数组{"$set":{"favor":["aaa","bbbb"]}}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$unset</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用来删除某个指定的键，如果删除用户的爱好.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.coll.update({"name":"xiaozhe"},{"$unset":{"favor":1}})&nbsp;至于为什么后面要加1呢，因为javascript为严格的Json对象，所以后面加个1是为了确保删除的是一个Json对象。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数组修改器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$push</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果指定的键存在，则可以用"$push"向已有的数组末尾加入一个元素，要是没有键，则会自动创建一个数组（对象也可以）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.blog.update({"name":"xiaozhe"},{"$push":{"arr":["a","b""c"]}})&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.blog.update({"name":"xiaozhe"},{"$push":{"arr":{"a":1,"b":2,"c":3}}})&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$ne和$addToSet</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">经常遇到如果这个值不在数组中，就把这个值加进去，那就可以使用$ne。例如：如果dlr不在数组arr里面，则把dlr加入到arr中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.coll.update({"arr":{"$ne":"dlr"}},{"$push":{"arr":"dlr"}})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">但是有时候$ne经常出问题，所以还是用$addToSet比较好。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">因为使用$addToSet插入的数据可以避免重复。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.test.update({"name":"xiaozhe"},{"$addToSet":{"arr":"ddd"}})</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$addToSet和$each组合起来可以添加多个不同的值</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：想一次添加多个邮件信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.coll.update(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"_id"&nbsp;:&nbsp;ObjectId("4ffe7e9d7f62b4e75dc1512b"},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{"$addToSet":{"emails":{"$each":["a@q.com","b@q.com"]}}}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$pop</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以删除数组中的元素,{"$pop":{"key":1}}是从数组末尾删除，{"$pop":{"key":-1}}是从数组开头删除。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;db.test.update(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">..&nbsp;{"name":"xiaozhe"},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">..&nbsp;{"$pop":{"email":1}}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">..&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$pull</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以将匹配的部分全部删掉，例如数组num有3个值1,2,3,4，现在删除数组num中的2。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.coll.update(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">..{"name":"xiaozhe"},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">..{"$pull":{"num":2}}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数组的定位修改器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">若数组有多个值，而我们只想对其中的一部分操作，可以通过位置或者定位操作符("$")</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：有一个文档的数据为：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">data={</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...&nbsp;"content":"xiaozhe",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...&nbsp;"comments":[</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">…&nbsp;&nbsp;{"name":"a","age":"11"},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...&nbsp;&nbsp;{"name":"b","age":"12"},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...&nbsp;&nbsp;{"name":"3","age":"13"}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...&nbsp;&nbsp;]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我要修改其中comments.2.name的值3为c,但是如果我们必须要提前知道name为3的值在数组是第几位，为了解决这个问题，我们使用$定位符。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.coll.update(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...&nbsp;{"comments.name":"3"},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...&nbsp;{"$set":{"comments.$.name":"c"}}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：定位符只会更新第一个匹配的元素，如果有多个name是3，则会匹配第一个找到的文档数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$upsert</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">upsert是一种特殊的更新，要是没有文档符合更新的条件，就会以这个条件和更新文档为基础创建一个新的文档。如果找到了匹配的文档，则正常更新。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：我们有一个点击量计算，如果存在url则点击增1，如果不存在则创建。(注意，update的第三个参数就是upsert是否开启)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">shell&gt;db.coll.update({“url”:”</span><a href="http://www.xx.com/"><span style="font-size:14px;">www.xx.com</span></a><span style="font-size:14px;">”}:{“$inc”:{“count”:1}},ture).</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">save</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">save是一个shell函数，可以在文档不存在的时候插入，文档存在时更新。它只有一个参数，要是这个文档存在“_id”键，save会调用upsert，否则会调用插入。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例子：&nbsp;&gt;&nbsp;var&nbsp;x&nbsp;=&nbsp;db.foo.findOne()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;x.num&nbsp;=&nbsp;42</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.foo.save(x)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要是不用save，最后一行的更新会很罗嗦，如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.foo.update({“_id”:x._id},x)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">更新多个文档</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认情况下，更新只会对符合条件的第一个文档执行更新操作，如果要达到多个符合条件的文档一起更新，则需要将update的第四个参数设为true。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：有可能服务器默认会更新所有匹配的文档，所以建议以后显示的表示是否要做多个文档的更新。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：要给每位用户生日的时候发送一个生日礼物。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.coll.update(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{“birthday”:”13/11/1990”},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">{“$set”:{“gift”:”Happy&nbsp;Birthday!”}},</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">false,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">true</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">)&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要想知道到底有多少个用户被更新了，可以执行如下命令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;db.runCommand({getLastError:1}),里面的n值就是更新的数量。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">返回已更新的文档</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">findAndModify</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用getLastError命令仅能得到有限的信息，并不能返回已更新的文档，可以使用findAndModify命令来做到，但是速度更新速度慢了点，但是得到的信息多一点。其中有几个参数如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">findAndModify:字符串，集合名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">query:查询文档，用来检索文档的条件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sort:排序结果的条件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">update:修改器文档，对所找到的文档执行更新</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">remove:布尔类型，表示是否删除文档</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">new:布尔型，表示返回的是更新前还是更新后的文档，默认是更新前</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：update和remove必须有一个并且只能有其中一个。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Exp:&nbsp;更新user文档，用户名为xiaozhe，年龄修改为21。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Var&nbsp;obj=({"findAndModify":"user",</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"query":{"name":"xiaozhe"},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//查询条件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"update":{"$set":{"age":21}}, //更新值</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"new":true &nbsp;&nbsp;//返回更新后文档</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">直接打印obj</span>\r\n</p>', 17, 'mongodb,笔记', 1, 0, 1, '2013-03-10 13:09:31'),
(242, 'ubuntu下LAMP环境安装(最佳的PHP环境搭建)', '<p>\r\n	<span style="font-size:14px;">最近新换了Xubuntu，安装配置配PHP环境坡费了些周折，下面将安装过程写下来，希望能给大家以后的安装有所帮助！</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Linux系统下源代码包方式</span><br />\r\n<span style="font-size:14px;"> 安装前准备</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">本节的源代码包安装方式，使用的Linux操作系统主要以Xubuntu操作系统系列为主。</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">获取软件包</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">软件名称</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">下载地址</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">httpd-2.2.9.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://www.apache.org/</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">mysql-5.0.41.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://dev.mysql.com/downloads/</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">php-5.2.6.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://www.php.net/downloads.php</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">phpMyAdmin-3.0.0-rc1-all-languages.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://www.phpmyadmin.com/</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">libxml2-2.7.8.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<a href="http://xmlsoft.org/sources/"><span style="font-size:14px;">http://xmlsoft.org/sources/</span></a>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">libmcrypt-2.5.8.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://prdownloads.sourceforge.net/mcrypt/libmcrypt-2.5.8.tar.gz?use_mirror=peterhost</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">zlib-1.2.3.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://www.zlib.net/zlib-1.2.3.tar.gz</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">gd-2.0.35.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://www.libgd.org/releases/gd-2.0.35.tar.gz</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">Autoconf-2.61.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">ftp://ftp.gnu.org/gnu/autoconf/autoconf-2.61.tar.gz</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">freetype-2.3.5.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://download.savannah.gnu.org/releases/freetype/freetype-2.3.5.tar.gz</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">libpng-1.2.31.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng-1.2.31.tar.gz</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">jpegsrc.v6b.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://www.ijg.org/files/jpegsrc.v6b.tar.gz</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">ZendOptimizer330a.tar.gz</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">http://wt1.mycodes.net/soft/20071108/ZendOptimizer330a.tar.gz</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">卸载默认的低版本环境</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">目前发行的Linux操作系统版本中，如果选择默认全部安装，就已经安装了LAMP环境，但是版本相对都比较低。我们可以再安装一个LAMP环境和原来的并存，但是这样做没有必要，因为同时只能开启一个LAMP环境。所要我们要在安装之前，先应检查一下系统中是否已经安装了低版本的环境，如果已经安装过了，停止原来的服务运行，或者把原来的环境卸载掉。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">编译安装过程介绍</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">一、解压tar.gz为后缀的压缩软件包</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">二、在Linux系统中源代码包安装过程</span>\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">配置（configure）</span>\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">编译（make）</span>\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">安装（make install）</span>\r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">各个软件编译安装顺序</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">搭建LAMP环境时，需要安装的所有软件都要按照一定的顺序安装，我们按Apache-&gt;MySQL-&gt;PHP顺序安装。但在安装PHP之前，应先安装PHP5需要的最新版本库文件，例如libxml2、libmcrypt以及GD2库等文件。安装GD2库是为了让PHP5支持GIF、PNG和JPEG图片格式，所以在安装GD2库之前还要先安装最新的zlib、libpng、freetype和jpegsrc等库文件。而且中间还会穿插安装一些软件。读者可以按照本节提供的顺序安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装libxml2最新库文件</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">./configure --prefix=/usr/local/libxml2</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;make</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;make install</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装libmcrypt最新库文件</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">./configure --prefix=/usr/local/libmcrypt</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;make</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">#&nbsp;make installcd</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">cd /usr/local/src/libmcrypt-2.5.8/libltdl</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">./configure --enable-ltdl-install</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">make</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">make install</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装zlib最新库文件</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#./configure --prefix=/usr/local/zlib</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;make</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;make install</span>\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装libpng最新库文件</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;./configure --prefix=/usr/local/libpng</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;make</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;make install</span>\r\n		</p>\r\n		<p>\r\n			<span style="font-size:14px;">注：可能会遇到错误configure: error: zlib not installed</span>\r\n		</p>\r\n		<p>\r\n			<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;解决办法：在新立得软件管理器里找到并安装zlib1g – dev</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装jpeg6最新库文件</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#mkdir /usr/local/jpeg6&nbsp;//建立jpeg6软件安装目录</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;mkdir /usr/local/jpeg6/bin&nbsp;//建立存放命令的目录</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;mkdir /usr/local/jpeg6/lib&nbsp;//创建jpeg6库文件所在目录</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;mkdir /usr/local/jpeg6/include&nbsp;//建立存放头文件目录</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;mkdir -p /usr/local/jpeg6/man/man1&nbsp;//建立存放手册的目录</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;./configure \\</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --prefix=/usr/local/jpeg6/ \\</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--enable-shared \\ //建立共享库使用的GNU的libtool</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--enable-static //建立静态库使用的GNU的libtool</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">Make &amp;&amp; make install</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装freetype最新库文件</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;"># ./configure --prefix=/usr/local/freetype</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;"># make</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;"># make install</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装autoconf最新的库文件</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;./configure</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;make</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;make install</span>\r\n		</p>\r\n		<p>\r\n			<span style="font-size:14px;">注：可能遇到的问题&nbsp;configure: error: GNU M4 1.4 is required</span>\r\n		</p>\r\n		<p>\r\n			<span style="font-size:14px;">解决办法：在新立得软件管理器中搜索m4并安装</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装最新的GD库文件</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#./configure \\&nbsp;//配置命令</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --prefix=/usr/local/gd2/ \\ //指定软件安装的位置</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --with-zlib=/usr/local/zlib/ \\ //指定到哪去找zlib库文件的位置</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --with-jpeg=/usr/local/jpeg6/ \\ //指定到哪去找jpeg库文件的位置</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --with-png=/usr/local/libpng/ \\ //指定到哪去找png库文件的位置</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --with-freetype=/usr/local/freetype/ //指定到哪去找freetype 2.x字体库的位置</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">　　&nbsp;&nbsp;</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">Make &amp;&amp; make install</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">注：可能遇到的问题&nbsp;gd_png.c:16:53: fatal error: png.h: No such file or directory</span><br />\r\n		<p>\r\n			<span style="font-size:14px;">&nbsp;解决办法：vim gd_png.c</span><br />\r\n<span style="font-size:14px;"> 　　　　　将</span><br />\r\n<span style="font-size:14px;"> 　　　　　#include “png.h”&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> 　　　　　替换成：</span><br />\r\n<span style="font-size:14px;"> 　　　　　#include “/usr/local/libpng/include/png.h”&nbsp;</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装新版本的Apache服务器</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">]#./configure&nbsp;\\&nbsp;//执行当前目录下软件自代的配置命令</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --prefix=/usr/local/apache2&nbsp;\\&nbsp;//指定Apache软件安装的位置</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --sysconfdir=/etc/httpd&nbsp;\\&nbsp;//指定Apache服务器的配置文件存放位置</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --with-z=/usr/local/zlib/ \\&nbsp;//指定zlib库文件的位置</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --with-included-apr&nbsp;\\&nbsp;//使用捆绑APR/APR-Util的副本</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --enable-so \\&nbsp;//以动态共享对象(DSO)编译</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --enable-deflate=shared \\&nbsp;//缩小传输编码的支持</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --enable-expires=shared&nbsp;\\&nbsp;//期满头控制</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --enable-rewrite=shared \\&nbsp;//基于规则的URL操控</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt; --enable-static-support&nbsp;//建立一个静态链接版本的支持</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;"># make &amp;&amp; make install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装ncurses</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style="font-size:14px;">./configure --with-shared --without-debug --without-ada --enable-overwrite</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">sudo make&nbsp;</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">sudo make install</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">测试Apache服务器</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">检查安装目录</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">检查配置文件目录</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">/usr/local/apache2/bin/apachectl start</span>\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">//启动Apache</span>\r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">/usr/local/apache2/bin/apachectl stop</span>\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">//关闭Apache</span>\r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;netstat -tnl|grep 80&nbsp;//查看80端口是否开启</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">http://localhost/去访问Apache服务器</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">echo "/usr/local/apache2/bin/apachectl start" &gt;&gt; /etc/rc.d/rc.local</span>\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">添加自启动</span>\r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装MySQL数据库管理系统</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;groupadd mysql</span>\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">//添加一个mysql标准组</span>\r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">useradd -g mysql mysql</span>\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">//添加mysql用户并加到mysql组中</span>\r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;./configure \\</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--prefix=/usr/local/mysql \\</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-extra-charsets=all</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#make &amp;&amp; make install</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">配置MySQL数据库</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">创建MySQL数据库服务器的配置文件</span>\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">#&nbsp;cp support-files/my-medium.cnf /etc/my.cnf</span>\r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">/usr/local/mysql/bin/mysql_install_db --user=mysql</span>\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">//创建授权表</span>\r\n				</p>\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;chown -R root /usr/local/mysql&nbsp;&nbsp;//将文件的所有属性改为root用户</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;chown -R mysql /usr/local/mysql/var&nbsp;//将数据目录的所有属性改为mysql用户</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;chgrp -R mysql /usr/local/mysql //将组属性改为mysql组</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;/usr/local/mysql/bin/mysqld_safe --user=mysql &amp;&nbsp;启动数据库</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;netstat -tnl|grep 3306&nbsp;//查看3306端口是否开启</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;/usr/local/mysql/bin/mysqladmin version&nbsp;//简单的测试</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;/usr/local/mysql/bin/mysqladmin variables&nbsp;//查看所有mysql参数</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;/usr/local/mysql/bin/mysql -u root&nbsp;//没有密码可以直接登录本机服务器</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">mysql&gt; DELETE FROM mysql.user WHERE Host=''localhost'' AND User='''';</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">mysql&gt; FLUSH PRIVILEGES;</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">mysql&gt; SET PASSWORD FOR ''root''@''localhost'' = PASSWORD(''123456'');</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;/usr/local/mysql/bin/mysql -u root -h localhost –p&nbsp;//回车进入MySQL客户端</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;/usr/local/mysql/bin/mysqladmin -u root –p shutdown&nbsp;//关闭MySQL数据库</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装最新版本的PHP模块</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#&nbsp;./configure \\&nbsp;//执行当前目录下软件自代的配置命令</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--prefix=/usr/local/php \\&nbsp;//设置PHP5&nbsp;的安装路径</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-config-file-path=/usr/local/php/etc \\&nbsp;//指定PHP5配置文件存入的路径</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-apxs2=/usr/local/apache2/bin/apxs \\&nbsp;//告诉PHP查找Apache 2的地方</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-mysql=/usr/local/mysql/ \\ //指定MySQL的安装目录</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-libxml-dir=/usr/local/libxml2/ \\&nbsp;//告诉PHP放置libxml2库的地方</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-png-dir=/usr/local/libpng/ \\&nbsp;//告诉PHP放置libpng库的地方</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-jpeg-dir=/usr/local/jpeg6/ \\&nbsp;//告诉PHP放置jpeg库的地方</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-freetype-dir=/usr/local/freetype/ \\&nbsp;//告诉PHP放置freetype库的地方</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-gd=/usr/local/gd2/ \\&nbsp;//告诉PHP放置gd库的地方</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-zlib-dir=/usr/local/zlib/ \\&nbsp;//告诉PHP放置zlib库的地方</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-mcrypt=/usr/local/libmcrypt/ \\&nbsp;//告诉PHP放置libmcrypt库的地方</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--with-mysqli=/usr/local/mysql/bin/mysql_config \\&nbsp;//变量激活新增加的MySQLi功能</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--enable-soap \\&nbsp;//变量激活SOAP和Web services支持</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--enable-mbstring=all \\&nbsp;//使多字节字符串支持</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&gt;&nbsp;--enable-sockets&nbsp;//变量激活socket通讯特性</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">#make &amp;&amp; make install</span>\r\n		</p>\r\n		<p>\r\n			<span style="font-size:14px;">如果一次都执行不过去，可以先执行</span>\r\n		</p>\r\n		<p>\r\n			<span style="font-size:14px;">''./configure'' ''--prefix=/usr/local/php'' ''--with-mysql=/usr/local/mysql'' ''--with-mysqli=/usr/local/mysql/bin/mysql_config''</span>\r\n		</p>\r\n		<p>\r\n			<span style="font-size:14px;">注：有可能缺少mysql-devel&nbsp;这个包 从网上下载就可以了</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">LAMP环境整合</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">]#&nbsp;cp php.ini-dist /usr/local/php/etc/php.ini&nbsp;//创建配置文件</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">vi /etc/httpd/httpd.conf&nbsp;//使用vi编辑apache配置文件</span>\r\n		</p>\r\n		<ul>\r\n			<li>\r\n				<p>\r\n					<span style="font-size:14px;">Addtype application/x-httpd-php .php .phtml #添加这一条</span>\r\n				</p>\r\n			</li>\r\n			<li>\r\n				<span style="font-size:14px;">/usr/local/apache2/bin/apachectl restart 重启apache服务</span><br />\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;"># vi test.php //编辑test.php文件</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">&lt;?php</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">phpinfo();</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">?&gt;</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">安装Zend加速器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./install.sh&nbsp;//执行安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：如果./install.sh执行有问题，则用./install-tty</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">phpMyAdmin的安装</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">cp -a phpMyAdmin-3.0.0-rc1-all-languages \\</span>\r\n		</p>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">/usr/local/apache2/htdocs/phpmyadmin&nbsp;//拷贝目录到指定位置并改名为phpmyadmin</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">cd /usr/local/apache2/htdocs/phpmyadmin/</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">cp config.sample.inc.php config.inc.php</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">注：可能遇到的问题&nbsp;配置文件现在需要绝密的短语密码(blowfish_secret)&nbsp;</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">解决办法：vim config.inc.php //打开config.inc.php 配置文件搜索</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">$cfg[''blowfish_secret''] = ”; //将后面单引号里面随便填入个字符串即可！</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">修改完后，记得重起Apache</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">phpMyAdmin的配置</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">http身份验证模式</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">cookie身份验证模式</span>\r\n		</p>\r\n	</li>\r\n	<li>\r\n		<p>\r\n			<span style="font-size:14px;">config身份验证模式</span>\r\n		</p>\r\n	</li>\r\n</ul>', 10, 'linux,ubuntu,lamp', 1, 0, 1, '2013-03-10 13:09:59');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(243, 'MongoDB权威指南笔记 2 Mongodb入门', '<p>\r\n	<span style="font-size:14px;">Mongodb的基本概念</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.文档是Mongodb中数据的基本单元，非常类似于关系数据库管理系统中的行(但是比行要复杂得多)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.类似地，集合可以被看做是没有模式的表。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.Mongodb的单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.Mongodb自带简洁但功能强大的Javascript&nbsp;Shell，这个工具对于管理Mongodb实例和操作数据作用非常大。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.每一个文档都有一个特殊的键"_id"，它在文档所处的集合中是唯一的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">文档中键的和值的说明</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.文档的键是字符串。除了少数例外情况，键可以使用任意的UTF-8字符。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.键中不能含有\\0(空字符)，这个字符用来表示键的结尾。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.''.''和''$''有特别的意义，一般不使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.以下划线"_"开头的键是保留的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.Mongodb不但区分类型也区分大小写。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.Mongodb的文档中不能有重复的键。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">集合</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">集合就是一组文档。如果说mongodb中文档类似于关系数据库中的行，那么集合就如果表。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mongodb的数据库命名应该全是小写。注意：数据库名最终会变成文件系统里面的文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有一些数据库是保留的，可以直接访问这些有特殊作用的数据库。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">admin数据库：这是root用户数据库，如果将一个用户添加到此数据库中，这个用户默认继承所有数据库的权限。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">local数据库：这个数据永远不会被复制，可以用来存储限于本地单台服务器的任何集合。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">config数据库：当mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mongodb默认运行的端口号是&nbsp;27017，如果通过http访问，则只需要在默认端口上加1000即可，即localhost:28017</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mongodb可以使用任何的javascript函数库，比如Math.ceil()等</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">选择数据库：use&nbsp;xiaozhe&nbsp;.&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看当前数据库：db</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mongodb&nbsp;Shell的基本操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在shell中操作数据会用到4个基本操作：创建，读取，更新和删除。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.创建</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">insert函数添加一个文档到集合里面。假如创建一篇博客文章，首先创建一个局部变量post，内容是代表文档的javascript对象。如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;post={''title'':''my&nbsp;blog&nbsp;title'',&nbsp;''content'':''my&nbsp;blog&nbsp;content'',&nbsp;''date'':new&nbsp;Date()}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后把用insert方法把这个文档插入到blog集合中&nbsp;&gt;db.blog.insert(post)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看是否插进了集合中：&gt;db.blog.find()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.读取</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">find会返回集合里面所有的文档。若只是查看一个文档，可以用findone方法。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;db.blog.findOne()</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.更新</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">更新使用update。Update接受2个参数，第一个是要更新文档的限定条件，第二个是新的文档。假设我们想给前面的post文档新增一个comment键，&gt;post.comment=[],然后执行update更新一个标题&gt;db.blog.update{''title'':''my&nbsp;blog&nbsp;new&nbsp;title'',post}.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们用find查看一下就会出现更新了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.删除</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">db.blog.remove()可以接受一个文档为参数，用来删除指定的数据行，如果不加参数，则视为删除所有数据。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用Shell的窍门</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">由于mongo是一个javascript&nbsp;shell，所以我们可以通过输入&nbsp;help&nbsp;查看帮助。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有个了解函数功用的技巧，就是在输入函数的时候不加括号，则会显示出该函数的源码，如：db.blog.update</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">蹩脚的集合名，当用户的集合是Mongodb属性时，例如集合是version，则用db.version会返回当前的版本号。此时我们应该：db.getCollection("version")&nbsp;这样写。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">基本数据类型</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.数字，mongodb支持三种类型，34位和64位整形，64位浮点</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.日期，在mongodb中调用javascript的Date对象作为日期</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.数组，mongodb能理解其结构并能深入操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.内嵌文档，就是把整个mongodb的文档作为另一个文档中一个键的值，同数组一样，mongodb能很好的操作其结构</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5._id和ObjectId，ObjectId是_id的默认类型，是全局唯一的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ObjectId，是由12字节，每个字节是2位十六进制数字，总共是一个24位的字符串。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其中0-3字节是时间戳（单位秒），4-6字节是主机名散列值，7-8字节是PID（进程标识符，确保每个进程的ObjectId不同），9-11字节是计数器（确保同一进程的同一秒产生的ObjectId不同，最大值256的3次方）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">_id可以由Mongodb服务器来完成，但是一般会在客户端由驱动程序完成，因为在客户端完成可以减少服务器的开销，将事务交给客户端来做，就减轻了数据库扩展的负担。并且在客户端生产的ObjectId，驱动程序能提供更加丰富的，由自己扩展的API。</span>\r\n</p>', 17, 'mongodb,笔记', 1, 0, 1, '2013-03-10 13:10:16'),
(244, 'JS操作JSON总结', '<p>\r\n	<span style="font-size:14px;">JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式，采用完全独立于语言的文本格式，是理想的数据交换格式。同时，JSON是 JavaScript 原生格式，这意味着在 JavaScript 中处理 JSON数据不须要任何特殊的 API 或工具包。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;本文主要是对JS操作JSON的要领做下总结。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;在JSON中，有两种结构：对象和数组。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;1. 一个对象以“{”（左括号）开始，“}”（右括号）结束。每个“名称”后跟一个“:”（冒号）；“‘名称/值’ 对”之间运用 “,”（逗号）分隔。 名称用引号括起来；值如果是字符串则必须用括号，数值型则不须要。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;var o={"xlid":"cxh","xldigitid":123456,"topscore":2000,"topplaytime":"2009-08-20"}；</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;2. 数组是值（value）的有序集合。一个数组以“[”（左中括号）开始，“]”（右中括号）结束。值之间运用 “,”（逗号）分隔。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;var jsonranklist=[{"xlid":"cxh","xldigitid":123456,"topscore":2000,"topplaytime":"2009-08-20"},{"xlid":"zd","xldigitid":123456,"topscore":1500,"topplaytime":"2009-11-20"}];</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;为了方便地处理JSON数据，JSON提供了json.js包，下载地址：</span><a target="_blank" href="http://www.json.org/json.js"><span style="font-size:14px;">http://www.json.org/json.js</span></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;在数据传输流程中，json是以文本，即字符串的形式传递的，而JS操作的是JSON对象，所以，JSON对象和JSON字符串之间的相互转换是关键。例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;JSON字符串:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;var str1 = ''{ "name": "cxh", "sex": "man" }'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;JSON对象:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;var str2 = { "name": "cxh", "sex": "man" };</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;一、JSON字符串转换为JSON对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;要运用上面的str1，必须运用下面的要领先转化为JSON对象：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;//由JSON字符串转换为JSON对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;var obj = eval_r(''('' + str + '')'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;var obj = str.parseJSON(); //由JSON字符串转换为JSON对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;或者</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;var obj = JSON.parse(str); //由JSON字符串转换为JSON对象</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;然后，就可以这样读取：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Alert(obj.name);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;Alert(obj.sex);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;特别留心：如果obj本来就是一个JSON对象，那么运用 eval（）函数转换后（哪怕是多次转换）还是JSON对象，但是运用 parseJSON（）函数处理后会有疑问（抛出语法异常）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;二、可以运用 toJSONString()或者全局要领 JSON.stringify()将JSON对象转化为JSON字符串。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;var last=obj.toJSONString(); //将JSON对象转化为JSON字符</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;或者</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;var last=JSON.stringify(obj); //将JSON对象转化为JSON字符</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;alert(last);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;留心：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;上面的多个要领中，除了eval_r()函数是js自带的之外，其他的多个要领都来自json.js包。新版本的 JSON 修改了 API，将 JSON.stringify() 和 JSON.parse() 两个要领都注入到了 Javascript 的内建对象里面，前者变成了 Object.toJSONString()，而后者变成了 String.parseJSON()。如果提示找不到toJSONString()和parseJSON()要领，则说明您的json包版本太低。</span>\r\n</p>', 13, 'json', 1, 0, 1, '2013-03-10 13:10:41'),
(245, '设置Ubuntu系统和Vim字符集为utf8 ', '<p>\r\n	<span style="font-size:14px;">设置Ubuntu系统和Vim字符集为utf8</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ubuntu编码设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">首先我们将ubuntu系统设置为utf8的字符集：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假设我们安装中文包：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1、安装中文语言包</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;apt-get&nbsp;install&nbsp;language-pack-zh</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、用vim配置语言环境变量</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;vim&nbsp;/etc/environment</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;vim&nbsp;/etc/default/locale</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在下面添加如下两行</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">LANG="zh_CN.UTF-8"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">LANGUAGE="zh_CN:zh:en_US:en"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你想用英文环境了，改成这两行就OK</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">LANG="en_US.UTF-8"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">LANGUAGE="en_US:en"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3、重启Ubuntu&nbsp;Server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">reboot</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4、可以用locale查看一下环境变量...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">locale</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Vim编码设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;vim&nbsp;&nbsp;/etc/vim/vimrc&nbsp;&nbsp;在打开的文件最下面加上以下两段字符串</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">let&nbsp;&amp;termencoding=&amp;encoding</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">set&nbsp;fileencodings=utf-8,gb18030,gbk,gb2312,big5</span>\r\n</p>', 10, '字符集,linux,ubuntu', 1, 0, 1, '2013-03-10 13:11:12'),
(246, 'Vsftp的配置方法', '<p>\r\n	<span style="font-size:14px;">Vsftp的配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.&nbsp;安装vsftpd</span><br />\r\n<span style="font-size:14px;"> &nbsp;sudo&nbsp;apt-get&nbsp;install&nbsp;vsftpd</span><br />\r\n<span style="font-size:14px;"> &nbsp;启动</span><br />\r\n<span style="font-size:14px;"> &nbsp;sudo&nbsp;/etc/init.d/vsftpd&nbsp;start</span><br />\r\n<span style="font-size:14px;"> &nbsp;停止</span><br />\r\n<span style="font-size:14px;"> &nbsp;sudo&nbsp;/etc/init.d/vsfptd&nbsp;stop</span><br />\r\n<span style="font-size:14px;"> &nbsp;重启</span><br />\r\n<span style="font-size:14px;"> &nbsp;sudo&nbsp;/etc/init.d/vsfptd&nbsp;restart&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.&nbsp;配置文件</span><br />\r\n<span style="font-size:14px;"> &nbsp;1)&nbsp;/etc/vsftpd/vsftpd.conf&nbsp;&nbsp;#ftp的配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;2)&nbsp;/etc/pam.d/vsftpd&nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;3)&nbsp;/etc/ftpusers&nbsp;#其它资料都是这个目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;4)&nbsp;/etc/vsftpd.user_list&nbsp;#安装好Vsftpd后是没有的,要自己建立,用来写入允许访问的用户名.</span><br />\r\n<span style="font-size:14px;"> &nbsp;5)&nbsp;/etc/vsftpd.chroot_list&nbsp;#限制用户在默认目录的配置,要自己建.</span><br />\r\n<span style="font-size:14px;"> &nbsp;6)&nbsp;/usr/sbin/vsftpd&nbsp;&nbsp;#这是主要执行档。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.&nbsp;vsftpd.conf配置文件解析</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#anonymous_enable&nbsp;是否允许匿名ftp,如否则选择NO，默认允许匿名访问，</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意当允许是所有用户均视为匿名登录。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#local_enable&nbsp;是否允许本地用户访问，是指VSFTP所在机器上的注册用户。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#local_umask=022&nbsp;默认的umask码</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#write_enable&nbsp;是否允许本地用户修改和删除</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#local_umask=022&nbsp;FTP上传文件权限&nbsp;，默认是077</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#anon_upload_enable=YES&nbsp;是否允许匿名用户上传</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#anon_mkdir_write_enable=YES&nbsp;是否允许匿名用户的写和创建目录的权限</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#dirmessage_enable=YES&nbsp;当切换目录时，是否显示该目录下message隐藏文件的内容</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#xferlog_enable=YES&nbsp;是否激活上传和下载的日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#connect_from_port_20=YES&nbsp;是否启动FTP数据端口20的连接请求</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#chown_uploads=YES&nbsp;是否改变上传文件的所有者</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#chown_username=whoever&nbsp;改变上传文件的所有着为whoever</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#xferlog_file=/var/log/vsftpd.log&nbsp;上传/下载日志文件所默认的路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#xferlog_std_format=YES&nbsp;是否使用标准的ftpd&nbsp;xferlog日志格式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#idle_session_timeout=600&nbsp;是否将在用户会话空闲10分钟后被中断</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#data_connection_timeout=120&nbsp;是否将在数据连接空闲2分钟后被中断</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#nopriv_user=ftpsecure&nbsp;是否运行vsftpd需要的非特殊系统用户默认nobody</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#async_abor_enable=YES&nbsp;是否是否允许运行特殊的FTP命令async</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#ascii_upload_enable=YES&nbsp;是否启用上传的ascii传输方式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#ascii_download_enable=YES&nbsp;是否启用下载的ascii传输方式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#ftpd_banner=Welcome&nbsp;to&nbsp;blah&nbsp;FTP&nbsp;service.&nbsp;用户连接服务器后显示信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#deny_email_enable=YES&nbsp;是否允许某些匿名用户使用邮件地址（默认的）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">local_root=/var/www&nbsp;#本地用户登录转入www目录</span><br />\r\n<span style="font-size:14px;"> anon_root=/home/ftp&nbsp;#匿名用户登录转入ftp目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chroot_local_user=NO&nbsp;#是否设置活动范围限制在自家目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chroot_list_enable=YES</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chroot_list_file=/etc/vsftpd.chroot_list</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">增加用户配置：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">userlist_enable=YES</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">userlist_deny=NO&nbsp;#userlist_deny=NO&nbsp;，这样一来只有vsftpd.user_list文件中指定的用户才能访问</span><br />\r\n<span style="font-size:14px;"> userlist_file=/etc/vsftpd.user_list</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：如果你想让你登陆Linux的账号也能访问，只要把用户名写进&nbsp;vsftpd.user_list&nbsp;就行了。（还是要确保&nbsp;ftpusers&nbsp;文件中没有这个用户）。另外别忘了重启服务。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假如我们创建一个andy用户：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;sudo&nbsp;useradd&nbsp;–g&nbsp;ftp&nbsp;–d&nbsp;/home/andy&nbsp;–s&nbsp;/bin/bash&nbsp;–m&nbsp;andy</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建密码：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;sudo&nbsp;passwd&nbsp;andy</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置用户的权限：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有两种设置chroot的方法：&nbsp;</span><br />\r\n<span style="font-size:14px;"> （1）设置对所有的本地用户执行chroot（即活动范围限制在自家目录)只要将chroot_local_user的值设&nbsp;为YES即可，&nbsp;即：&nbsp;chroot_local_user=YES&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">（2）设置指定的用户执行chroot需要如下的设置：&nbsp;</span><br />\r\n<span style="font-size:14px;"> chroot_local_user=NO&nbsp;</span><br />\r\n<span style="font-size:14px;"> chroot_list_enable=YES&nbsp;(默认的)</span><br />\r\n<span style="font-size:14px;"> chroot_list_file=&nbsp;/etc/vsftpd.chroot_list&nbsp;</span><br />\r\n<span style="font-size:14px;"> 这样，只有/etc/vsftpd.chroot_list文件中指定的用户才执行chroot。&nbsp;</span><br />\r\n<span style="font-size:14px;"> 注意&nbsp;：上面所提及的文件/etc/vsftpd.chroot_list和下面将要提及的文件&nbsp;/etc/vsftpd.user_list的格式要求均为每个&nbsp;用户名占一行。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：如果不能通过filezilla上传文件，则记得更改文件夹的拥有者。</span>\r\n</p>', 10, 'ftp,linux,ubuntu', 1, 0, 1, '2013-03-10 13:11:43'),
(247, 'Lvs dr服务器脚本配置', '<p>\r\n	<span style="font-size:14px;">Lvs&nbsp;Dr模式的模拟测试</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01017bgo&amp;url=http://s11.sinaimg.cn/orignal/788e5b7agc57b73d4720a" target="_blank"><img src="http://s11.sinaimg.cn/middle/788e5b7agc57b73d4720a&amp;690" height="306" width="631" alt="Lvs&nbsp;&lt;wbr&gt;dr服务器脚本配置" title="Lvs&nbsp;&lt;wbr&gt;dr服务器脚本配置" /></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.用ifconfig配置IP，Lvs的ip为200.168.10.1,&nbsp;realserver1的ip为200.168.10.2，realserver2的ip为200.168.10.3，虚拟IP&nbsp;为200.168.10.10。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.Lvs&nbsp;server配置：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ifconfig&nbsp;eth0:0&nbsp;200.168.10.10&nbsp;netmask&nbsp;255.255.255.255</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;route&nbsp;add&nbsp;-host&nbsp;200.168.10.10&nbsp;dev&nbsp;eth0:0</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipvsadm&nbsp;-At&nbsp;200.168.10.10:80&nbsp;-s&nbsp;rr</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipvsadm&nbsp;-at&nbsp;200.168.10.10&nbsp;-r&nbsp;200.168.10.2&nbsp;-g</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipvsadm&nbsp;-at&nbsp;200.168.10.10&nbsp;-r&nbsp;200.168.10.3&nbsp;-g</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipvsadm&nbsp;-L&nbsp;-n</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Real&nbsp;server配置:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ifconfig&nbsp;lo:0&nbsp;200.168.10.10&nbsp;netmask&nbsp;255.255.255.255</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;route&nbsp;add&nbsp;-host&nbsp;200.168.10.10&nbsp;dev&nbsp;lo:0</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;echo&nbsp;1&gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;echo&nbsp;2&gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;echo&nbsp;1&gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;echo&nbsp;2&gt;/proc/sys/net/ipv4/conf/all/arp_announce</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.以上配置完成后，输入200.168.10.10可以用来访问服务器</span>\r\n</p>', 10, 'lvs,linux,ubuntu', 1, 0, 1, '2013-03-10 13:12:11'),
(248, 'Lvs Nat模式的模拟测试', '<p>\r\n	<span style="font-size:14px;">Lvs&nbsp;Nat模式的模拟测试</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01017bek&amp;url=http://s16.sinaimg.cn/orignal/788e5b7agc57a5e9dd8cf" target="_blank"><img src="http://s16.sinaimg.cn/middle/788e5b7agc57a5e9dd8cf&amp;690" height="275" width="554" alt="Lvs&nbsp;&lt;wbr&gt;Nat模式的模拟测试" title="Lvs&nbsp;&lt;wbr&gt;Nat模式的模拟测试" /></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">首先我们用VM虚拟机虚拟三台linux主机，分别命名为Lvs-server(注意LVS服务器建立2张网卡)，real-server1，real-server2.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.我们将本机的网卡全部禁止，只使用一张虚拟网卡VM1,修改IP为8.8.8.1，子网掩码为255.255.255.0用来测试。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.然后将LVS-server的第一块网卡VM1使用本机网卡使其与本机处于同一网段。第二块网卡假设使用VM2，为了使其处于同一网段，real-server1和server2都使用VM2网卡。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.因为LVS左边IP是8.8.8.8,右边IP是192.168.10.1，我们现在开始配置LVS的IP。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们现在配置LVS临时IP地址，作为测试。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipconfig&nbsp;eth0&nbsp;8.8.8.8&nbsp;netmask&nbsp;255.255.255.0</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipconfig&nbsp;ech1&nbsp;192.168.10.1&nbsp;netmask&nbsp;255.255.255.0</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Real-server1的IP地址：ipconfig&nbsp;ech0&nbsp;192.168.10.2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Real-server2的IP地址：ipconfig&nbsp;ech0&nbsp;192.168.10.3</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.检查防火墙&nbsp;shell&gt;&nbsp;iptables&nbsp;-L&nbsp;-n，如果没有关闭请关闭防火墙。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.如果没有安装ipvsadm，则必须先安装ipvsadm。然后执行以下脚本：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;echo&nbsp;1&gt;/proc/sys/net/ipv4/ip_forward&nbsp;&nbsp;&nbsp;#表示开启IP转发表，开启了LVS的路由功能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipvsadm&nbsp;-C&nbsp;#清除以前所有的调度表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipvsadm&nbsp;-At&nbsp;8.8.8.8:80&nbsp;-s&nbsp;rr&nbsp;#A代表新增一个端口,t代表tcp传输,-s&nbsp;rr表示是以轮叫的算法配置。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipvsadm&nbsp;-at&nbsp;8.8.8.8:80&nbsp;-r&nbsp;192.168.10.2:80&nbsp;-m&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;ipvsadm&nbsp;-at&nbsp;8.8.8.8:80&nbsp;-r&nbsp;192.168.10.3:80&nbsp;-m&nbsp;&nbsp;&nbsp;&nbsp;#a和r代表访问8.8.8.8时转移至IP&nbsp;192.168.10.2&nbsp;.-m代表nat模式(-g代表DR模式，-i&nbsp;代表ip-tun模式)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.开启了路由管道之后，我们需要模拟外部用户和内部网络，则我们还需要配置内部网络的网关，如果内部私有网络没有网关，则内部的数据不能传输出来。配置一个临时网关的脚本：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Real-server1:&nbsp;shell&gt;route&nbsp;add&nbsp;default&nbsp;gw&nbsp;192.168.10.1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Real-server2:&nbsp;shell&gt;route&nbsp;add&nbsp;default&nbsp;gw&nbsp;192.168.10.1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n7.以上配置完成后，我们可以在本机访问8.8.8.8，第一次打开第一个服务器的页面，刷新后打开第二个服务器的页面，依此类推......\r\n<p>\r\n	<br />\r\n</p>', 10, 'lvs,linux,ubuntu', 1, 0, 1, '2013-03-10 13:12:42'),
(249, '有关XML的一些操作', '<span style="font-size:14px;">最近接了一个项目，很多功能需要以xml为接口来回进行一系列的操作。现在附下我的一点经验。</span><br />\r\n<span style="font-size:14px;"> 情况一：当是你收到xml信息进行处理的时候,可以用以下步骤 ：</span><br />\r\n<span style="font-size:14px;"> //输出严格的xml格式</span><br />\r\n<span style="font-size:14px;"> &nbsp;header ( ''Content-type: text/xml'' );</span><br />\r\n<span style="font-size:14px;"> &nbsp;echo pack ( "C3" , 0xef, 0xbb, 0xbf );</span><br />\r\n<span style="font-size:14px;"> &nbsp;//通过php输入流得到数据</span><br />\r\n<span style="font-size:14px;"> &nbsp;$userinfo = file_get_contents(''php://input'');</span><br />\r\n<span style="font-size:14px;"> //将得到的字符串数据对象化</span><br />\r\n<span style="font-size:14px;"> &nbsp;$xml_obj = simplexml_load_string($userinfo);</span><br />\r\n<span style="font-size:14px;"> &nbsp;$xml_arr = xmltoarray($xml_obj);</span><br />\r\n<span style="font-size:14px;"> 然后使用下面函数进行处理。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> function xmltoarray($object, &amp;$tmparr=array()) {</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;if (is_object($object)) {</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmparr = get_object_vars($object);</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;foreach ($tmparr as $k =&gt; $v) {</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is_array($v)) {</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmparr[$k] = xmltoarray($v, $tmparr[$k]);</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} elseif (is_object($v)) {</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmparr[$k] = xmltoarray($v, $tmparr[$k]);</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmparr[$k] = $v;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;return $tmparr;</span><br />\r\n<span style="font-size:14px;"> }</span><br />\r\n<br />\r\n<br />\r\n<span style="font-size:14px;"> 情况二：我以curl发送请求时，他们返回的xml不能进行对象化，所以我在w3c找到了</span><br />\r\n<h1>\r\n	<span style="font-size:14px;">xml_parse_into_struct() 函数</span>\r\n</h1>\r\n<p>\r\n	<span style="font-size:14px;">他可以将传回来的信息序列化成数组。</span>\r\n</p>\r\n<span style="font-size:14px;">&lt;?php&nbsp;// xml 文件&nbsp;$xmlfile = ''test.xml'';\r\n&nbsp;$xmlparser = xml_parser_create();\r\n&nbsp;// 打开文件并读取数据&nbsp;$fp = fopen($xmlfile, ''r'');\r\n&nbsp;$xmldata = fread($fp, filesize($xmlfile));&nbsp;\r\n&nbsp;xml_parse_into_struct($xmlparser,$xmldata,$values);&nbsp;xml_parser_free($xmlparser);\r\n&nbsp;print_r($values);\r\n&nbsp;?&gt;\r\n现在遇到的情况都可以用上面的解决掉。顺便加上一个经验：在一次页面请求时，比如我用curl发请求，然后收到一个xml回复后，我可以通过上面的情况二解析xml，然后在通过curl发送，但是请注意几点：\r\n1：必须要重新使用句柄即curl执行完成后必须关掉，然后重新激活关闭。\r\n2：我处理的网站链接是https类型的，使用curl必须加上以下2个选项\r\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\r\ncurl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);\r\n顺带自己备份下我的：\r\n&nbsp;&nbsp;&nbsp;&nbsp;$ch = curl_init();\r\n&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($ch, CURLOPT_URL, $url);\r\n&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($ch, CURLOPT_HTTPHEADER, array(''Content-Type''=&gt;''text/xml''));\r\n&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\r\n&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);\r\n&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($ch, CURLOPT_POST, 1);\r\n&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);\r\n&nbsp;&nbsp;&nbsp;&nbsp;curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$res&nbsp;&nbsp;= curl_exec($ch);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$res = trim($res);\r\n&nbsp;&nbsp;&nbsp;&nbsp;curl_close($ch);\r\n&nbsp;&nbsp;&nbsp;&nbsp;file_put_contents(''response_deposit.xml'',$res);</span>', 9, 'curl,xml', 1, 0, 1, '2013-03-10 13:13:59');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(250, 'PHP中有关HTML实体编码函数', '<p>\r\n	<span style="font-size:14px;">PHP htmlspecialchars()&nbsp;函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">定义和用法：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">htmlspecialchars()&nbsp;函数把一些预定义的字符转换为&nbsp;HTML&nbsp;实体。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">预定义的字符是：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&amp;&nbsp;（和号）&nbsp;成为&nbsp;&amp;amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">"&nbsp;（双引号）&nbsp;成为&nbsp;&amp;quot;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">''&nbsp;（单引号）&nbsp;成为&nbsp;&amp;#039;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;&nbsp;（小于）&nbsp;成为&nbsp;&amp;lt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&gt;&nbsp;（大于）&nbsp;成为&nbsp;&amp;gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">htmlspecialchars(string,quotestyle,character-set)</span>\r\n</p>\r\n<table border="0">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">参数</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">描述</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">string</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">必需。规定要转换的字符串。</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">quotestyle</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">可选。规定如何编码单引号和双引号。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ENT_COMPAT -&nbsp;默认。仅编码双引号。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ENT_QUOTES -&nbsp;编码双引号和单引号。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ENT_NOQUOTES -&nbsp;不编码任何引号。</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">character-set</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">可选。字符串值，规定要使用的字符集。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ISO-8859-1 -&nbsp;默认。西欧。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ISO-8859-15 -&nbsp;西欧（增加&nbsp;Euro&nbsp;符号以及法语、芬兰语字母）。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">UTF-8 - ASCII&nbsp;兼容多字节&nbsp;8&nbsp;比特&nbsp;Unicode</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">cp866 - DOS&nbsp;专用&nbsp;Cyrillic&nbsp;字符集</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">cp1251 - Windows&nbsp;专用&nbsp;Cyrillic&nbsp;字符集</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">cp1252 - Windows&nbsp;专用西欧字符集</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">KOI8-R -&nbsp;俄语</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">GB2312 -&nbsp;简体中文，国家标准字符集</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">BIG5 -&nbsp;繁体中文</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">BIG5-HKSCS - Big5&nbsp;香港扩展</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">Shift_JIS -&nbsp;日语</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">EUC-JP -&nbsp;日语</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">提示和注释</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">提示：无法被识别的字符集将被忽略，并由&nbsp;ISO-8859-1&nbsp;代替。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例子</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;html&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;?php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$str = "John &amp; ''Adams''";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">echo htmlspecialchars($str, ENT_COMPAT);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">echo "&lt;br /&gt;";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">echo htmlspecialchars($str, ENT_QUOTES);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">echo "&lt;br /&gt;";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">echo htmlspecialchars($str, ENT_NOQUOTES);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">?&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/html&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">浏览器输出：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果在浏览器中查看源代码，会看到这些&nbsp;HTML：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;html&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp;amp; ''Adams''&lt;br /&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp;amp; &amp;#039;Adams&amp;#039;&lt;br /&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp;amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/html&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">PHP htmlentities()&nbsp;函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">定义和用法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">htmlentities()&nbsp;函数把字符转换为&nbsp;HTML&nbsp;实体。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">htmlentities(string,quotestyle,character-set)</span>\r\n</p>\r\n<table border="0">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">参数</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">描述</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">string</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">必需。规定要转换的字符串。</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">quotestyle</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">可选。规定如何编码单引号和双引号。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ENT_COMPAT -&nbsp;默认。仅编码双引号。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ENT_QUOTES -&nbsp;编码双引号和单引号。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ENT_NOQUOTES -&nbsp;不编码任何引号。</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">character-set</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">可选。字符串值，规定要使用的字符集。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ISO-8859-1 -&nbsp;默认。西欧。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ISO-8859-15 -&nbsp;西欧（增加&nbsp;Euro&nbsp;符号以及法语、芬兰语字母）。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">UTF-8 - ASCII&nbsp;兼容多字节&nbsp;8&nbsp;比特&nbsp;Unicode</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">cp866 - DOS&nbsp;专用&nbsp;Cyrillic&nbsp;字符集</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">cp1251 - Windows&nbsp;专用&nbsp;Cyrillic&nbsp;字符集</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">cp1252 - Windows&nbsp;专用西欧字符集</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">KOI8-R -&nbsp;俄语</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">GB2312 -&nbsp;简体中文，国家标准字符集</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">BIG5 -&nbsp;繁体中文</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">BIG5-HKSCS - Big5&nbsp;香港扩展</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">Shift_JIS -&nbsp;日语</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">EUC-JP -&nbsp;日语</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">提示和注释</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">提示：无法被识别的字符集将被忽略，并由&nbsp;ISO-8859-1&nbsp;代替。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例子</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;html&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;?php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$str = "John &amp; ''Adams''";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo htmlentities($str, ENT_COMPAT);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "&lt;br /&gt;";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo htmlentities($str, ENT_QUOTES);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "&lt;br /&gt;";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo htmlentities($str, ENT_NOQUOTES);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">?&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/html&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">浏览器输出：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果在浏览器中查看源代码，会看到这些&nbsp;HTML：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;html&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp;amp; ''Adams''&lt;br /&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp;amp; &amp;#039;Adams&amp;#039;&lt;br /&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp;amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/html&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">PHP htmlspecialchars_decode()&nbsp;函数</span>\r\n</p>\r\n<p>\r\n	<a href="http://www.w3school.com.cn/php/php_ref_string.asp"><span style="font-size:14px;">PHP String&nbsp;函数</span></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">定义和用法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">htmlspecialchars_decode()&nbsp;函数把一些预定义的&nbsp;HTML&nbsp;实体转换为字符。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">会被解码的&nbsp;HTML&nbsp;实体是：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&amp;amp;&nbsp;成为&nbsp;&amp;&nbsp;（和号）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&amp;quot;&nbsp;成为&nbsp;"&nbsp;（双引号）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&amp;#039;&nbsp;成为&nbsp;''&nbsp;（单引号）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&amp;lt;&nbsp;成为&nbsp;&lt;&nbsp;（小于）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&amp;gt;&nbsp;成为&nbsp;&gt;&nbsp;（大于）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">htmlspecialchars_decode(string,quotestyle)</span>\r\n</p>\r\n<table border="0">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">参数</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">描述</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">string</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">必需。规定要解码的字符串。</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">quotestyle</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">可选。规定如何解码单引号和双引号。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ENT_COMPAT -&nbsp;默认。仅解码双引号。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ENT_QUOTES -&nbsp;解码双引号和单引号。</span>\r\n				</p>\r\n				<p>\r\n					<span style="font-size:14px;">ENT_NOQUOTES -&nbsp;不解码任何引号。</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">例子</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;?php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$str = "John &amp;amp; &amp;#039;Adams&amp;#039;";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo htmlspecialchars_decode($str);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "&lt;br /&gt;";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo htmlspecialchars_decode($str, ENT_QUOTES);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "&lt;br /&gt;";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo htmlspecialchars_decode($str, ENT_NOQUOTES);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">?&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">浏览器输出：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果在浏览器中查看源代码，会看到这些&nbsp;HTML：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;html&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; &amp;#039;Adams&amp;#039;&lt;br /&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; ''Adams''&lt;br /&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">John &amp; &amp;#039;Adams&amp;#039;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/body&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/html&gt;</span>\r\n</p>', 9, '字符集,函数', 1, 0, 1, '2013-03-10 13:14:37'),
(251, 'Ubuntu中Lamp的一些配置说明', '<p>\r\n	<span style="font-size:14px;">配置Apache文件路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1&gt;apache 的配置文件路径 /etc/apache2/apache2.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2&gt;apache 网站字符编码配置路径 /etc/apache2/conf.d/charset</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3&gt;php.ini 路径 /etc/php5/apache2/php.ini</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4&gt;mysql配置文件 路径 /etc/mysql/my.cnf一般不要使用，尤其是新手</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5&gt;phpmyadmin配置文件路径 /etc/phpmyadmin/apache.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6&gt;默认网站根目录 /var/www</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1重启apache</span>\r\n</p>\r\n<span style="font-size:14px;">sudo /etc/init.d/apache2 restart或\r\nsudo service apache2 restart</span>\r\n<p>\r\n	<span style="font-size:14px;">2.重启mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo /etc/init.d/mysql restart 或</span>\r\n</p>\r\n<span style="font-size:14px;">sudo service mysql restart&nbsp;</span>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<span style="font-size:14px;">修改默认主页</span><br />\r\n<span style="font-size:14px;"> 修改默认主页：一般在 sudo gedit /etc/apache2/apache2.conf里面</span><br />\r\n<span style="font-size:14px;"> 找到 DirectoryIndex 在后面添加 如index.php等</span><br />\r\n<span style="font-size:14px;"> 不过随apache2的版本不同 文件的放置位置不一样 我在ubuntu8.10下面配置文件就不一样。</span><br />\r\n<span style="font-size:14px;"> 别怕 输入这个命令 grep -iR DirectoryIndex /etc/apache2</span><br />\r\n<span style="font-size:14px;"> 查看 DirectoryIndex 在apache2那个文件里面。</span><br />\r\n<span style="font-size:14px;"> 我的就是 这样的</span><br />\r\n<span style="font-size:14px;"> /etc/apache2/mods-enabled/dir.conf: DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm</span><br />\r\n<span style="font-size:14px;"> /etc/apache2/mods-available/dir.conf: DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm</span><br />\r\n<p>\r\n	<span style="font-size:14px;">为什么所2个文件都有呢。我也不清楚 不过我在群里 有高手说了 其实2个文件关系是上面那个是下面那个的符号链接，还是一样的。随便添加默认文档就可以了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">更改服务器地址（在apache.conf改为本机）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ServerName 127.0.0.1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改apache的根目录DocumentRoot：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo vim/etc/apache2/sites-enabled/000-default</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将其中的 DocumentRoot /var/www 改成您想要的目录比如 DocumentRoot /var/www/htdocs/ 以上Apache2就基本配置完成了。重启Apache2服务即可。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo vim /etc/apache2/ports.conf #修改端口号，修改 Listen 80</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">再修改site的配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/sites-available/default</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">80是端口号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;VirtualHost *:80&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo a2enmod rewrite #开启apache 的rewrite功能</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Apache字符集</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">打开apache配置文件：vim /etc/apache2/apache2.conf，在最后面加上：AddDefaultCharset UTF-8，如果还是乱码的，再将UTF-8改用gb2312。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置Apache支持.htm .html .php</span><br />\r\n<span style="font-size:14px;"> sudo vim /etc/apache2/apache2.conf</span><br />\r\n<span style="font-size:14px;"> 在打开的文件中加上</span><br />\r\n<span style="font-size:14px;"> AddType application/x-httpd-php .php .htm .html 即可。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Apache模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo a2enmod #启用模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo a2dismod #禁用模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">配置PHP5</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">来获取你的php cli加载的php.ini路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">php --ini或 php -i | grep php.ini</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">来 获取你的php cli加载的php.ini路径（Loaded Configuration File，比如 /etc/php5/cli/php.ini 而非 /etc/php5/conf.d/php.ini）。但此文件并不一定是apache php5模块加载的php.ini文件，如果要获得apache php5模块加载的php.ini，请参见</span><a href="http://wiki.ubuntu.org.cn/Apache#.E6.B5.8B.E8.AF.95_phpinfo.28.29.3B_.EF.BC.88.E6.A0.B9.E6.8D.AE.E9.9C.80.E8.A6.81.EF.BC.8C.E8.87.AA.E5.B7.B1.E9.80.89.E6.8B.A9.EF.BC.8C.E5.8F.AF.E4.B8.8D.E5.81.9A.EF.BC.89"><span style="font-size:14px;">测试_phpinfo()</span></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">以下是更改默认时区</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">;date.timezone=</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">去掉前面的分号 后面加个PRC 。表示中华人民共和国（就是GMT＋8时区）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">date.timezone= PRC</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql配置</span>\r\n</p>\r\n<span style="font-size:14px;">MySQL大部分命令是以 ; 结尾 ，</span><br />\r\n<p>\r\n	<span style="font-size:14px;">Mysql字符集修改</span><br />\r\n<span style="font-size:14px;"> [client]</span><br />\r\n<span style="font-size:14px;"> default-character-set=utf8</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">character-set-server=utf8</span><br />\r\n<span style="font-size:14px;"> collation-server=utf8_general_ci</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">进入mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql -h [服务器地址] -u [用户名〕-p</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建一个受限用户这个用户(testuser)只有一个数据库(这里是test库)的访问写入权限，这个数据库创建与删除表的权限，并且只能在本地登入，密码为userpasswd</span>\r\n</p>\r\n<span style="font-size:14px;">grant select,insert,update,delete,create,alter on test.* to ''test''@''localhost'' IDENTIFIED BY ''userpasswd'';</span>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<h4>\r\n	<span style="font-size:14px;">配置文件（新手、无特殊要求勿动）</span>\r\n</h4>\r\n<span style="font-size:14px;">sudo vim /etc/mysql/my.cnf</span>\r\n<p>\r\n	<span style="font-size:14px;">这里有一个地方要注意 默认：是只允许本地访问数据库，其它机子不能直接访问MySQL</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">bind-address 127.0.0.1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">解除限制只能本地访问mysql，如果需要其他机器访问，应使用如下语句，把这“bind-address 127.0.0.1”句话用#注释掉</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> phpmyadmin安装和配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo apt-get install phpmyadmin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">sudo ln -s /usr/share/phpmyadmin /var/www/phpmyadmin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后把下面两句的路径 改为/var/www/phpmyadmin（因为我已经配置好环境，所以忘记了phpmyadmin中默认配置怎么写的。。反正就是在第三行和第四行的两句.如果我没记错的话 应该是下面这样）不知道为什么我的不用改。。。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Alias /phpmyadmin /usr/share/phpmyadmin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;Directory /usr/share/phpmyadmin&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">改为：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Alias /phpmyadmin /var/www/phpmyadmin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;Directory /var/www/phpmyadmin&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安全性设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">隐藏服务器信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">vim /etc/apache2/apache2.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ServerTokens Prod</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">指定apache2的运行账户</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">以root来运行是很危险的，用下面的方法更改，这里是都改为www-data</span>\r\n</p>\r\n<span style="font-size:14px;">vim /etc/apache2/envvarsexport APACHE_RUN_USER=www-dataexport APACHE_RUN_GROUP=www-data</span>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">启用.htaccess</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个对pbpbb3这样有附带.htaccess的程序有利，不过其它场合有可能引发问题。方法：在网站主机配置下加入AllowOverride AuthConfi例子:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">vim /etc/apache2/sites_available/default</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;Directory /var/www/&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">AllowOverride AuthConfig</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/Directory&gt;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其他</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">PDO的安装</span>\r\n</p>\r\n<span style="font-size:14px;">pecl search pdosudo pecl install pdosudo pecl install pdo_mysql</span>\r\n<p>\r\n	<span style="font-size:14px;">最后编辑php.ini</span>\r\n</p>\r\n<span style="font-size:14px;">sudo gedit /etc/php5/apache2/php.ini</span>\r\n<p>\r\n	<span style="font-size:14px;">再最后面添加两行：</span>\r\n</p>\r\n<span style="font-size:14px;">extension = pdo.so</span>\r\n<p>\r\n	<span style="font-size:14px;">extension = pdo_mysql.so</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">排错</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">无法解析php文件，浏览器提示下载所要打开的php文件</span>\r\n</p>\r\n<span style="font-size:14px;">sudo apt-get install libapache2-mod-php5sudo a2enmod php5</span>\r\n<p>\r\n	<span style="font-size:14px;">如果显示为：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">This module does not exist!</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">那就要彻底删除libapache2-mod-php5，然后重新安装它</span>\r\n</p>\r\n<span style="font-size:14px;">sudo apt-get remove --purge libapache2-mod-php5sudo apt-get install libapache2-mod-php5</span>\r\n<p>\r\n	<span style="font-size:14px;">重启apache2</span>\r\n</p>\r\n<span style="font-size:14px;">sudo /etc/init.d/apache2 restart</span>\r\n<p>\r\n	<span style="font-size:14px;">清除浏览器缓存，然后输入http:localhost</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">屏蔽迅雷</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">迅雷的user-agent是</span>\r\n</p>\r\n<span style="font-size:14px;">Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; )Mozilla/5.0 (compatible; MSIE 6.0; Windows NT 5.0)Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 3.5.20706)Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)</span>\r\n<p>\r\n	<span style="font-size:14px;">通过.htaccess文件屏蔽迅雷的下载/盗链功能：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RewriteEngine On#Anti ThunderRewriteCond&nbsp;&nbsp;%{HTTP_USER_AGENT}&nbsp;&nbsp;^Mozilla/4\\.0\\ \\(compatible;\\ MSIE\\ 6\\.0;\\ Windows\\ NT\\ 5\\.0\\)$&nbsp;&nbsp;[NC,OR]RewriteCond&nbsp;&nbsp;&nbsp;%{HTTP_USER_AGENT}&nbsp;&nbsp;^Mozilla/5\\.0\\ \\(compatible;\\ MSIE\\ 6\\.0;\\ Windows\\ NT\\ 5\\.0\\)$&nbsp;&nbsp;[NC,OR]RewriteCond&nbsp;&nbsp;%{HTTP_USER_AGENT}&nbsp;^Mozilla/4\\.0\\ \\(compatible;\\ MSIE\\ 6\\.0;\\ Windows\\ NT\\ 5\\.1;\\ \\)$&nbsp;&nbsp;&nbsp;[NC,OR]RewriteCond&nbsp;&nbsp;&nbsp;%{HTTP_USER_AGENT}&nbsp;&nbsp;^Mozilla/4\\.0\\ \\(compatible;\\ MSIE\\ 6\\.0;\\ Windows\\ NT\\ 5\\.0;\\ \\.NET\\ CLR\\ 3\\.5\\.20706\\)$&nbsp;&nbsp;[NC,OR]RewriteCond&nbsp;&nbsp;&nbsp;%{HTTP_USER_AGENT}&nbsp;&nbsp;^Mozilla/4\\.0\\ \\(compatible;\\ MSIE\\ 6\\.0;\\ Windows\\ NT\\ 5\\.1;\\ SV1;\\ \\.NET\\ CLR\\ 1\\.1\\.4322;\\ \\.NET\\ CLR\\ 2\\.0\\.50727\\)$&nbsp;[NC]RewriteRule&nbsp;&nbsp;^.*\\.(gif|jpg|bmp|zip|rar|exe|mp3|swf)$&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;[NC,F]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">你可以用Firefox的扩展</span><a href="https://addons.mozilla.org/en-US/firefox/addon/59/"><span style="font-size:14px;">user-agent switcher</span></a><span style="font-size:14px;">来测试效果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你的资料地址已经被迅雷索引，请修改资源的路径地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果用户手动用UltraEdit改写迅雷的user-agent，亦或者本机装虚拟机，虚拟机挂代理，迅雷挂虚拟机中的代理，这种屏蔽方法就失效了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">附录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">apache2配置文件与子目录一览表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/apache2.conf 全局配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/envvars 环境变量</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/ports.conf httpd服务端口信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/conf.d/ 一般性配置文件存放地</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/mods-available/ 已安装的模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/mods-enabled/ 已经启用的模块</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/sites-available/ 可用站点信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/sites-enabled/ 已经启用的站点信息，当中的文件是到/etc/apache2/sites-available/ 文件的软连接。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/etc/apache2/httpd.conf</span>\r\n</p>', 10, 'linux,ubuntu', 1, 0, 1, '2013-03-10 13:14:56'),
(252, 'lamp源码编译', '<p>\r\n	<span style="font-size:14px;">在编译这些源码包之前,我们需要确认系统中有gcc,gcc-c++,make编译器,一般系统都自带了gcc和make编译器,所以我们只要安装gcc.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;sudo&nbsp;apt-get&nbsp;install&nbsp;build-essentia&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般安装一个源码包的过程是：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.解压源码包的tar.gz文件,如&nbsp;tar&nbsp;-xvf&nbsp;mysql.tar.gz&nbsp;-C&nbsp;/opt/lamp,其中tar命令中的-C是指定解压路径.其实我们完全可以写一个shell脚本进行解压.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.配置源码,使用命令&nbsp;./configure</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.编译源码,使用命令&nbsp;make</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.安装,使用&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在我们开始安装lamp环境,在此之前,我们需要安装一系列的必须库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装libxml2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.进入libxml2源码包目录,进行配置设置安装的路径</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--prefix=/usr/local/libxml2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.使用make编译</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.使用make&nbsp;install&nbsp;安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注:在编译libxml2时,由于nanohttp.c中的open函数有问题,所以我们需要修改nanohttp.c的源代码,在1588行给open加上第三个参数0777就行了.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装libmcrypt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.进入libmcrypt源码包目录,进行配置设置安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--prefix=/usr/local/libmcrypt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.使用make编译</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.使用make&nbsp;install安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.但是需要注意的是在此目录下还有一个libltdl目录,里面的源码也需要进行编译.执行如下命令&nbsp;./configure&nbsp;--enable-ltdl-install&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install&nbsp;.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装zlib</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">因为这个库是很多库安装必须要的,所以建议安装这个库的时候,按照默认的安装路径即可.执行如下命令&nbsp;./configure&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装libpng</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">因为前面我们安装的zlib使用的是默认路径安装,所以这个配置就不需要指定zlib目录了,直接执行如下命令&nbsp;./configure&nbsp;--prefix=/usr/local/libpng&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装jpeg-6b</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">因为这个在安装的过程中不能自动创建目录,所以我们必须提给它安装好必须的目录.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;/usr/local/jpeg6</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;/usr/local/jpeg6/bin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;/usr/local/jpeg6/lib</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;/usr/local/jpeg6/include</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;-p&nbsp;/usr/local/jpeg6/man/man1&nbsp;&nbsp;这里-p表示递归创建man目录后再创建man1目录</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后开始配置,编译,安装命令如下&nbsp;./configure&nbsp;--prefix=/usr/local/jpeg6&nbsp;--enable-shared&nbsp;--enable-static&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装freetype</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">按顺序配置,编译和安装:&nbsp;./configure&nbsp;--prefix=/usr/local/freetype&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装autoconf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.在安装之前我们需要在ubuntu10.10中安装m4</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;apt-get&nbsp;install&nbsp;m4</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.同zlib一样,建议按默认安装路径执行.&nbsp;命令如下:&nbsp;&nbsp;./configure&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装gd</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在安装这个库的时候,我们需要指定前面的3个库jpeg6,freetype和zlib.但是由于zlib是默认路径,就不需要特指出来.命令如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;--prefix=/usr/local/gd2&nbsp;--with-jpeg=/usr/local/jpeg6&nbsp;--with-png=/usr/local/libpng&nbsp;--with-freetype=/usr/local/freetype&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装httpd(apache)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;--prefix=/usr/local/apache2&nbsp;--sysconfdir=/etc/httpd/&nbsp;--with-included-apr&nbsp;--disable-userdir&nbsp;--enable-so&nbsp;--enable-deflate=shared&nbsp;--enable-expires=shared&nbsp;--enable-rewrite=shared&nbsp;--enable-static-support&nbsp;&nbsp;;&nbsp;make&nbsp;&nbsp;;&nbsp;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">检测是否安装成功,启动apache:&nbsp;&nbsp;/usr/local/apache/bin/apachectl&nbsp;start&nbsp;&nbsp;&nbsp;查找进程,如果有则安装成功&nbsp;&nbsp;&nbsp;&nbsp;ps&nbsp;aux&nbsp;|&nbsp;grep&nbsp;httpd</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">最后在浏览器上输入你的IP地址看是否成功.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注:有很多教程就在配置的时候加了&nbsp;--with-z=/usr/local/zlib,但是因为我们已经把zlib安装在默认路径,所以在这里我们就不必加了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果在我们执行的时候,提示mod_rewrite.so或更多模块没有权限启动.则我们可以用这个命令解决：chcon&nbsp;-t&nbsp;texrel_shlib_t&nbsp;/usr/local/apache/modules/mod_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.在安装mysql的过程中,很容易出错,因为在安装mysql之前,我们必须要先安装编译一个ncurses.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装ncurses</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;--with-shared&nbsp;--without-debug&nbsp;--without-ada&nbsp;--enable-overwrite&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.创建用户和用户组</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;groupadd&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;useradd&nbsp;-g&nbsp;mysql&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.开始安装mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;--prefix=/usr/local/mysql&nbsp;--with-extra-charsets=all --with-charset=utf8;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.把mysql源码里面support-files目录下的配置文件复制到/etc/目录下，生成配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cp&nbsp;my-medium.cnf&nbsp;/etc/my.cnf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.创建mysql数据库的授权表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;/usr/local/mysql/bin/mysql_install_db&nbsp;--user=mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.然后修改mysql数据目录的拥有者和拥有组</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;root&nbsp;/usr/local/mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;mysql&nbsp;/usr/local/mysql/var</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chgrp&nbsp;-R&nbsp;mysql&nbsp;/usr/local/mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.启动mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;/usr/local/mysql/bin/mysqld_safe&nbsp;--user=mysql&nbsp;&amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8.检查是否启动了</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;ps&nbsp;aux&nbsp;|&nbsp;grep&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以使用mysqladmin查看所有的参数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./mysqladmin&nbsp;variables</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后设置密码&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./mysqladmin&nbsp;-uroot&nbsp;password&nbsp;xiaozhe&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9.设置开机自动启动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以把这些启动命令写入系统每次开机时读取的文件如/etc/rc.d/rc.local,然后执行如下命令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">echo&nbsp;"/usr/local/apache2/bin/apachectl&nbsp;start"&nbsp;&gt;&gt;&nbsp;/etc/rc.d/rc.local</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">或者贝源码中自带的一个mysql.server文件拷贝到init.d目录下,可以重新取名.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;cp&nbsp;/opt/lamp/mysql-5.0.41/support-files/mysql.server&nbsp;/etc/rc.d/init.d/mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改这个文件的权限和所有权</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;root.root&nbsp;/etc/rc.d/init.d/mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chmod&nbsp;755&nbsp;/etc/rc.d/init.d/mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用chkconfig命令,没用过,我要学习这个命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chkconfig&nbsp;--add&nbsp;mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chkconfig&nbsp;--list&nbsp;mysqld</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改运行的等级</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">chkconfig&nbsp;--levels&nbsp;245&nbsp;mysqld&nbsp;off</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.进行配置,编译和安装</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">./configure&nbsp;--prefix=/usr/local/php&nbsp;--with-config-file-path=/usr/local/php/etc/&nbsp;--with-apxs2=/usr/local/apache2/bin/apxs&nbsp;--with-mysql=/usr/local/mysql/&nbsp;--with-libxml-dir=/usr/local/libxml2/&nbsp;--with-jpeg-dir=/usr/local/jpeg6/&nbsp;--with-freetype-dir=/usr/local/freetype/&nbsp;--with-gd=/usr/local/gd2/&nbsp;--with-mcrypt=/usr/local/libmcrypt/&nbsp;--with-mysqli=/usr/local/mysql/bin/mysql_config&nbsp;--enable-soap&nbsp;--enable-mbstring=all&nbsp;--enable-sockets&nbsp;;&nbsp;make&nbsp;;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.将php源码包里面的配置文件复制到php配置目录里面</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cp&nbsp;php.ini-dist&nbsp;/usr/local/php/etc/php.ini</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.修改apache配置文件增加执行php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;vim&nbsp;/etc/httpd/httpd.conf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">添加AddType&nbsp;application/x-httpd-php&nbsp;.php&nbsp;.phtml</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.重启服务器或先stop然后start</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;/usr/local/apache2/bin/apachectl&nbsp;restart</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.写一个php文件测试一下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">vim&nbsp;/usr/local/apache2/htdocs/phpinfo.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装zend加速器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">直接进入ZendOptimizer加速器目录，然后&nbsp;./install.sh&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">后面一切按配置自己修改</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装phpMyadmin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.直接将phpmyadmin文件夹复制到htdocs目录下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;cp&nbsp;-a&nbsp;phpMyAdmin-3.0.0-rc1-all-languages&nbsp;/usr/local/apache2/htdocs/phpmyadmin</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.进入phpmyadmin目录,重命名配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cp&nbsp;config.sample.inc.php&nbsp;config.inc.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.修改配置文件,将auth_type为http即可</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.然后在浏览器打开phpmyadmin&nbsp;找到index文件点进即可</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">附上集体解压的shell命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#!/bin/bash</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cd&nbsp;/opt/Linux</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ls&nbsp;*.tar.gz&nbsp;&gt;&nbsp;file_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">for&nbsp;TAR&nbsp;in&nbsp;`cat&nbsp;file_name`</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">do</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">tar&nbsp;-xvf&nbsp;$TAR&nbsp;-C&nbsp;/opt/build_lamp</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">done</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">rm&nbsp;file_name</span>\r\n</p>', 10, 'lamp', 1, 0, 1, '2013-03-10 13:16:06');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(253, '我的linux笔记4 文件的压缩与打包', '<p>\r\n	<span style="font-size:14px;">compress [-drc]:一个普通的压缩命令，比较古老了，原来是unix上的。压缩后缀名：*.Z。了解下就好</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip [-cdt#]:用来压缩文件，后缀名为：*.gz。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">zcat: 用来读取压缩文件内容，与cat差不多。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">bzip2 [-cdt#]:用来压缩文件，后缀名为：*.bz,*.bz2,*.tbz,*.tbz2。解压可加参数-d或者bunzip2 代替bzip2 -d。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">bzcat:读取内容。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">tar：比较不错的压缩命令。一般是 -cvzf 后接自定义压缩名：*.tar.gz 。 -cvjf 为 : *.tar.bz2 。 查看压缩文件：-tvzf或-tvjf, 解压缩为: -xvzf或-xvjf&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果压缩文件里（etc.tar.gz）有多个文件，如果只想解压一个文件（passwd）出来:tar -xvzf etc.tar.gz passwd 。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果只要解压缩：如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">tar -xvzf abc.tar.gz</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果是解压缩包而且还要指定目录加选项 -C :如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">tar -xvzf abc.tar.gz -C /opt/xiaozhe</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果不想用cp -r 复制一个目录文件，则可以用tar -cvf - /etc | tar -xvf - 来完成，其中通过 - 省略来中间名字。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">几个名词：tarfile表示打包压缩文件。tarball表示打包文件。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">dd命令用法：备份（一般可以用来备份整个分区或整个磁盘，相当与ghost）或者说复制if（input_file）,of（output_file）： dd if=/etc/passwd of=/tmp/passwd.back</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">总上：tar与dd到另类用法，tar 可以备份文件，dd可以备份磁盘或分区。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\ncpio:数据流重导向', 10, '笔记,linux,ubuntu', 1, 0, 1, '2013-03-10 13:16:38'),
(254, '我的linux学习5 vi,vim的学习', '<p>\r\n	<span style="font-size:14px;">1、一般模式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">移动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">h或方向左 ------------------- 左移动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">j或方向下-------------------- 下移动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">k或方向上------------------ 上移动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">l或方向右 ------------------- 右移动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crtl+f&nbsp;&nbsp;向下移动一页（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ctrl+b 向上移动一页（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crtl+d 向下移动半页</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crtl+u 向上移动半页</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">+ 光标移动到非空格符的下一行</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">- 光标移动到非空格符的上一行</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">n&lt;space&gt; 移动到这一行的第n个字符</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">0 移动到这一行的头端（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">$ 移动到这一行的末端（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">G移动到这个文件的最后一行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">nG 移动到这个文件的第n行，常与:set nu一起用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gg 移动到这个文件的第一行，同1G（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">n&lt;Enter&gt; 光标向下移动n行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">搜索</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/word 从光标位置开始，向下搜索一个名为word的字符串（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">?word 从光标位置开始，向上搜索一个名为word的字符串（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">n 表示重复前一个搜索动作（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">N 表示反向重复前一个搜索动作（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">搜索替换</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:n1,n2s/word1/word2/g 表示在n1和n2行之间搜索到word1并用word2替换（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:1,$s/word1/word2/g表示在第一行和最后一行之间搜索到word1并用word2替换（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:1,$s/word1/word2/gc表示在第一行和最后一行之间搜索到word1并用word2替换,但是在替换的时候给用户提示（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除，复制，粘贴</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">x 在一行中，向后删除一个字符，相当与[Del]（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">X 在一行中，向前删除一个字符，相当与[Backspace]（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">nx 连续向后删除n个字符</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">dd 删除光标所在的那一行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ndd 删除光标所在的向下n行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d1G 删除光标所在位置到第一行的所有数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">dG 删除光标所在位置到最后一行到所有数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d$ 删除光标所在位置到该行最后一个字符的数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d0 删除光标所在位置到该行第一个字符的数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">yy 复制光标所在的那一行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">nyy 复制光标所在行的向下n行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">y1G 复制光标所在行到第一行的所有数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">yG 复制光标所在行到最后一行的所有数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">y$ 复制光标所在行到该行最后一个字符的数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">y0 复制光标所在位置到该行第一个字符到数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">p 将复制的数据粘贴到光标的下一行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">P 将复制的数据粘贴到光标的上一行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">J 将光标所在行与下一行的数据结合成同一行</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">u 复原前一个操作，相当与撤销（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crtl+r 重做上一个操作（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">. 小数点 ，重复前一个操作，例如重复粘贴，重复删除等（常用）</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、编辑模式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">i 在光标所在前方处插入字符（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">I 在光标所在行的头部插入字符（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a 在光标所在后方插入字符（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A 在光标所在行的尾部插入字符（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">o 字母o，在光标所在的下一行处插入新的一行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">O 字符O，在光标所在的上一行处插入新的一行（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">r 替换光标所在的那一个字符（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">R 一直替换光标所在的文字，直到按下Esc（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3、命令模式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：w将编辑的数据保存（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：w! 如果文件属性为只读，则强行写入，具体能不你写入与文件权限有关。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：q 离开vi （常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：q! 强制离开不存储文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：wq 存储后离开（常用）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：e! 将文件还原到最初状态</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ZZ 若文件没有更改，则不存储离开，若文件以更改，则存储后离开。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：w filename 相当与另存为文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：r filename 在编辑数据中，读入另外一个文件的数据，即内容加载在光标所在行后面</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：n1,n2 w filename 将此文件的第n1到n2行另存为filename文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：！command&nbsp;&nbsp;暂时离开vi 执行command的显示结果，例如&nbsp;&nbsp;&nbsp;&nbsp;：! ls /home 即可在vi中查看文件信息</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set nu 显示行号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set nonu 取消行号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Vim的Visual Block功能&nbsp;&nbsp;&nbsp;（用键盘的上下左右可见效果，鼠标看不出来）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">v 字符选择，光标经过的地方反白选择</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">V 行选择，光标经过的行反白</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crtl+v 块选择，一块一块的地方</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">y 复制反白地方</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d 删除反白地方</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">多文件编辑</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">打开多个文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">vim filename1 filename2 filename3 ......</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:n&nbsp;&nbsp;编辑下一个文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:N 编辑上一个文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:files 列出当前vim打开的所有文件</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">多窗口编辑</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:sp filename&nbsp;&nbsp;打开一个新窗口，如果加了filename，表示在新窗口打开一个新文件，否则表示两个窗口为同一文件内容。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crtl+w+j&nbsp;按下crtl+w 后，放掉再按j,则移动到下方窗口。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crtl+w+k 同上，移动到上方窗口。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">crtl+w+q 结束离开</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一些常用的Vim环境设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set nu 设置行号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set hlsearch 设置搜索的字符串反白，如果不想就设置为：set nohlsearch</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set autoindent 设置自动缩排，不自动缩排：set noautoindent</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set backup 是否自动备份，一般用nobackup,否则会生成一个备份文件filename~</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set ruler 设置右下角是否显示状态</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set showmode 设置左下角显示状态如--INSERT--</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set backspace=(012) 一般来说，用i进入编辑模式后可以用退格键来删除字符，但某些版本不允许，此时可以用backspace来设置，当backspace=2时，可以删除任何字符。0或1时，只能删除刚输入的字符。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：set all 显示所有的环境设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">：syntax （off / on） 是否开启语法显色。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">经验：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">不必每次都要设置，可以自己建立一个配置文件：如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">vim ~/.vimrc</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:set hlsearch</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:set backspace=2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:set autoindent</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:set ruler</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">:set showmode</span>\r\n</p>\r\n<span style="font-size:14px;">:syntax on</span><br />\r\n<span style="font-size:14px;"> :set nu</span>', 10, '笔记,linux,ubuntu', 1, 0, 1, '2013-03-10 13:17:06'),
(255, '25 Mysql中的常用工具 ', '<p>\r\n	<span style="font-size:14px;">Myisampack(Myisam表压缩工具)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Myisampack是一个表压缩工具,可以使用很高的压缩率来对myisam存储引擎的表进行压缩,使得压缩后的表占用比压缩前小得多磁盘空间,但是压缩后的表也将成为一个只读表,不能进行DML操作(如果insert).</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用法:shell&gt;&nbsp;myisampack&nbsp;[options]&nbsp;filename</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqladmin(mysql管理工具)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqladmin是一个执行管理操作的客户端程序.可以用它来检查服务器的配置和当前的状态,创建并删除数据库等.它的功能和mysql客户端类似,主要区别在于它更侧重于管理.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看帮助文档:shell&gt;&nbsp;mysqladmin&nbsp;--help&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这里举个简单的例子,关闭数据库:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqladmin&nbsp;-uroot&nbsp;-p&nbsp;shutdown</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqlbinlog(日志管理工具)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">由于服务器生成的二进制日志文件以二进制格式保存,所以如果要想检查这些文件的文本格式,就会用到mysqlbinlog日志管理工具.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用法:shell&gt;&nbsp;mysqlbinlog&nbsp;[options]&nbsp;log-file1&nbsp;log-file2&nbsp;...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">参数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-d&nbsp;db_name,--database=db_name&nbsp;&nbsp;只列出该数据库的条目(只用本地日志).</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-o&nbsp;n,--offset=n&nbsp;忽略掉日志前n行命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-r&nbsp;name,--result-file=name&nbsp;将输出的文本格式日志输出到指定文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-s,--short-form&nbsp;只显示日志中包含的语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--set-charset=charname&nbsp;在输出为文本格式的时候,在文件第一行加上set&nbsp;names&nbsp;charname ,这个选项在某些情况下装载数据非常有用.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--start-datetime=name&nbsp;--stop-datetime=name&nbsp;指定日期间隔内的所有日志.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--start-position=# --stop-position=#&nbsp;指定位置间隔内的所有日志.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqlcheck(Myisam表维护工具)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqlcheck客户端工具可以检查和修复myisam表,还可以优化和分析表,实际上,它集成了mysql工具中check,repair,analyze,optimize的功能.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用法有3种:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.shell&gt;&nbsp;mysqlcheck&nbsp;[options]&nbsp;db_name&nbsp;[tables]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.Shell&gt;&nbsp;mysqlcheck&nbsp;[options]&nbsp;--database&nbsp;DB1&nbsp;[DB2..]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.Shell&gt;&nbsp;mysqlcheck&nbsp;[options]&nbsp;-all-database</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Options有以下常用选项(默认&nbsp;-c):</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-c,--check(检查表);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-r,--repair(修复表);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-a,--analyze(分析表);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-o,--optimize(优化表);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如:shell&gt;&nbsp;mysqlcheck&nbsp;-uroot&nbsp;-p&nbsp;&nbsp;-a&nbsp;db_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqldump(数据导出工具)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqldump客户端工具用来备份数据库或在不同数据库之间进行数据迁移,备份内容包括含创建表或装载表的sql语句,mysqldump是目前Mysql中最常用的备份工具.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用法有3种:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.shell&gt;&nbsp;mysqldump&nbsp;[options]&nbsp;db_name&nbsp;[tables]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.Shell&gt;&nbsp;mysqldump&nbsp;[options]&nbsp;--database&nbsp;DB1&nbsp;[DB2..]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.Shell&gt;&nbsp;mysqldump&nbsp;[options]&nbsp;-all-database</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">输出内容选项:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--add-drop-database&nbsp;每个数据库创建语句前加上drop&nbsp;database语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--add-drop-table&nbsp;每个表创建语句前加上drop&nbsp;table语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在默认情况下以上这两个参数都自动加上.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-n,--no-create-db&nbsp;不包含数据库的创建语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-t,--no-create-info&nbsp;不包含数据表的创建语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-d,--no-data&nbsp;不包含数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">输出格式选项：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--compact选项使输出结果简洁,不包括默认选项中的各种注释.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：对test数据库中的表xiaozhe进行简洁导出</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">shell&gt;&nbsp;mysqldump&nbsp;-uroot&nbsp;-p&nbsp;--compact&nbsp;test&nbsp;xiaozhe&nbsp;&gt;&nbsp;a.txt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-c,--complete-insert&nbsp;选项使得输出文件中的insert语句包括字段名称,默认是不包括字段名称的.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-l,给表加锁。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-F,生成一个新的二进制日志文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqldump&nbsp;-uroot&nbsp;-p&nbsp;--compact&nbsp;-c&nbsp;&nbsp;test&nbsp;xiaozhe&nbsp;&gt;&nbsp;a.txt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-T&nbsp;选项将指定数据表中的数据备份为单纯的数据文本和建表sql两个文件,经常和下面几个选项一起配合使用,将数据导出为指定格式显示.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-T,--tab=name(备份的数据和建表语句放在哪个地方)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--fields-terminated-by=name(域分隔符)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--fields-optionally-enclosed-by=name(域可选引用符)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--fields-escaped-by=name(转义字符)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面例子将test数据库中的表xiaozhe导出为单纯的数据文本和建表sql两个文件,并存放在back子目录下.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ex:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.创建备份目录.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;back</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.将test数据库下的表xiaozhe备份到back目录下.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqldump&nbsp;-uroot&nbsp;-p&nbsp;test&nbsp;xiaozhe&nbsp;-T&nbsp;./back</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.进入back目录就会发现两个文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">字符集选项：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--default-character-set=name选项可以设置导出的客户端字符集.如果你的数据字符集与默认的不同就会出现乱码,必须自己手动添加选项.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如:将数据库test下面的表xiaozhe以utf8字符集导出.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">shell&gt;&nbsp;mysqldump&nbsp;-uroot&nbsp;-p&nbsp;--compact&nbsp;--default-character-set=utf8&nbsp;test&nbsp;xiaozhe&nbsp;&gt;&nbsp;a.txt</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其他常用选项:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-F,--flush-logs(备份前刷新日志)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-l,--lock-tables(给所有表加读锁)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqlimport(数据导入工具)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">客户端导入工具,用来导入mysqldump&nbsp;加-T&nbsp;选项后导出的文本文件.它实际上是客户端提供的load&nbsp;data&nbsp;infile&nbsp;语句的一个命令行接口.用法和load&nbsp;data&nbsp;infile子句非常类似.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqlhotcopy(myisam表热备份工具)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqlhotcopy是一个perl脚本,它使用lock&nbsp;tables,flush&nbsp;tables或cp或scp来快速备份数据库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqlshow(数据库对象查看工具)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">客户端对象查找工具,用来很快地查找存在哪些数据库、数据库中的表、表中的列或索引.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">shell&gt;&nbsp;mysqlshow&nbsp;[option]&nbsp;[db_name&nbsp;[table_name[&nbsp;col_name]]]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认情况下显示所有数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlshow&nbsp;-uroot&nbsp;-p</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">选项：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--count(显示数据库和表的统计信息)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlshow&nbsp;-uroot&nbsp;-p&nbsp;--count&nbsp;不指定数据库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlshow&nbsp;-uroot&nbsp;-p&nbsp;test&nbsp;--count&nbsp;指定test数据库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;mysqlshow&nbsp;-uroot&nbsp;-p&nbsp;test&nbsp;xiaozhe&nbsp;--count&nbsp;指定test数据库的xiaozhe表.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-k&nbsp;,&nbsp;-keys(显示指定表中的所有索引)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlshow&nbsp;-uroot&nbsp;-p&nbsp;test&nbsp;xiaozhe&nbsp;-k</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-i,-status(显示表的一些状态信息)</span>\r\n</p>', 12, '笔记', 1, 0, 1, '2013-03-10 13:18:42'),
(256, '24 Mysql高级安装和升级', '<p>\r\n	<span style="font-size:14px;">Mysql安装包比较</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RPM包:安装简单,路径默认,一台服务器只能安装一个.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二进制包:安装简单,路径自定义,灵活性好,一台服务器可以安装多个Mysql;但是性能不如源码编译的好.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">源码包:最灵活,性能最好,一台服务器可以安装多个Mysql,安装过程复杂,编译时间长.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装二进制包</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.用root登陆操作系统,增加mysql用户和组,数据库安装在此用户下:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;groupadd&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;useradd&nbsp;-g&nbsp;mysql&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.解压二进制安装包,假设安装文件放在/home/mysql,并对解压后的mysql目录加个符号链接mysql,这样对mysql目录操作更方便:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cd&nbsp;/home/mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;tar&nbsp;-xvzf&nbsp;/home/mysql/mysql-VERSION-OS.tar.gz</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;ln&nbsp;-s&nbsp;mysql-VERSION-OS&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.在数据目录下创建系统数据库和系统表,--user表示这些数据库和表的owner是用户:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cd&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;scripts/mysql_install_db&nbsp;--user=mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.设置目录权限,将data目录owner改为mysql,其他目录和文件为root:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;root:mysql&nbsp;.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;mysql:mysql&nbsp;data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.启动mysql:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;bin/mysqld_safe&nbsp;--user=mysql&nbsp;&amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装源码包</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.用root登陆操作系统,增加mysql用户和组,数据库安装在此用户下:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;groupadd&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;useradd&nbsp;-g&nbsp;mysql&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.解压源码安装文件mysql-VERSION.tar.gz,并进入解压后的目录:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;gunzip&nbsp;&lt;&nbsp;mysql-VERSION.tar.gz&nbsp;|&nbsp;tar&nbsp;-xvf&nbsp;-</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cd&nbsp;mysql-VERSION</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.用configure工具来编译源码,这里可以选择很多编译参数,具体可以用configure&nbsp;--help查看,这里假设mysql安装在/usr/local/mysql下:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--prefix=/usr/local/mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;make</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;make&nbsp;install</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.选择一个mysql自带的样例配置文件(比如my-medium.cnf),并cp到/etc下改名为my.cnf:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cp&nbsp;support-files/my-medium.cnf&nbsp;/etc/my.cnf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.在数据目录下创建系统数据库和系统表,--user表示这些数据库和表的owner用户:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cd&nbsp;/usr/local/mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;bin/mysql_install_db&nbsp;--user=mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.设置目录权限,将var目录owner改为mysql(源码安装,默认数据目录为var),其他目录和文件为root:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;root&nbsp;.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;mysql&nbsp;var</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chgrp&nbsp;-R&nbsp;mysql&nbsp;.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.启动mysql:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;bin/mysqld_safe&nbsp;--user=mysql&nbsp;&amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">参数设置方法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在mysql中,如果不设置参数文件,mysql会按照系统所有参数默认值进行启动,通过mysqld&nbsp;-verbose&nbsp;--help命令查看参数默认配置.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在linux和window上参数可以放置在多个位置,数据库启动时会按照顺序搜索,顺序靠后的文件中的参数将覆盖前面的参数.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Linux上的配置文件顺序为:&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A./etc/my.cnf&nbsp;全局选项</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B.$MYSQL_HOME/my.cnf Mysql安装目录下的配置选项</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C.Defaults-extra-file&nbsp;指定的文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D.~/.my.cnf&nbsp;用户相关选项</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">提示:为了避免混淆,最好只在一个位置指定配置文件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">参数的修改</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Session级修改,只在本次会话有效:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;set&nbsp;para_name&nbsp;=&nbsp;value;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">全局级修改(对所有新连接有效,但对本次无效,数据库重启后失效)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;set&nbsp;global&nbsp;para_name&nbsp;=&nbsp;value;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">永久修改:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改my.cnf参数,数据库重启后生效</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">源码包安装的性能考虑</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">去掉不需要的模块：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看所有编译的配置选项：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;-help</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你只想安装客户端,则可以执行如下命令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--without-server</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果不想要位于/usr/local/var目录下面的日志文件和数据库:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--prefix=/usr/local/mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--prefix=/usr/local&nbsp;localstatedir=/usr/local/mysql/data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">第一个命令改变安装前缀以便将所有内容都安装到/usr/local/mysql下面而非默认的/usr/local.第二个命令保留默认安装前缀,但是覆盖了数据库默认目录(通常是/usr/local/var)并把它改为/usr/local/mysql/data.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改socket的默认位置:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--with-unix-socket-path=/usr/local/mysql/tmp/mysql.sock</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">只选择要使用的字符集</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql使用latin1和latin1_swedish_ci作为默认的字符集和校队规则,如果想改变安装后的默认字符集和默认排序规则,可以如下编译:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--with-charset=CHARSET&nbsp;&nbsp;--with-collation=COLLATION&nbsp;如果不需要安装所有的字符集,那么编译的时候只选择用户需要安装的字符集,这样可以节省很多资源,并使mysql速度更快.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--with-extra-charsets=LIST</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">LIST可以是下面任何一项:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.空格为间隔的一系列字符集名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.Complex,以包括不能动态装载的所有字符集</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.all,包括所有字符集.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用静态编译提高性能</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./configure&nbsp;--with-client-ldflags=-all-static&nbsp;--with-mysqld-ldflags=-all-static</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">升级Mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">法1:最简单,适合于任何引擎</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A.在目标服务器上安装新版本的mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B.在新版本mysql上创建和老版本同名的数据库:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqladmin&nbsp;-h&nbsp;localhost&nbsp;-p&nbsp;port&nbsp;-u&nbsp;user&nbsp;-p&nbsp;password&nbsp;create&nbsp;db_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C.将老版本mysql上的数据库通过管道导入新版本数据库中:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqldump&nbsp;--opt&nbsp;db_name&nbsp;|&nbsp;mysql&nbsp;-h&nbsp;hostname&nbsp;-p&nbsp;port&nbsp;-u&nbsp;user&nbsp;-p&nbsp;password&nbsp;db_name&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D.将旧版本mysql中的mysql数据库目录全部cp过来覆盖新版本mysql中的mysql数据库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cp&nbsp;-R&nbsp;/home/mysql_old/data/mysql&nbsp;/home/mysql_new/data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">E.在新版本服务器的shell里面执行mysql_fix_privilege_tables命令升级目录权限表.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysql_fix_privilege_tables</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F.&nbsp;重启新版本的mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">法2：适合于任何引擎，速度快</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A.参照法一安装新版本mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B.在旧版本mysql中创建用来保存输出文件的目录并用mysqldump备份数据库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;DUMPDIR</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqldump&nbsp;--tab=DUMPDIR&nbsp;db_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这里的--tab选项不会生成sql文本,而是生成一个.sql和一个.txt文件,.sql保存了表的创建语句,.txt保存了默认分隔符生成的纯数据文本.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C.&nbsp;将DUMPDIR目录中的文件转移到目标服务器上相应的目录中并将文件装载到新版本的mysql中.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqladmin&nbsp;create&nbsp;db_name #创建数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cat&nbsp;DUMPDIR/*.sql&nbsp;|&nbsp;mysql&nbsp;db_name #创建表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlimport&nbsp;db_name&nbsp;DUMPDIR/*.txt #加载数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D.参照方法一种的D,E,F步骤并重启mysql</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:19:12'),
(257, '23 应用优化与负载平衡介绍', '<p>\r\n	<span style="font-size:14px;">使用连接池</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于访问数据库来说,建立连接的代价比较昂贵.连接池是一个存放连接的池子,再具体一些,我们可以把连接当作对象或设备,统一放在一个池子里面,以前需要直接访问数据库的地方,现在都改为从这个池子里面获取连接来使用.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">减少对Mysql的访问</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.避免对同一数据做重复检索&nbsp;如先想得到某人的年龄而查询数据库,然后又想得到某人的地址又来查询同一数据库的表,本来一句sql就可以解决,切记不要分2次查询.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.使用查询缓存&nbsp;它的作用是存储select查询的文本以及相应结果.如果随后收到一个相同的查询,服务器会从查询缓存中重新得到查询结果,而不需要解析和执行查询.适用于更新不频繁的表,当表更改后,查询缓存值的相关条目会被清空.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;show&nbsp;variables&nbsp;like&nbsp;''%query_cache%'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Have_query_cache表明服务器在安装时是否已经配置了高速缓存.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Query_cache_size表明缓存区大小,单位为MB.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Query_cache_type的值从0到2,含义分别为：0或off(缓存关闭),1或者on(缓存打开,使用sql_no_cache提供的select除外),2或者demand(只有带sql_cache的select语句提供高速缓存)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">监视查询缓存的使用状况.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;''Qcache%'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">+-------------------------+-------+</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">|&nbsp;Variable_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Value&nbsp;|&nbsp;含义</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">+-------------------------+-------+</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">|&nbsp;Qcache_free_blocks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;0&nbsp;&nbsp;&nbsp;|查询缓存中的空闲内存块数目</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">|&nbsp;Qcache_free_memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;0&nbsp;&nbsp;&nbsp;|查询缓存的空闲内存总数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">|&nbsp;Qcache_hits&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;0&nbsp;&nbsp;|缓存采样数数目</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">|&nbsp;Qcache_inserts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;|被加入到缓存中的查询数目</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">|&nbsp;Qcache_lowmem_prunes&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;0&nbsp;&nbsp;&nbsp;|缺少内存被缓存删除的查询数目</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">|&nbsp;Qcache_not_cached&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;0&nbsp;&nbsp;&nbsp;|没有被缓存的查询数目</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">|&nbsp;Qcache_queries_in_cache&nbsp;|&nbsp;0&nbsp;&nbsp;|在缓存中已注册的查询数目</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">|&nbsp;Qcache_total_blocks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;0&nbsp;&nbsp;&nbsp;|查询缓存中的块总数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">+-------------------------+-------+</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">负载均衡</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">负载均衡(load&nbsp;balance)是实际应用中使用非常普遍的一种优化方法,它的机制就是利用某种均衡算法,将固定的负载量分布到不同的服务器上,以此来减轻单台服务器的负载,达到优化的目的.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.利用Mysql复制分流查询操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">利用Mysql的主从复制(具体在29章)可以有效地分流更新操作和查询</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">操作,具体的实现是一个主服务器承担更新操作,而多台从服务器承担查询操作,主从之间通过复制实现数据同步.多台从服务器一方面用来确保可用性,一方面可以创建不同的索引以满足不同查询的需要.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于主从之间不需要复制全部表的情况,可以通过在主服务器上搭建一个虚拟的从服务器,将需要复制到从服务器的表设置成blackhole引擎,然后定义replicate-do-table参数只复制这些表,这样就过滤出需要复制的binlog,减少了传输binlog的带宽.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">通过复制来分流查询是减少主数据库负载的一个常用方法,但是这种办法也存在一些问题,最主要的问题是当主数据上更新频繁或者网络出现问题的时候,主从之间的数据可能存在比较大的延迟更新,从而造成查询结果和主数据库上有所差异.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.采用分布式数据库架构</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分布式数据库架构适合大数据量、负载高的情况,它具有良好的扩展性</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">高可用性.通过在多台服务器之间分布数据,可用实现多台服务器之间的负载平均,提高了访问的执行效率.具体实现的时候,可以使用mysql的cluster功能(具体在30章)或者通过用户自己编写的程序来实现全局事务.需要注意的是当前分布式事务只支持InnoDB引擎.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其他优化措施</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.对于没有删除操作的Myisam表,插入操作和查询操作可以并行进行,因为没有删除操作的表查询期间不会阻塞插入操作.对于需要执行删除操作的表,尽量在表空闲时进行批量删除操作,并且删除后使用optimize&nbsp;table操作来消除由于删除操作带来的空洞,以避免将来的更新操作阻塞其他操作.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.充分利用列的默认值,只有插入值不同于默认值时才插入.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.表的字段尽量不使用自增长变量,在高并发情况下该字段的自增可能对效率有比较大的影响,推荐通过应用来实现字段的自增长.</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:19:34');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(258, '22 磁盘IO的问题和数据分布', '<p>\r\n	<span style="font-size:14px;">作为应用系统的持久化层,不管数据库采取了什么样的cache机制,数据最终都是要存在磁盘上.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">实际上我们对sql优化,数据库对象优化,数据库参数优化以及应用优化等,大部分都是想通过减少或延缓磁盘读写来减轻I/O的压力.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">磁盘阵列（RAID）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RAID是Redundant&nbsp;Array&nbsp;of&nbsp;Inexpensive&nbsp;Disks的缩写,通常叫做磁盘阵列.RAID是按照一定策略将数据分布到若干物理磁盘上,这样不仅增强了数据存储的可靠性,而且可以提高数据的读写性能.(因为分布实现了数据并行读写)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RAID&nbsp;0:也叫条带化,连续以位或字节为单位分割数据，并行读/写于多个磁盘上，因此具有很高的数据传输率，但它没有数据冗余，因此并不能算是真正的RAID结构。RAID&nbsp;0只是单纯地提高性能，并没有为数据的可靠性提供保证，而且其中的一个磁盘失效将影响到所有数据。因此，RAID&nbsp;0不能应用于数据安全性要求高的场合.缺点是数据无冗余,可靠性差.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RAID&nbsp;1:也叫磁盘镜像,它是通过磁盘数据镜像实现数据冗余，在成对的独立磁盘上产生互&nbsp;为备份的数据。当原始数据繁忙时，可直接从镜像拷贝中读取数据，因此RAID&nbsp;1可以提高读取性能。RAID&nbsp;1是磁盘阵列中单位成本最高的，但提供了很高的数据安全性和可用性。当一个磁盘失效时，系统可以自动切换到镜像磁盘上读写,而不需要重组失效的数据.缺点是容量一定需要2倍的磁盘.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RAID&nbsp;10:是RAID1和RAID0的结合,也叫RAID1+0.先对磁盘做镜像,在条带化,使其兼具RAID1的可靠性和RAID0的优良并发读写性.缺点是容量一定需要2倍的磁盘.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">RAID&nbsp;4:RAID&nbsp;4同RAID0一样,也将数据条块化并分布于不同的磁盘上，但条块单位为块或记录。另外RAID&nbsp;4使用一块磁盘作为奇偶校验盘，每次写操作都需要访问奇偶盘，这时奇偶校验盘会成为写操作的瓶颈，因此RAID&nbsp;4在商业环境中也很少使用。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　RAID&nbsp;5:RAID&nbsp;5是RAID&nbsp;4的改进.不单独指定的奇偶盘，而是在所有磁盘上交叉地存取数据及奇偶校验信息。在RAID&nbsp;5上，读/写指针可同时对阵列设备进行操作，提供了更高的数据流量。RAID&nbsp;5更适合于小数据块和随机读写的数据。缺点是写性能不如以上,在出现坏盘时,读性能会下降.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">选择合适的RAID级别</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.如果数据读写都很频繁,可靠性要求高,最好选择RAID&nbsp;10.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.如果数据读写频繁,写相对较少,对可靠性有一定要求,可以选择RAID&nbsp;5</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.如果数据读写都很频繁,但可靠性要求不高,可以选择RAID&nbsp;0&nbsp;.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用Symbolic&nbsp;Links&nbsp;分布&nbsp;I/O</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql的数据库名和表名与文件系统的目录名和文件名是相对应的,默认情况下所有的数据库和表都放在参数默认定义的目录下.这样如果不使用RAID或逻辑卷,所有的表都放在一个磁盘设备上,无法发挥多磁盘并行读写的优势！我们可以使用操作系统的符号链接(Symbolic&nbsp;links)将不同的数据库或表或索引指向不同的物理磁盘,从而达到分布磁盘I/O的目的.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.将一个数据库指向其他物理磁盘,先在目标磁盘上建立一个目录,然后在创建从mysql&nbsp;目录到目标目录的符号链接.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mkdir&nbsp;/otherdisk/databases/test</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;ln&nbsp;-s&nbsp;/otherdisk/databases/test&nbsp;/path/to/datadir</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.将myisam(其他存储引擎的表不支持)表的数据文件或索引文件指向其他物理磁盘.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于新建的表,可以通过在create&nbsp;table语句中增加data&nbsp;directory和index&nbsp;directory选项来完成:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如：create&nbsp;table&nbsp;test(id&nbsp;int&nbsp;primary&nbsp;key)type&nbsp;=&nbsp;myisam&nbsp;,data&nbsp;directory&nbsp;=&nbsp;''/disk2/data''&nbsp;,index&nbsp;directory&nbsp;=&nbsp;''/disk3/index''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于已有的表,可以先将其数据文件(.MYD)或索引文件(.MYI)转移到目标磁盘,然后再建立符号链接即可.注表定义文件(.frm)必须位于Mysql默认目录下.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.在Window下使用符号链接是通过在Mysql数据文件目录下创建包含目标路径并以.sym结尾的文本文件来实现的.假如mysql的数据文件目录是C:\\mysql\\data&nbsp;,需要把数据库foo存放到D:\\data\\foo,可以如下实现.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">首先创建目录D:\\data\\foo,然后创建文件C:\\mysql\\data\\foo.sym,在其中输入D:\\data\\foo,这样在数据库foo创建的表都会存储到D:\\data\\foo目录下.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">提示:使用symbolic&nbsp;links存在一定的安全风险,如果不使用symbolic&nbsp;links,应通过启动参数skip-symbolic-links禁用这一功能.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">禁止操作系统更新文件的atime属性</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">atime是linux系统下的文件属性,每当读取文件时操作系统都会更改atime.对于atime的使用基本不会用到但是atime会影响I/O的性能.所以我们可以关闭修改atime属性以减轻磁盘I/O的负担.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.修改文件系统配置文件/etc/fstab,指定noatime选项:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">LABEL=/home&nbsp;/home&nbsp;ext3&nbsp;noatime&nbsp;1&nbsp;2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.重新mount文件系统:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#mount&nbsp;-oremount&nbsp;/home</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用裸设备(Raw&nbsp;Device)存放InnoDB的共享表空间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Myisam存储引擎有自己的缓存机制,但数据文件的读写完全依赖于操作系统,操作系统磁盘I/O缓存对Myisam的存取很重要.但InnoDB与Myisam不同,它类似Oracle的数据缓存机制来Cache索引和数据,操作系统的磁盘I/O缓存对其性能不仅没有帮助,甚至还有反作用.因此在InnoDB缓存充足的情况下,可以考虑使用Raw&nbsp;Device来存放InnoDB共享表空间.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.修改Mysql配置文件,在innodb_data_file_path参数增加裸设备文件名并指定newraw属性:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_data_home_dir&nbsp;=&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_data_file_path=/dev/hdd1:3Gnewraw;/dev/hdd2:2Gnewraw</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.启动Mysql,使其完成分区初始化工作,然后关闭mysql,此时还不能创建或修改InnoDB表:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.将innodb_data_file_path中的newraw改成raw:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_data_home_dir&nbsp;=&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_data_file_path=/dev/hdd1:3Graw;/dev/hdd2:2Graw</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.重新启动既可使用.</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:19:52'),
(259, '21 优化Mysql Server和相关参数', '<p>\r\n	<span style="font-size:14px;">查看Mysql&nbsp;Server参数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql服务启动后，我们可以用&nbsp;show&nbsp;variables&nbsp;;&nbsp;和&nbsp;show&nbsp;status&nbsp;;&nbsp;命令查看Mysql服务器静态和动态的信息，其中前者是数据库启动后不会更改的值如字符集，数据文件名称等；后者是数据库动态变化的值如锁等待，当前连接数等。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">也可以在操作系统下直接查看数据库参数或数据库状态信息:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F:\\AppServ\\MySQL\\bin&gt;mysqladmin&nbsp;-uroot&nbsp;-p&nbsp;variables&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F:\\AppServ\\MySQL\\bin&gt;mysqladmin&nbsp;-uroot&nbsp;-p&nbsp;status&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql服务器的参数很多，需要了解某个参数的详细定义，可以使用命令：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F:\\AppServ\\MySQL\\bin&gt;mysqld&nbsp;--verbose&nbsp;--help&nbsp;|&nbsp;more&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果在Linux上则可以&nbsp;mysqld&nbsp;--verbose&nbsp;--help|grep&nbsp;''bdb'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">影响Mysql性能的重要参数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">key_buffer_size:用来设置索引块(index&nbsp;blocks)缓存的大小，它被所有线程共享，此参数只适用于Myisam存储引擎。Mysql-5.1以后支持多个key_buffer,可以将指定的表索引缓存入指定的key_buffer.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">建立一个新的索引缓存:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;set&nbsp;global&nbsp;cache_name.key_buffer_size&nbsp;=&nbsp;128*1024;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将相关表的索引放入指定的索引缓存中:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;cache&nbsp;index&nbsp;tablename[,tablename1]&nbsp;in&nbsp;cache_name;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你又想把索引预装到默认的key_buffer中:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;load&nbsp;index&nbsp;into&nbsp;cache&nbsp;tablename;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除自己建立的索引缓存:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;set&nbsp;global&nbsp;cache_name.key_buffer_size=0;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">小技巧:Cache&nbsp;inde&nbsp;命令在一个表和key_buffer之间建立一种联系,但每次服务器重启时key_buffer中的数据将被清空，如果想要每次服务器重启时相应表的索引能自动放key_buffer,可以在配置文件中设置init_file选项来指定包含cache&nbsp;index语句的文件路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：打开my.cnf文件,加上以下语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">key_buffer_size&nbsp;=&nbsp;4G</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache_name1.key_buffer_size&nbsp;=&nbsp;2G</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache_name2.key_buffer_size&nbsp;=&nbsp;2G</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">init_file&nbsp;=&nbsp;/path/to/data-directory/mysql_init.sql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">则每次服务器启动自动执行mysql_init.sql,该文件每行应包含一个SQL语句,下面分别对cache_name1和cache_name2分配。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache&nbsp;index&nbsp;table1,table2&nbsp;in&nbsp;cache_name1;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">cache&nbsp;index&nbsp;table3,table4&nbsp;in&nbsp;cache_name2;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Table_cache的设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Table_cache这个参数表示数据库用户打开表的缓存数量,每个连接进来都会至少打开一个,因此table_cache与max_connections有关，例如对于200个并行运行的连接，应该缓存至少有200*N，这里的N是可以执行的查询的一个连接表中的最大数量。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以通过检查mysqld的状态变量open_tabels和opened_tables确定，前者表示当前打开的缓存数，后者代表曾经打开过的缓存表数。如果使用flush&nbsp;tables操作，则前者会关闭没有使用的表缓存而后者不变。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;''open_tables'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;flush&nbsp;tables;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;''open_tables'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;show&nbsp;status&nbsp;like&nbsp;''opened_tables'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">提示：状态值''open_tables''对于设置table_cache更有价值.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innode_buffer_pool_size的设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个参数定义了InnoDB存储引擎的表数据和索引数据的最大内存缓存区大小.和Myisam存储引擎不同的是,myisam的key_buffer_size只缓存索引键而innodb_buffer_pool_size要同时缓存数据块和索引块.这个值越高,访问数据需要的磁盘i/o就越少，在一个专用的数据库服务器上,可以设置这个参数达到物理内存的80%.但是建议还是不要设太大.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_flush_log_at_trx_commit的设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个参数是用来控制缓冲区的数据写入到日志文件以及日志文件数据刷新到磁盘的操作时机,可以用这个参数对数据库在性能与安全之间折中.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">值0&nbsp;&nbsp;代表日志缓冲每秒一次地写入到日志文件,并对日志文件做向磁盘刷新的操作,但是在一个事务不提交时不做任何操作.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">默认值1&nbsp;代表每一次事务提交时日志缓冲被写到日志文件,并对日志文件做向磁盘刷新的操作</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">值2&nbsp;代表事务提交时,日志缓冲被写到日志文件,但不对日志文件做向磁盘刷新的操作.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注:设置为1因为会写到日志并刷新磁盘,必然对性能有影响.如果可以容忍数据库崩溃的时候损失一部分数据,那么设置为0或2更好.如果设置为0,则在数据库崩溃时会丢失没有被写入的日志文件的事务,最多丢失一秒,这种方式最不安全但效率最高.设置为2只是没有刷新磁盘但已经写入了数据,所以只要操作系统不崩溃,那么就没有丢失数据.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_additional_mem_pool_size的设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个参数是innodb存储引擎用来存储数据结构和其他内部数据结构的内存池大小,默认值是1MB.应用程序里的表越多,则需要在这里分配越多的内存.如果innodb用光了这个内存池的内存,就会从操作系统分配内存,并往mysql错误日志写警告.没必要分配给它过大,在应用相对稳定下,这个缓存池的大小也相对稳定.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_lock_wait_timeout的设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql可以自动检测行锁导致的死锁并进行相应的处理,但是对于表锁导致的死锁不能自动检测,所以该参数主要用于在出现类似情况的时候等待指定时间后回滚.默认50秒</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_log_buffer_size的设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">此参数是日志缓存的大小,默认的设置是中等强度写入负载以及较短事务的情况下,一般都可以满足服务器的性能要求.如果更新操作峰值或负载较大,就应该考虑加大它的值.如果值太高,可能会浪费内存,通常8~16M足够了.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_log_file_size的设置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">此参数表示一个日志组(log&nbsp;group)中每个日志文件的大小.此参数在高写入负载尤其是大数据集的情况下很重要.这个值越大则性能相对越高,但是带来的副作用是,当系统灾难时恢复时间会加大.默认是5MB.</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:20:12'),
(260, '31 Mysql常见问题和应用技巧 ', '<p>\r\n	<span style="font-size:14px;">1.忘记Mysql的root密码</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A.登陆到数据库所在服务器,手工kill掉mysql进程</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;Kill&nbsp;`cat&nbsp;/mysql-data-direcroty/hostname.pid`</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其中.pid里面有Mysql服务的进程号.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B.使用--skip-grant-tables选项重启mysql服务</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqld_safe&nbsp;--skip-grant-tables&nbsp;--user=xz&nbsp;&amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;starting&nbsp;mysqld&nbsp;daemon&nbsp;with&nbsp;databases&nbsp;from&nbsp;/home/zxx/mysql/data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C.用空密码的root用户连接到mysql,并且更改root密码</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysql&nbsp;-uroot</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;update&nbsp;user&nbsp;set&nbsp;password=password(''new'')&nbsp;where&nbsp;user&nbsp;=&nbsp;''root''&nbsp;and&nbsp;host&nbsp;=&nbsp;''localhost''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D.&nbsp;刷新权限表,使得权限认证重新生效</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;flush&nbsp;privileges;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.如何处理Myisam存储引擎的表损坏</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果经常使用mysql,可能会遇到myisam存储引擎的表损坏的情况.一张损坏的表的症状通常是查询意外中断并且能看到下述错误：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">tab_name.frm被锁定不能更改;不能找到文件tab_name.myi;文件意外结束;记录文件被毁坏;从表处理器得到错误nnn.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">解决方法一:使用mysql自带的myisamchk工具修复.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Myisamchk&nbsp;-r&nbsp;tablename或myisamchk&nbsp;-o&nbsp;tablename</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">解决方法二：使用mysql的check&nbsp;table&nbsp;和&nbsp;repair&nbsp;table命令一起进行修复.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;Check&nbsp;table&nbsp;table_name;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;repair&nbsp;table&nbsp;table_name;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.数据目录磁盘空间不足的问题</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于Myisam表,在建表时可以用如下选项分别指定数据目录和索引目录存储到不同的磁盘空间,而默认会同时放在数据目录下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Data&nbsp;directory&nbsp;=&nbsp;''绝对路径''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Index&nbsp;directory&nbsp;=&nbsp;''绝对路径''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：mysql&gt;&nbsp;create&nbsp;table&nbsp;xiaozhe(id&nbsp;int&nbsp;,&nbsp;name&nbsp;char(40))</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;data&nbsp;directory&nbsp;=&nbsp;''/var/lib/mysql/data''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;index&nbsp;directory&nbsp;=&nbsp;''/var/lib/mysql/index''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于InnoDB表,因为索引文件和数据文件是放在一起的,所以当磁盘空间不足时,可以使用参数innodb_data_file_path来增加此文件,路径必须为绝对路径.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：如果/home下空间不足,希望在/home1下增加一个可自动扩充的数据文件,那么参数可以这么写Innodb_data_file_path&nbsp;=&nbsp;/home/ibdata1:2000M;/home1/ibdata2:2000M:autoextend&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.Mysql.sock丢失后如何连接数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在mysql服务器本机连接数据库时经常会出现mysql.sock不存在,因为如果指定localhost作为主机名,则mysqladmin默认使用unix套接字文件连接(mysql.sock)而不是tcp/ip.这时我们可以通过选项--protocol=&nbsp;tcp&nbsp;|&nbsp;socket&nbsp;|&nbsp;pipe&nbsp;|&nbsp;memory&nbsp;选项来显示指定连接协议.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysql&nbsp;--protocol=tcp&nbsp;&nbsp;-hlocalhost&nbsp;-uroot&nbsp;-p</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.同一台服务器运行多个mysql数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">将每个mysql安装在不同的用户下面,例如mysql1和mysql2,在每个用户下面执行如下操作：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;export&nbsp;MYSQL_HOME&nbsp;=&nbsp;/home/mysql1/mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;groupadd&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;useradd&nbsp;-g&nbsp;mysql&nbsp;mysql1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cd&nbsp;/home/mysql1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;tar&nbsp;-xvzf&nbsp;/home/mysql1/mysql-VERSION-os.tar.gz</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;ln&nbsp;-s&nbsp;mysql-VERSION-os.tar.gz&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cd&nbsp;mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;cp&nbsp;support-files/my-large.cnf&nbsp;./my.cnf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改配置文件,主要修改[client]和[mysqld]下面的port和socket,并指定字符集.如</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[client]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Port&nbsp;=&nbsp;3307</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Socket&nbsp;=&nbsp;/home/mysql1/mysql/data/mysql.sock</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Default-character-set=utf8</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Port&nbsp;=&nbsp;3307</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Socket&nbsp;=&nbsp;/home/mysql1/mysql/data/mysql.sock</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后执行加载数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;scripts/mysql_install_db&nbsp;--user=mysql1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;root:mysql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;chown&nbsp;-R&nbsp;mysql1:mysql&nbsp;data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;bin/mysql_safe&nbsp;--user=mysql1&nbsp;&amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql2用户执行和mysql1类似,区别在于指定不同的MYSQL_HOME以及不同的port和socket.</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:20:31'),
(261, '30 Mysql Cluster(集群)的概念和架构 ', '<p>\r\n	<span style="font-size:14px;">Mysql自4.1.x版本开始推出mysql&nbsp;cluster功能,Cluster简单地说就是一组节点的组合.这里的节点是一个逻辑概念,一台计算机上可以存放一个节点,也可以存放多个节点.节点的功能也各不相同,有的用来存储数据(数据节点),有的用来存放表结构(sql节点),有的用来对其他节点进行管理(管理节点).</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql使用NDB存储引擎来对数据节点的数据进行存储,以前版本的NDB存储引擎只支持基于内存的数据表,从5.1版本开始支持基于磁盘的数据表.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">理论上,mysql&nbsp;cluster通过数据的分布式和可扩展的系统架构,可以满足更大规模的应用;而且通过冗余策略,可以大大地提高系统的可靠性和数据的有效性.</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01014w3l&amp;url=http://s9.sinaimg.cn/orignal/788e5b7agbe7c11cf62a8" target="_blank"><img src="http://s9.sinaimg.cn/middle/788e5b7agbe7c11cf62a8&amp;690" alt="30&nbsp;&lt;wbr&gt;Mysql&nbsp;&lt;wbr&gt;Cluster(集群)的概念和架构" title="30&nbsp;&lt;wbr&gt;Mysql&nbsp;&lt;wbr&gt;Cluster(集群)的概念和架构" /></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">从图30-1可以看出mysql&nbsp;cluster按照节点类型分为3部分：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">管理节点：用来对其他节点进行管理,实际操作中,是通过一个叫作config.ini的配置文件进行维护而起到管理的作用.该文件可以用来配置多少需要维护的副本,需要在每个数据节点上为数据和索引分配多少内存等.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">SQL节点:是应用和数据节点之间的一个桥梁.应用不能直接访问数据节点,只能先访问SQL节点,然后SQL节点再去访问数据节点来返回数据.cluster中可以有多个SQL节点,通过每个SQL节点查询到的数据都是一致的,通常来说,sql节点越多,分配到每个SQL节点的负载就越小,系统的整体性能就越好.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据节点:用来存放cluster里面的数据,可以有多个数据节点.每个数据节点可以有多个镜像节点.任何一个数据节点发生故障,只要它的镜像节点正常,cluster就可以正常运行.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">总结:mysql&nbsp;cluster的访问过程,前台应用一定的负载均衡算法将对数据库的访问分散到不同的sql节点上,然后sql节点对数据节点进行数据访问并从数据节点返回结果,最后sql节点将收到的结果返回给前台应用.而管理节点并不参与访问过程,它只用来对sql节点和数据节点进行配置管理.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&nbsp;Cluster的配置(暂不支持windows,书中472页)</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:21:28'),
(262, 'The slave I/O thread stops(equal MySQL server ids) ', '<div>\r\n	<span style="font-size:14px;">在学习replication时遇到了如下问题：</span>\r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</div>\r\n<div>\r\n	<img src="http://blogimg.chinaunix.net/blog/upfile2/100121172425.jpg" border="0" width="500" alt="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" title="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" /> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">显然看到Slave_IO_Running 为NO 表示有问题；</span>\r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">到日志里查看，错误如下：</span>\r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</div>\r\n<table border="1">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">position 98</span><br />\r\n<span style="font-size:14px;"> 100121 17:09:03&nbsp;[ERROR]&nbsp;The slave I/O thread stops because master&nbsp;and&nbsp;slave have equal MySQL server ids;&nbsp;these ids must be different&nbsp;for&nbsp;replication to work&nbsp;(or&nbsp;the--replicate-same-server-id&nbsp;option&nbsp;must be used on slave but&nbsp;this&nbsp;does&nbsp;not&nbsp;always make sense;&nbsp;please check the manual before using it).</span><br />\r\n<span style="font-size:14px;"> 100121 17:09:03&nbsp;[Note]&nbsp;Slave I/O thread exiting,&nbsp;read up to log&nbsp;''mysql-bin.000007'',position 98</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">怀疑是server-id的原因。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">于是如图：</span>\r\n</p>\r\n<div>\r\n	<img src="http://blogimg.chinaunix.net/blog/upfile2/100121172656.jpg" border="0" width="500" alt="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" title="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" /> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">显然， 42和88行都定义了server-id。 于是注释了88行。</span>\r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">操作 vi /etc/my.cnf，找到第88行， 将server-id注释掉</span>\r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">如图：</span>\r\n</div>\r\n<div>\r\n	<img src="http://blogimg.chinaunix.net/blog/upfile2/100121172850.jpg" border="0" width="500" alt="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" title="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" /> \r\n</div>\r\n<p>\r\n	<br />\r\n<span style="font-size:14px;"> 再次查询/etc/my.cnf</span>\r\n</p>\r\n<div>\r\n	<img src="http://blogimg.chinaunix.net/blog/upfile2/100121173006.jpg" border="0" width="500" alt="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" title="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" /> \r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">然后重启mysqld服务，service mysqld restart&nbsp;&nbsp;问题即可解决</span>\r\n</div>\r\n<div>\r\n	<span style="font-size:14px;">如下显示就表示正常：</span>\r\n</div>\r\n<div>\r\n	<img src="http://blogimg.chinaunix.net/blog/upfile2/100121173057.jpg" border="0" width="500" alt="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" title="The&nbsp;&lt;wbr&gt;slave&nbsp;&lt;wbr&gt;I/O&nbsp;&lt;wbr&gt;thread&nbsp;&lt;wbr&gt;stops(equal&nbsp;&lt;wbr&gt;MySQL&nbsp;&lt;wbr&gt;server&nbsp;&lt;wbr&gt;ids)" /> \r\n</div>', 12, 'mysql', 1, 0, 1, '2013-03-10 13:21:51');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(263, '29 Mysql复制(即主从服务器搭配) ', '<p>\r\n	<span style="font-size:14px;">Mysql复制</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">含义是将主数据库的DDL和DML操作通过二进制日志传到复制服务器(也叫从服务器)上,然后在从服务器上对这些日志重新执行(也叫重做),从而使得从服务器和主服务器的数据保持同步.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql支持一台主服务器同时向多台从服务器进行复制,从服务器同时也可以作为其他服务器的主服务器,实现链状复制.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">优点:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.如果主服务器出现问题,可以快速切换到从服务器提供服务.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.可以在从服务器上执行查询操作,降低主服务器的访问压力.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.可以在从服务器上执行备份,以避免备份期间影响主服务器的服务.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：由于Mysql实现的是异步复制,所以主从服务器之间存在一定的差距,在从服务器上进行查询操作需要考虑到这些数据的差异,一般只有更新不频繁的数据或对实时性要求不高的数据可以通过从服务器查询,实时性要求高的数据仍然需要从主服务器获得.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">安装配置(详细步骤在书中451页)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.确保主从服务器安装了相同版本的数据库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.在主服务器上,设置一个复制使用的账户,可以从ip192.168.1.101的主机进行连接,并授予replication&nbsp;slave权限.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;replication&nbsp;slave&nbsp;on&nbsp;*.*&nbsp;to&nbsp;</span><a href="mailto:''rep1''@''192.168.1.101''"><span style="font-size:14px;">''rep1''@''192.168.1.101''</span></a><span style="font-size:14px;">&nbsp;identified&nbsp;by&nbsp;''1234''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.修改主数据库服务器的配置文件my.cnf,开启binlog并设置server-id的值.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Log-bin&nbsp;=&nbsp;/home/mysql/log/mysql-bin.log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Server-id&nbsp;=&nbsp;1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.在主服务器上,设置读锁定有效,这个操作是为了确保没有数据库操作,以便获得一个一致性的快照.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;flush&nbsp;tables&nbsp;with&nbsp;read&nbsp;lock;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.然后得到主服务器上当前的二进制日志名和偏移量值.这个操作的目的是为了在从数据库启动后,从这个点开始进行数据的恢复,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;show&nbsp;master&nbsp;status;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.现在主数据库服务器已经停止了更新操作,需要生成主数据库的备份,备份方式可以是直接cp全部的数据文件到从数据库服务器上,也可以通过mysqldump导出数据.如果主数据库的服务可以停止,那么直接使用cp数据文件是最快的方法.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;tar&nbsp;-cvf&nbsp;data.tar&nbsp;data&nbsp;#打包数据库下data目录的文件(只要数据文件和mysql-bin文件)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.主数据库的备份完毕后,主数据库可以恢复写操作,剩下的操作只需要在从服务器上执行.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;unlock&nbsp;tables;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8.将主数据库的一致性备份恢复到从数据库上,如果是使用.tar打包的文件包,只需要解开到相应的目录即可.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9.修改从数据库的配置文件my.cnf,增加server-id参数.注意server-id的值必须是唯一的,不能和主数据库的配置相同,如果有多个从数据库服务器,每个从数据库服务器必须有自己唯一的server-id值.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Server-id&nbsp;=&nbsp;2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10.在从服务器上,使用--skip-slave-start选项启动从数据库,这样不会立即启动从数据库服务上的复制进程,方便我们对从数据库的服务进行进一步的配置.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;./bin/mysqld_safe&nbsp;--skip-slave-start&nbsp;&amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;starting&nbsp;mysqld&nbsp;daemon&nbsp;with&nbsp;databases&nbsp;from&nbsp;/home/mysql/sysdb/data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11.对从数据库服务器做相应的设置,指定复制使用的用户,主数据库服务器的IP,端口以及开始执行复制的日志文件和位置等,具体语法如下:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;change&nbsp;master&nbsp;to</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_host&nbsp;=&nbsp;''master_host_name'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_port&nbsp;=&nbsp;&nbsp;master_port,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_user&nbsp;=&nbsp;''replication_user_name'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_password&nbsp;=&nbsp;''replication_password'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_log_file&nbsp;=&nbsp;''recorded_log_file_name'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_log_pos&nbsp;=&nbsp;recorded_log_position;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于本例应该是:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;change&nbsp;master&nbsp;to</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_host&nbsp;=&nbsp;''192.168.1.100'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_port&nbsp;=&nbsp;&nbsp;3306,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_user&nbsp;=&nbsp;''rep1'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_password&nbsp;=&nbsp;''1234'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_log_file&nbsp;=&nbsp;''mysql-bin.000039'',</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;&nbsp;master_log_pos&nbsp;=&nbsp;102;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12.在从服务器上,启动slave线程.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;start&nbsp;slave;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">13.这时在slave上执行show&nbsp;processlist命令将显示类似如下进程(参考书中453页).</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;show&nbsp;processlist&nbsp;\\G&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">14.在slave上执行show slave status \\G ;如果Slave_IO_Running和Slave_SQL_Running都为YES，则证明配置成功,如果为NO,那你就可以查看mysql_error日志文件查看.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">主要复制的启动选项</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上一节的配置选项中,我们已经提到了一些选项如master_host,master_user等.下面介绍几个常用的启动选项.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Log-slave-updates:这个参数用来配置从服务器上的更新操作是否写二进制日志,默认是不打开的.但是如果这个从服务器同时也要作为其他服务器的主服务器,搭建一个链式的复制,那么就需要打开这个选项.这个参数需要和--logs-bin参数一起使用.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Master-connect-retry:这个参数用来设置在和主服务器连接丢失的时候,重试的时间间隔,默认是60秒.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Read-only:这个参数用来设置从服务器只能接受超级用户的更新操作,从而限制应用程序错误的对从服务器的更新操作.下面创建了一个普通用户,在默认情况下,该用户是可以更新从数据库中的数据,但是使用read-only选项启动从数据库后,该用户对从数据的更新会提示错误.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">指定复制的数据库或者表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Replicate-do-db,replicate-do-table,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">replicate-ignore-db,replicate-ignore-table可以用来指定主数据库复制到从数据库的数据库或表.例如只复制主数据库test中的xiaozhe表,则在启动时:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">shell&gt;./bin/mysqld_safe&nbsp;&nbsp;--replicate-do-table&nbsp;=&nbsp;test.xiaozhe&nbsp;&amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;starting&nbsp;mysqld&nbsp;daemon&nbsp;with&nbsp;databases&nbsp;from&nbsp;/home/mysql/sysdb/data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Slave-skip-errors:在复制过程中,由于各种原因,从服务器可能会遇到执行Binlog中的sql出错的情况(比如主键冲突),默认情况下会停止复制进程,不再同步,等待用户介入处理.此参数可以跳过错误号,继续执行后面的sql语句.可以定义多个错误号或者定义成all跳过全部的错误.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--slave-skip-errors&nbsp;=&nbsp;[err_code1,err_code2,...&nbsp;|&nbsp;all]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">主,从服务器的维护</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看从服务器的状态:mysql&gt;&nbsp;show&nbsp;slave&nbsp;status&nbsp;\\G&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在显示的信息中,我们主要关系的是slave_io_running和slave_sql_running这个两个进程状态是否为yes.只要有一个为no,则表示进程停止,错误原因从last_errno字段可以查看.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Slave_io_running:此进程负责从服务器从主服务器上读取binlog日志,并写入从服务器上的中继日志中.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Slave_sql_running:此进程负责读取并且执行中继日志中的binlog日志.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">主从服务器同步维护：在某些繁忙的OLTP(在线事务处理)系统上,由于主服务器更新频繁而从服务器更新速度缓慢,使得主从服务器之间的数据差距越来越大,这种情况下我们需要进行主从服务器的数据同步.常用的方法是在负载较低的时候暂时阻塞主数据库的更新,强制主从数据库更新同步.具体步骤如下(书中460详细).</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.在主服务器上,执行以下语句(注意,会阻塞主数据的所有更新操作)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;flush&nbsp;tables&nbsp;with&nbsp;read&nbsp;lock&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">记录二进制日志名和偏移量,这些是从服务器负载的目的坐标,假如名字是mysql-bin.000039,位置是974</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;show&nbsp;master&nbsp;status;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.在从服务器上,执行下面语句,其中master_pos_wait()函数的参数是前面步骤中得到的复制坐标值</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;select&nbsp;master_pos_wait(''mysql-bin.000039'',''974'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个select语句会阻塞直到从服务器达到指定的日志文件和偏移量后,返回0,如果返回-1,则表示超时退出.返回0则从服务器与主服务器同步.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.在主服务器上,执行下面语句允许主服务器重新开始处理更新</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;unlock&nbsp;tables;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Log&nbsp;event&nbsp;entry&nbsp;exceeded&nbsp;max_allowed_packet的处理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果应用中使用大的blog列或者长字符串,那么在从服务器上恢复的时候,可能会出现log&nbsp;event&nbsp;entry&nbsp;exceeded&nbsp;max_allowed_packet的错误,这是因为含有大文本的记录无法通过网络进行传输导致.方法是在my.cnf将max_allowed_packet参数设置为16M,默认是1M.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">多主复制时自增变量冲突的问题(463页)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在大多数情况下,一般是单主复制(一台主服务器多台从服务器),但是在某些情况下,可能需要使用多主复制(多台主服务器多台从服务器).这个时候如果主服务器的表采用自动增加变量,那么复制到从服务器的同一张表后很可能会引起主键冲突.因为系统参数auto_increment_increment和auto_increment_offset默认值为1.所以在多主复制的时候,就要定制以上两个系统参数.比如两个master的情况可以这样设置:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Master1&nbsp;:&nbsp;auto_increment_increment&nbsp;=&nbsp;2,auto_increment_offset&nbsp;=&nbsp;1;&nbsp;(1,3,5,7,.....)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Master2&nbsp;:&nbsp;auto_increment_increment&nbsp;=&nbsp;2,auto_increment_offset&nbsp;=&nbsp;0;&nbsp;(0,2,4,6,.....)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看从服务器的复制进度(466页)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这个值通过show&nbsp;processlist列表中的slave_sql_running线程的time值得到,它记录了从服务器当前执行的sql时间戳与系统时间之间的差距,单位是秒.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">切换主从服务器(468页)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假设一个主数据库服务器M和两个从数据库服务器S1,S2.当主数据库M出现问题的时候,我们需要将从数据库S1切换成新的主数据库,同时修改从数据库S2指向新的主数据库S1.此外还需要通知应用修改主数据库的IP地址,如果有可能将出现故障的主数据库M修复或重新重置成新的从数据库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.首先要确保所有的从数据库都已经执行了relay&nbsp;log中的全部更新,在每个从服务器上,执行stop&nbsp;slave&nbsp;io_thread,然后检查show&nbsp;processlist的输出,直到看到状态是has&nbsp;read&nbsp;all&nbsp;relay&nbsp;log,表示更新都执行完毕.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;stop&nbsp;slave&nbsp;io_thread&nbsp;;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;show&nbsp;processlist&nbsp;\\G&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.在从数据库S1上,执行stop&nbsp;slave停止从服务,然后reset&nbsp;master重置成主数据库.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;stop&nbsp;slave;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;reset&nbsp;master;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.在S2上,执行stop&nbsp;slave停止从服务,然后执行change&nbsp;master&nbsp;to&nbsp;master_host&nbsp;=&nbsp;''S1''&nbsp;重新设置主数据库,然后再执行start&nbsp;slave启动复制.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;stop&nbsp;slave;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;change&nbsp;master&nbsp;to&nbsp;master_host&nbsp;=&nbsp;''s1_host'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;start&nbsp;slave&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.通知所有的客户端将应用指向S1,这样客户端发送的所有更新语法写入到S1的二进制日志.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.删除新的主数据库服务器(S1)上的master.info和relay-log.info文件,否则下次启动的时候还会按照从服务器启动.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.最后如果M服务器可以修复,则按照S2的方法配置成S1的从服务器.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注意：上面测试的步骤是默认S1是打开log-bin选项的,这样重置成主数据库后可以讲二进制日志传输到其他从服务器,其次S1上没有打开log-slave-updates参数,否则重置成主数据库后,可以会将已经执行过的二进制日志重复传输给S2.</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:22:13'),
(264, '28 Mysql权限与安全', '<p>\r\n	<span style="font-size:14px;">权限管理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当用户连接的时候,权限表的存取过程有以下两个阶段.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.先从user表的host,user,password这3个字段中判断连接的ip,用户名,密码是否存在于表中.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.如果通过身份验证,则按照以下权限表的顺序得到数据库权限:user-&gt;db-&gt;tables_priv-&gt;columns_priv.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在这几个权限表中,优先级递减.即如果有user权限将不再检查后面的权限,如果没有user权限将会检查db权限.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">深入理解权限表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.创建用户xiaozhe@localhost并赋予所有数据上的所有表的select权限.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;select&nbsp;on&nbsp;*.*&nbsp;to&nbsp;xiaozhe@localhost;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查询User表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;user=''xiaozhe''&nbsp;\\G;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.可以发现user表的select_priv列是Y.我们可以看看db表&nbsp;mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;db;&nbsp;可以发现里面没有任何数据,也就是说对所有数据库都具有相同权限的用户记录并不需要记入db表,而仅仅需要将user表中的select_priv改为Y&nbsp;即可.换句话说user表中的每个权限都代表了对所有数据库都有的权限.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.将xiaozhe@localhost上的权限改为只对test数据库上的表有select权限.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;revoke&nbsp;select&nbsp;on&nbsp;*.*&nbsp;from&nbsp;xiaozhe@localhost&nbsp;;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;select&nbsp;on&nbsp;test.*&nbsp;to&nbsp;xiaozhe@localhost;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;user&nbsp;=&nbsp;''xiaozhe''&nbsp;\\G;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;db&nbsp;&nbsp;\\G;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这时候你可以发现user表中的select_priv变为了N,而db表中增加了db为test的一条记录.也就是说当授予部分数据库某些权限时,user表中的相应权限列保持N,而将具体的数据库权限写入db表.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">账号管理</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.创建用户xz,权限可以在所有数据库上执行所有权限(不包含grant权限)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;all&nbsp;on&nbsp;*.*&nbsp;to&nbsp;''xz''@''localhost''&nbsp;;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.创建用户xz,权限可以在所有数据库上执行所有权限(包含grant权限)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;all&nbsp;on&nbsp;*.*&nbsp;to&nbsp;''xz''@''localhost''&nbsp;with&nbsp;grant&nbsp;option&nbsp;;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.创建用户xz,权限可以在所有数据库上执行所有权限(包含grant权限),并设置密码123</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;all&nbsp;on&nbsp;*.*&nbsp;to&nbsp;''xz''@''localhsot''&nbsp;identified&nbsp;by&nbsp;''123''&nbsp;with&nbsp;grant&nbsp;option&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.创建用户xz,可以从任何IP进行连接,权限为对test数据库里的所有表进行select&nbsp;,update,insert操作,并设置密码123</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;select,update,insert&nbsp;on&nbsp;test.*&nbsp;to&nbsp;''xz''@''%''&nbsp;identified&nbsp;by&nbsp;''123''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：其中host列的值%的含义与like操作符的模式匹配相同,例如只匹配mysql.com域的所有主机.&nbsp;''%.mysql.com''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.授予super、process、file权限给用户xz@%</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;super,process,file&nbsp;on&nbsp;*.*&nbsp;to&nbsp;''xz''@''%'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">因为这几个权限都属于管理权限,因此不能指定某个数据库,on后面必须跟*.*&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.只授权登陆权限给xz@localhost</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;usage&nbsp;on&nbsp;*.*&nbsp;to&nbsp;''xz''@''localhost''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看和更改账户权限</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看权限:mysql&gt;&nbsp;show&nbsp;grants&nbsp;for&nbsp;''xz''@''localhost''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于mysql5.0以后的版本,新增information_schema数据库进行权限的查看:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;use&nbsp;information_schema;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;schema_privileges&nbsp;where&nbsp;grantee&nbsp;=&nbsp;"''xz''@''localhost''";</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">更改权限:可以使用grant(新增)和revoke(回收)更改权限</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Revoke和grant的用法差不多.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">比如回收用户的查询和插入权限:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;revoke&nbsp;select,insert&nbsp;on&nbsp;*.*&nbsp;from&nbsp;xz@localhost;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注:usage权限(登陆权限)不能被回收,也就是说revoke不能删除用户.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改密码</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.使用mysqladmin命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqladmin&nbsp;-u&nbsp;username&nbsp;-h&nbsp;hostname&nbsp;password&nbsp;''new_password''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.执行set&nbsp;password语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;set&nbsp;password&nbsp;for&nbsp;''xz''@''localhost''&nbsp;=&nbsp;password(''new_password'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果是更改自己的密码,可以省略for语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;set&nbsp;password&nbsp;=&nbsp;password(''new_password'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.在全局级别使用grant&nbsp;usage&nbsp;语句在(*.*)&nbsp;来指定某个账户的密码而不影响账户当前的权限</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;usage&nbsp;on&nbsp;*.*&nbsp;to&nbsp;''xz''@''localhost''&nbsp;identified&nbsp;by&nbsp;''new_password''&nbsp;;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除账号</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">语法:Drop&nbsp;user&nbsp;username&nbsp;[,username]&nbsp;....</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如删除用户xz@localhost</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;drop&nbsp;user&nbsp;''xz''@''localhost''&nbsp;;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql安全问题</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">操作系统相关的安全问题</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.严格控制操作系统账号和权限.如锁定mysql用户;mysql用户目录下,除了数据文件目录,其他文件和目录属主都改为root.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.尽量避免以root权限运行mysql.因为如果以root用户运行mysql,则任何拥有FILE权限的用户都可以讲数据库里面的信息导出到磁盘上.如:select&nbsp;*&nbsp;from&nbsp;user&nbsp;into&nbsp;outfile&nbsp;''/use.txt''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.防止DNS欺骗.创建用户时,host可以指定为域名或者ip地址,如果为域名的话,当域名对应的ip地址被恶意修改,就会造成安全隐患.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据库相关的安全问题</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.删除匿名账户.即删除空账户,mysql&gt;&nbsp;drop&nbsp;user&nbsp;''''@''localhost'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.给root账户设置口令.mysql&gt;&nbsp;set&nbsp;password=password(''new'');</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.设置安全密码.密码建议6位以上.并以交互式方法输入shell&gt;&nbsp;mysql&nbsp;-uroot&nbsp;-p</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.只授予账号必须的权限.切忌不要一次grant&nbsp;all&nbsp;权限</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.除root外,任何用户不应有mysql库user表的存取权限.不然你密码被改了都不知道</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.不要把FILE,PROCESS和SUPER权限授予管理员以外的账户.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">FILE权限是:将数据库的信息通过select&nbsp;...&nbsp;Into&nbsp;outfile&nbsp;..写到服务器上有权限的目录下作为文本格式保存.或将有读权限的文本文件通过load&nbsp;data&nbsp;infile&nbsp;...&nbsp;命令写入数据库表.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">PROCESS权限:能被用来执行show&nbsp;processlist&nbsp;命令;查看当前所有用户执行的查询命令明文文本,包括设定或更改密码的查询.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">SUPER权限:能被用来执行kill命令,终止其他用户进程.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7.load&nbsp;data&nbsp;local带来的安全问题.load&nbsp;data&nbsp;默认读的是服务器上的文件,但是加上local参数后就可以将本地有访问权限的文件加载到数据库中.&nbsp;解决方法是可以用--local-infile=0选项启动mysqld服务器.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8.使用merge存储引擎潜藏的安全漏洞.当用户A赋予表T的权限给用户B,用户B创建一个包含T的merge表,但当用户A收回用户B对表T的权限时,用户B还是能通过merge表操作表T.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9.Drop&nbsp;table命令并不收回以前的相关访问权限.drop表的时候,其他用户对此表的权限并没有被收回,这样导致重新创建同名表的时候,以前的用户对此表的权限会自动赋予,进而产生权限外流.因此对表删除后,我们必须对权限要手动收回.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">10.使用SSL.安全套接字协议,主要用来对数据加密,保证数据发送到正确的客户端,维护数据的完整性.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">11.如果有可能,给所有用户加上访问ip限制.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">12.Revoke命令的漏洞.当用户被多次赋予权限后,由于各种原因需要被收回,revoke命令可能不会按照我们的意愿执行.如</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;select,insert&nbsp;on&nbsp;test.*&nbsp;to&nbsp;xz@localhost;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;grant&nbsp;all&nbsp;on&nbsp;*.*&nbsp;to&nbsp;xz@localhost;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当我们使用mysql&gt;&nbsp;revoke&nbsp;all&nbsp;on&nbsp;*.*&nbsp;from&nbsp;xz@localhost&nbsp;只会回收一次(因为2次的操作数据库不同),而用户任然有第一次赋予的select和insert权限.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">结论:在一个数据库上多次赋予权限,权限会自动合并;但是在多个数据库上多次赋予权限,每个数据库上都会认为是单独的一组权限,必须在此数据库上用revoke命令来单独进行权限回收.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其他安全设置选项</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.safe-user-create参数如果启用,用户将不能用grant语句创建新用户.除非用户具有mysql数据库中user表的insert权限.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.Skip-grant-tables这个参数导致服务器根本不使用权限系统,从而给每个用户具有访问数据库的权利.通过执行mysqladmin&nbsp;flush-privileges或mysqladmin&nbsp;reload或flush&nbsp;privileges命令,都可以让一个正在运行的服务器再次开始使用授权表.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.Skip-network不允许远程连接,只允许本地连接.如在[mysqld]中开启skip-networking,远程IP将不允许连接进来.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.Skip-show-database选项只允许有show&nbsp;database权限的用户执行.如启动</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">shell&gt;&nbsp;mysqld_safe&nbsp;--skip-show-database&nbsp;&amp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;starting&nbsp;mysqld&nbsp;daemon&nbsp;with&nbsp;databases&nbsp;from&nbsp;/var/lib/mysql</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:23:15'),
(265, '27 备份与恢复', '<p>\r\n	<span style="font-size:14px;">备份/恢复策略</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.确定要备份的表的存储引擎是事务型还是非事务型.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.确定使用全备份还是增量备份.全备份的优点是备份保持最新备份,恢复的时候可以花费更少时间,缺点是如果数据量大,将会花费更多时间;增量备份只需要备份每天的增量日志,备份时间少,缺点是恢复的时候需要全备份加上次备份到故障前的所有日志,恢复时间长.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.可以采取复制的方法来做异地备份,但是记住,复制不能代替备份,它对数据库的误操作也无能为力.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.要定期做备份,备份的周期要充分考虑系统可以承受的恢复时间,备份要在系统负载教小的时候进行.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.确保mysql打开了log-bin选项,有了binlog,mysql才可以在必要的时候做完整恢复,或基于时间点的恢复,或基于位置的恢复.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.要经常做备份恢复测试,确保备份是有效的,并且是可以恢复的.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">逻辑备份与恢复</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在mysql里面逻辑备份最大的优点是对于各种存储引擎,都可以用同样的方法来备份.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">完全恢复的例子:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.上午9点,备份数据库</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqldump&nbsp;-uroot&nbsp;-p&nbsp;-l&nbsp;-F&nbsp;test&nbsp;&gt;&nbsp;test.dmp</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其中-l表示给所有表加锁,-F表示生成一个新的日志文件.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.假如9点半备份完后,插入了n条新的数据.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.十点的时候数据库突然故障,数据无法访问,需要恢复备份数据,但是很明显数据少了后来插入的n条,只有前面备份的.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysql&nbsp;-uroot&nbsp;-p&nbsp;test&nbsp;&lt;&nbsp;test.dmp</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.使用mysqlbinlog恢复自mysqldump备份后的binlog,因为binlog文本里面记录了的数据插入信息.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlbinlog&nbsp;localhost-bin.000015&nbsp;|&nbsp;mysql&nbsp;-uroot&nbsp;-p&nbsp;test</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.大功告成,数据恢复完毕.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">基于时间点恢复</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">由于误操作,比如删除了一张表,这时候使用完全恢复是没有用的,因为binlog日志里面还存在删表的语句.这时我们可以采用基于时间点恢复和基于位置恢复.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.如果上午10点发生了误操作,可以用以下语句用备份和binlog将数据恢复到故障前.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlbinlog&nbsp;--stop-datetime=''2012-03-04&nbsp;9:59:59''&nbsp;/var/log/mysql/bin.123456&nbsp;|&nbsp;mysql&nbsp;-uroot&nbsp;-p</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.跳过故障时间点,继续执行后面的binlog,完成恢复.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlbinlog&nbsp;--start-datetime=''2012-03-04&nbsp;10:01:00''</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">/var/log/mysql/bin.123456&nbsp;|&nbsp;mysql&nbsp;-uroot&nbsp;-p&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">基于位置恢复</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">和基于时间点恢复类似,但是更精确,因为同一个时间点可能有很多条SQL语句同时执行.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.在shell下执行如下命令</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlbinlog&nbsp;--start-datetime=''2012-03-04&nbsp;9:55:00''&nbsp;--stop-datetime=''2012-03-04&nbsp;10:05:00''&nbsp;/var/log/mysql/bin.123456&nbsp;&gt;&nbsp;/tmp/mysql_restore.sql</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.在生成的文件mysql_restore.sql中找到出错语句前后的位置号,假如前后的位置号分布是368312和368315.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.恢复以前备份文件后,从命令输入下面两行代码.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlbinlog&nbsp;--stop-position=''368312''&nbsp;/var/log/mysql/bin.123456&nbsp;|&nbsp;mysql&nbsp;-uroot&nbsp;-p</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;msyqlbinlog&nbsp;--start-position=''368315''&nbsp;/var/log/mysql/bin.123456&nbsp;|&nbsp;mysql&nbsp;-uroot&nbsp;-p</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.完成</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">物理备份和恢复</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">物理备份分为冷备份和热备份两种,和逻辑备份相比,它的最大优点是备份和恢复的速度更快,因为物理备份的原理是基于文件的cp.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">冷备份</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">冷备份其实就是停掉数据库服务,cp数据文件的方法,这种方法用的少,因为一般不允许长时间停机.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">热备份</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Myisam存储引擎的热备份有很多方法,本质其实就是将备份的表加读锁,然后再cp数据文件备份到目录.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">法1:使用mysqlhotcopy工具</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlhotcopy&nbsp;db_name&nbsp;[/path/to/new_directory]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqlhotcopy有很多选项,具体可以使用--help查看</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">法2:手工锁表copy</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;flush&nbsp;tables&nbsp;for&nbsp;read;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">然后cp数据文件到备份目录即可.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">InnoDB存储引擎一般使用ibbackup工具备份,是专门对InnoDB存储引擎进行物理热备份。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.编辑用于启动的配置文件my.cnf和用于备份的配置文件backup-my.cnf.例子如下:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Datadir&nbsp;=&nbsp;/home/xiaozhe/data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_data_home_dir&nbsp;=&nbsp;/home/xiaozhe/data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_log_group_home_dir&nbsp;=&nbsp;/home/xiaozhe/data</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.如果想备份到/home/xiaozhe/backup，则backup-my.cnf的例子如下:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Datadir&nbsp;=&nbsp;/home/xiaozhe/backup</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_data_home_dir&nbsp;=&nbsp;/home/xiaozhe/backup</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_log_group_home_dir&nbsp;=&nbsp;/home/xiaozhe/backup</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.开始备份:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ibbackuo&nbsp;/home/xiaozhe/my.cnf&nbsp;/home/xiaozhe/backup-my.cnf</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.备份完成后,备份目录下包含有数据文件和日志文件:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表的导入导出</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">导出的方法:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.语法select&nbsp;....&nbsp;Into&nbsp;outfile&nbsp;...&nbsp;命令来导出数据.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;select&nbsp;*&nbsp;from&nbsp;tablename&nbsp;into&nbsp;outfile&nbsp;''target_file''&nbsp;[option]&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.用mysqldump导出数据为文本</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysqldump&nbsp;-uroot&nbsp;-p&nbsp;-T&nbsp;target_dir&nbsp;db_name&nbsp;tablename&nbsp;[options]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">导入的方法:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.使用load&nbsp;data&nbsp;infile&nbsp;...&nbsp;命令.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;load&nbsp;data&nbsp;[local]&nbsp;infile&nbsp;''filename''&nbsp;into&nbsp;table&nbsp;tablename&nbsp;[options]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.用mysqlimport&nbsp;来实现.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlimport&nbsp;-uroot&nbsp;-p&nbsp;[-local]&nbsp;db_name&nbsp;order_tab.txt&nbsp;[options]</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:23:34');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(266, '26 Mysql日志', '<p>\r\n	<span style="font-size:14px;">错误日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以用--log-error[=file_name]选项来指定mysqld(mysql服务器)保存错误日志文件的位置.如果没有给定file_name,mysqld使用错误日志名host_name.err(host_name为主机名)并默认在参数datadir(数据目录)指定的目录中写入日志文件.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二进制日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二进制日志(binlog)记录了所有的DDL(数据定义语句)和DML(数据操纵语句),但是不包括数据查询语句,语句以事件的形式保存,它描述了数据的更改过程.此日志对于灾难时的数据恢复起着极其重要的作用.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二进制日志的开启</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在[mysqld]下加以下代码开启二进制日志:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Log-bin=/usr/share/mysql/data/log/mysql-bin.log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二进制日志的读取</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Shell&gt;&nbsp;mysqlbinlog&nbsp;log-file</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">二进制日志的删除</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于比较繁忙的OLTP(在线事务处理系统),由于每天生成日志量大,这些日志如果都长时间不清除,将会对空间带来很大的浪费.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">方法1：执行mysql&gt;&nbsp;reset&nbsp;master;&nbsp;命令,该命令将删除所有的binlog日志,新日志编号从000001开始.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">方法2:执行mysql&gt;&nbsp;purge&nbsp;master&nbsp;logs&nbsp;to&nbsp;''mysql-bin.******'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">该命令将删除******编号之前的所有日志.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">方法3:执行mysql&gt;&nbsp;purge&nbsp;master&nbsp;logs&nbsp;before&nbsp;''yyyy-mm-dd&nbsp;hh24:mi:ss''&nbsp;;&nbsp;&nbsp;该命令将删除日期之前产生的所有日志.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">方法4:设置--expire_logs_day=n&nbsp;,&nbsp;此参数的含义是设置日志的过期天数,过了指定的天数后日志会被自动删除,这样有利于减少DBA管理日志的工作量.如在[mysqld]下加入&nbsp;expire_logs_day=3</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其他选项</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--binlog-do-db=db_name&nbsp;只记录db_name的二进制日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--binlog-ignore-db=db_name&nbsp;不记录db_name的二进制日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果只想记录db1和db2数据库,则可以在参数文件中执行两行:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--binlog-do-db=db1</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--binlog-do-db=db2</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--innodb-safe-binlog此选项经常和--sync-binlog=n(每写n次日志同步磁盘)一起使用,使事务在日志中的记录更加安全.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查询日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查询日志以文本格式记录了客户端的所有语句,而二进制日志不包含查询语句.开启方式是--log开启,建议不开启,对性能影响过大.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Log=/usr/share/mysql/data/log/xiaozhe.log</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">慢查询日志</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">慢查询日志记录了包含所有执行时间超过参数long_query_time(单位秒)所设置的SQL的语句日志.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当用--low-slow-queries[=file_name]选项启动mysqld时,慢查询日志开始被记录.如果没有指定目录默认在datadir下,默认文件名是host_name-slow.log&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果慢查询的日志记录内容很多,可以使用mysqldumpslow工具来对慢查询日志进行分类汇总.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">[mysqld]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Log-slow-queries=/usr/share/mysql/data/log/slow-xiaozhe.log</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:23:52'),
(267, 'PHP工程师面临的成长瓶颈', '<p>\r\n	<span style="font-size:14px;">发布日期：2010-10-20 10:07来源：作者：</span>\r\n</p>\r\n<span style="font-size:14px;">作为Web开发中应用最广泛的语言之一，PHP有着大量的粉丝，那么你是一名优秀的程序员吗?在进行自我修炼的同时，你是否想过面对各种各样的问题，我该如何突破自身的瓶颈，以便更好的发展呢?</span>\r\n<p>\r\n	<span style="font-size:14px;">　　PHP工程师面临成长瓶颈</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　先明确这里所指的PHP工程师，是指主要以PHP进行Web系统的开发，没有使用其的语言工作过。工作经验大概在3~4年，普通的Web系统(百万级访问，千成级数据以内或业务逻辑不是特别复杂)开发起基本得心应手，没有什么问题。但他们会这样的物点：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆除了PHP不使用其它的语言,可能会点shell 脚本。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆对PHP的掌握不精(很多PHP手册都没有看完,库除外)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆知识面比较窄(面对需求，除开使用PHP和mysql ，不知道其它的解决办法)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆PHP代码以过程为主，认为面向对象的实现太绕，看不懂。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　这些PHPer在遇到需要高性能，处理高并发，大量数据的项目或业务逻辑比较复杂(系统需要解决多领域业务的问题)时，缺少思路。不能分析问题 的本质，技术判断力比较差，对于问题较快能找出临时的解决办法，但常常在不断临时性的解决办法中，系统和自己一步步走向崩溃。那怎么提高自己呢?怎么可以 挑战难度更高的系统?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　更高的挑战在那里?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　结合我自己的经验，我列出一些具体挑战，让大家先有个感性的认识。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　高性能系统的挑战在那里?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆如何选择Web服务器?要不要使用fast-cgi 模式;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆要不要使用反向代理服务?选择全内存缓存还是硬盘缓存?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆是否需要负载均衡?是基于应用层，还是网络层? 如何保证高可靠性?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆你的PHP代码性能如何，使用优化工具后怎么样? 性能瓶颈在那里? 是否需要写成C的扩展?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆用户访问有什么特点,是读多还是写多?是否需要读写分离?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆数据如何存储?写入速度和读出速度如何? 数据增涨访问速读如何变化?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆如何使用缓存? 怎么样考虑失效?数据的一致性怎么保证?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　高复杂性系统的挑战在那里?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆能否识别业务所对应的领域?是一个还是多个?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆能否合理对业务进行抽象，在业务规则变化能以很小的代价实现?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆数据的一致性、安全性可否保证?</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆是否撑握了面向对象的分析和设计的方法</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　这里所列出的问题，你都能肯定的回答，说明在技术上你基本已经可能成为架构师了。如何你还不能回答，你需要在以下几个方向加强。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　怎么样提高，突破瓶颈</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　如何你还不能回答，你需要在以下几个方向加强：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆分析你所使用的技术其原理和背后运行的机制，这样可以提高你的技术判断力，提高你技术方案选择的正确性;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆学习大学期间重要的知识, 操作系统原理，数据结构和算法。知道你以前学习都是为了考试，但现在你需要为自己学习，让自己知其所以然;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆重新开始学习C语言，虽然你在大学已经学过。这不仅是因为你可能需要写PHP扩展，而且还因为，在做C的应用中，有一个时刻关心性能、内存控制、变量生命周期、数据结构和算法的环境;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">　　◆学习面向对象的分析与设计，它是解决复杂问题的有效的方法。学习抽象，它是解决复杂问题的唯一之道。</span>\r\n</p>', 11, '', 1, 0, 1, '2013-03-10 13:26:08'),
(268, '小内存VPS之Nginx+PHP-fpm高负载优化及压力测试方法', '<span style="font-size:14px;">fpm组合，以内存占用小，负载能力强壮的特点，成为小内存VPS建站的首选组合。我们一起来探讨一下nginx+php-fpm高负载的优化方法。</span>\r\n<p>\r\n	<span style="font-size:14px;">先来看看nginx配置参数的优化。nginx是前端接受浏览器端请求的web server, 配置可调的参数如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面是示例nginx配置</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">user www-data;</span><br />\r\n<span style="font-size:14px;"> worker_processes&nbsp;&nbsp;8;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#worker_processes 调至8， 大于8没什么用，小于8，nginx性能发挥不出来</span><br />\r\n<span style="font-size:14px;"> worker_cpu_affinity 01 10 01 10 01 10 01 10;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#worker_cpu_affinity 参数可以使nginx充分发挥多核Cpu的性能优势 ，上面的配置是针对双核CPU的配置。01表示第一个核，10表示第二个核，如果是四核cpu，一至四个核分别表示为 0001 0010 0100 1000</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">error_log&nbsp;&nbsp;/var/log/nginx/error_log crit;</span><br />\r\n<span style="font-size:14px;"> pid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/var/run/nginx.pid;</span><br />\r\n<span style="font-size:14px;"> worker_rlimit_nofile 10240;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#worker_rlimit_nofile 是nginx能打开文件的最大句柄数，我们需要把这个数字设大一点。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#linux系统的文件查看数限制查看是用 ulimit -n ，修改这个限制是用 ulimit -HSn 65535</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">events</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> use epoll;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#必须要用高效的event驱动，以获得最大性能</span><br />\r\n<span style="font-size:14px;"> worker_connections&nbsp;&nbsp;10240;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#max_clients = worker_processes * worker_connections/4 （最大连接数的计算公式）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">}</span><br />\r\n<span style="font-size:14px;"> http</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> include /etc/nginx/deny.iplist;</span><br />\r\n<span style="font-size:14px;"> include&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/etc/nginx/mime.types;</span><br />\r\n<span style="font-size:14px;"> default_type&nbsp;&nbsp;application/octet-stream;</span><br />\r\n<span style="font-size:14px;"> server_name_in_redirect off;</span><br />\r\n<span style="font-size:14px;"> server_names_hash_bucket_size 128;</span><br />\r\n<span style="font-size:14px;"> server_tokens off;</span><br />\r\n<span style="font-size:14px;"> client_header_buffer_size 32k;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#client头buffer可以调为32K</span><br />\r\n<span style="font-size:14px;"> large_client_header_buffers 4 32k;</span><br />\r\n<span style="font-size:14px;"> client_max_body_size 8m;</span><br />\r\n<span style="font-size:14px;"> sendfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> tcp_nopush&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> keepalive_timeout 65;</span><br />\r\n<span style="font-size:14px;"> tcp_nodelay&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;off;</span><br />\r\n<span style="font-size:14px;"> client_body_timeout 10;</span><br />\r\n<span style="font-size:14px;"> client_header_timeout 10;</span><br />\r\n<span style="font-size:14px;"> send_timeout 60;</span><br />\r\n<span style="font-size:14px;"> output_buffers 1 32k;</span><br />\r\n<span style="font-size:14px;"> postpone_output 1460;</span><br />\r\n<span style="font-size:14px;"> open_file_cache max=1000 inactive=20s;</span><br />\r\n<span style="font-size:14px;"> open_file_cache_valid&nbsp;&nbsp;&nbsp;&nbsp;30s;</span><br />\r\n<span style="font-size:14px;"> open_file_cache_min_uses 2;</span><br />\r\n<span style="font-size:14px;"> open_file_cache_errors&nbsp;&nbsp;&nbsp;on;</span><br />\r\n<span style="font-size:14px;"> fastcgi_connect_timeout 300;</span><br />\r\n<span style="font-size:14px;"> fastcgi_send_timeout 300;</span><br />\r\n<span style="font-size:14px;"> fastcgi_read_timeout 300;</span><br />\r\n<span style="font-size:14px;"> fastcgi_buffer_size 32k;</span><br />\r\n<span style="font-size:14px;"> fastcgi_buffers 4 32k;</span><br />\r\n<span style="font-size:14px;"> fastcgi_busy_buffers_size 32k;</span><br />\r\n<span style="font-size:14px;"> fastcgi_temp_file_write_size 32k;</span><br />\r\n<span style="font-size:14px;"> gzip on;</span><br />\r\n<span style="font-size:14px;"> gzip_buffers&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4 16k;</span><br />\r\n<span style="font-size:14px;"> gzip_http_version 1.0;</span><br />\r\n<span style="font-size:14px;"> gzip_comp_level 2;</span><br />\r\n<span style="font-size:14px;"> gzip_types&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text/plain application/x-javascript text/css application/xml;</span><br />\r\n<span style="font-size:14px;"> gzip_proxied&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expired no-cache no-store private auth;</span><br />\r\n<span style="font-size:14px;"> proxy_cache_path&nbsp;&nbsp;/var/lib/nginx/cache&nbsp;&nbsp;levels=1:2&nbsp;&nbsp;&nbsp;keys_zone=staticfilecache:80m inactive=1d&nbsp;max_size=2500m;</span><br />\r\n<span style="font-size:14px;"> proxy_temp_path /var/lib/nginx/proxy;</span><br />\r\n<span style="font-size:14px;"> proxy_connect_timeout 300;</span><br />\r\n<span style="font-size:14px;"> proxy_read_timeout 120;</span><br />\r\n<span style="font-size:14px;"> proxy_send_timeout 120;</span><br />\r\n<span style="font-size:14px;"> proxy_buffer_size&nbsp;&nbsp;16k;</span><br />\r\n<span style="font-size:14px;"> proxy_buffers&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4 16k;</span><br />\r\n<span style="font-size:14px;"> upstream wordpressnginx</span><br />\r\n<span style="font-size:14px;"> {</span><br />\r\n<span style="font-size:14px;"> server 127.0.0.1:6000 weight=1 fail_timeout=120s;</span><br />\r\n<span style="font-size:14px;"> }</span><br />\r\n<span style="font-size:14px;"> include /etc/nginx/sites-enabled/*;</span><br />\r\n<span style="font-size:14px;"> }</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上面的配置里面，有多处设及到buffer和timeout的地方。我们可以根据需要，慢慢调大这些参数，buffer自然是大点好，但不要太大。 16K是标准配置，可以增加到32，往上加更大也不是不行，但 要考虑到你系统内存大不大，够不够用。timeout是超时，如果服务器很繁忙，不妨增加超时等待时间，以避免频繁出现502错误。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">gzip是必须开启的，reverse proxy在允许的情况下，也尽量开启，一 是可以提升响应效率，二是降低服务器压力，gzip开启后更可以节省服务器带宽。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">nginx主要的配置如上所述。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在看一下php-fpm的配置。</span><br />\r\n<span style="font-size:14px;"> [global]</span><br />\r\n<span style="font-size:14px;"> pid = run/php5-fpm.pid</span><br />\r\n<span style="font-size:14px;"> process_control_timeout = 5</span><br />\r\n<span style="font-size:14px;"> [www]</span><br />\r\n<span style="font-size:14px;"> listen = /dev/shm/php-cgi.sock</span><br />\r\n<span style="font-size:14px;"> listen.allowed_clients = 127.0.0.1</span><br />\r\n<span style="font-size:14px;"> user = www-data</span><br />\r\n<span style="font-size:14px;"> group = www-data</span><br />\r\n<span style="font-size:14px;"> pm = static</span><br />\r\n<span style="font-size:14px;"> pm.max_children = 7</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#这个决定了 php-fpm的总进程。我们要想同时响应更多的并发数，这个数值要尽可能大，比如500，1000</span><br />\r\n<span style="font-size:14px;"> pm.max_requests = 10000</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#并发数越大，这个最大请求数应该越大，并发数小，这个数值也应该越小。它表示，php-fpm进程响应了10000个并发请求之后，就自动重启一下进程。</span><br />\r\n<span style="font-size:14px;"> request_terminate_timeout = 30</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">#表示等待30秒后，结束那些没有自动结束的php脚本，以释放占用的资源。</span><br />\r\n<span style="font-size:14px;"> env[HOSTNAME] = $HOSTNAME</span><br />\r\n<span style="font-size:14px;"> env[PATH] = /usr/local/bin:/usr/bin:/bin</span><br />\r\n<span style="font-size:14px;"> env[TMP] = /tmp</span><br />\r\n<span style="font-size:14px;"> env[TMPDIR] = /tmp</span><br />\r\n<span style="font-size:14px;"> env[TEMP] = /tmp</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">小内存的vps虽然经过使用php-fpm+nginx，提升了系统的效率，可以同时响应较多的并发请求，但是当并发数上来了，比如从100上升到 10000，小内存肯定响应不过来，cpu也会 因为太忙，而导致系统负载变得很高很高，这个时候，我们就要考虑升级硬件配置了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">内存越大越好，CPU核心频率越高越好，CPU核越多越好。硬盘最好是SSD+RAID10。这样性能不仅高，数据安全也有保障。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上面所提到的各个配置参数，设及到数值的，不妨自己 多试着调小，调大参数，然后重启下nginx或者php-fpm进程，看看效果怎么样。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面介绍一个比较好的压力测试工具，siege.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">debian和ubuntu用户可以通过apt-get install siege来安装siege.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">siege是一个跟ab.exe相似的http压力测试软件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以用siege来测试我们的网站和服务器性能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">siege -r 100 -c 10 http://www.domain.com/test.php</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-r 是 repeat , -r 100是重复100次测试</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-c 10是表示模拟10个用户同时并发连接</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">最后面是要测试的URL地址。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">测试过程中可以随时按CTRL+C中止进程，siege会生成一个报告给我们。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">我们可以同时根据siege的测试结果和监视服务器的负载情况，对系统压力状况进行一个深入了解和分析。接下来可以帮助我们判断该如何进行下一步操作，是继续优化配置，还是升级硬件。</span>\r\n</p>', 16, 'nginx,linux', 1, 0, 1, '2013-03-10 13:27:23'),
(269, '19 优化数据库对象', '<p>\r\n	<span style="font-size:14px;">优化表的数据类型</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在设计字段的时候，都允许留有一点字段冗余，但是不推荐让很多字段都留有大量冗余，这样既浪费磁盘空间，也浪费应用程序操作时的物理内存。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在Mysql中可以使用&nbsp;procedure&nbsp;analyse()方法对表进行分析：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ex:select&nbsp;*&nbsp;from&nbsp;table&nbsp;procedure&nbsp;analyse();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ex:select&nbsp;*&nbsp;from&nbsp;table&nbsp;procedure&nbsp;analyse(16,256);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">第一个的意思是对输出的每一列信息提出优化建议，而第二个的意思是不要为那些包含的值多于16个或者256字节的ENUM类型提出建议。如果没有这样的限制，输出的信息可能很长。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">最后根据optimal_fieldtype的建议可以修改，数据越多越准确，数据少会建议使用ENUM，这个不准确。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">通过拆分提高表的访问效率</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">垂直拆分：把主键和一些列放到一个表，然后把主键和另一些列放到另一个表中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">效果：如果一些列不常用，可以考虑垂直拆分，由于拆分可以使数据行变小，一个数据页能存放更多数据，在查询时的I/O就会减少。缺点是需要管理冗余列，查询所有数据需要联合(Join)操作。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">水平拆分：既根据一列或多列的值把数据行放到两个独立的表中。一般在以下情况使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A.表很大，分割后可以降低查询时需要读的数据和索引页，同时降低了索引的层数，提高查询速度。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B.表中的数据本来就有独立性，如表中分别记录各个地区的数据或不同时期的数据，特别是有些数据常用，而另外一些不常用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C.需要把数据存放到多个介质上。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ex:电话账单最近3个月的数据存一个表，3个月前数据存一个表...</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">效果：水平拆分会增加复杂度，通常查询需要多个表名用Union操作，在许多数据库应用中，这种复杂性会超过它带来的优点。因为只要索引关键字不大，索引查询时，表中增加2至3倍的数据量，查询时也就增加一个索引层的磁盘次数，所以水平拆分要考虑数据量的增长速度。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">逆规范化</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">逆规范化的好处是降低连接操作的需求，降低外码和索引的数目，还可能减少表的数目，相应带来的问题是可能出现数据的完整性问题。加快查询速度，但会降低修改速度，因此使用逆规范化一点要权衡利弊。一般有以下几种使用逆规范化。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.增加冗余列&nbsp;指在多个表中具有相同的列，它常用来在查询时避免连接操作。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.增加派生列&nbsp;指增加的列来自其他表中的数据，由其他表中的数据计算而来。增加派生列的作用是在查询时减少连接操作，避免使用集函数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.重新组表&nbsp;指如果许多用户需要查看两个表连接出来的结果数据，则把这两个表重新组合成一个表来减少连接而提高性能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.分表&nbsp;指水平分表和垂直分表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在逆规范技术的使用过程中，需要维护数据的完整性。最常用的技术是批处理维护，应用逻辑和触发器。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.批处理维护&nbsp;指对复制列或派生列的修改积累一定的时间后，运行一批处理或存储过程对复制或派生列进行修改，这只能在对实时性要求不高的情况下使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.数据的完整性也可以由逻辑实现&nbsp;这就要求必须在同一事务中对所有涉及的表进行增，删，改操作。应用逻辑来实现数据的完整性风险较大，因为同一逻辑必须在所有的应用中使用和维护，容易遗落，特别是在需求变化时，不易维护。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.触发器&nbsp;对数据的任何修改立即触发对复制列或派生列的相应修改。触发器是实时的，而且相应的处理逻辑只在一个地方出现，易于维护。一般来说，是解决这类问题的好方法。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用中间表提高统计查询速度</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假如有一个表session是用户消费表存有大量数据，现在需要得到过去7天的消费总额，可以建立一个中间表tem_session与session表的结构一样,然后&nbsp;insert&nbsp;into&nbsp;tem_session&nbsp;select&nbsp;*&nbsp;from&nbsp;session&nbsp;where&nbsp;date&nbsp;&gt;&nbsp;date_add(now(),INTERVAL&nbsp;-7&nbsp;day)&nbsp;;将数据插入中间表，通过中间表运算得到统计量，还可以给中间表的date字段加上索引增加查询速度。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">中间表在统计查询中经常会用到，其优点如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.中间表复制源表部分数据，并且与源表相隔离，在中间表上做统计查询不会对在线应用产生负面影响。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.中间表上可以灵活的添加索引或增加临时字段，从而达到提高统计查询效率和辅助统计查询作用。</span>\r\n</p>\r\n<br />', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:28:11'),
(270, '18 SQL优化--其他SQL的优化', '<p>\r\n	<span style="font-size:14px;">定期分析表,检查表,优化表:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;Analyze&nbsp;[local&nbsp;|&nbsp;no_write_to_binlog]&nbsp;table&nbsp;table_name&nbsp;[,table_name1]&nbsp;;本语句用于分析和存储表的关键字分布，执行一次分析表，在分析期间使用一个读取锁定。这对于MyISAM,BDB和InnoDB表有作用，对于MyiSAM本语句相当于myisamchk&nbsp;-a&nbsp;.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分析表：mysql&gt;&nbsp;analyze&nbsp;table&nbsp;xz_article;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">检查表的语法&nbsp;&nbsp;check&nbsp;&nbsp;table&nbsp;table_name&nbsp;[,table_name1]&nbsp;[option]&nbsp;.....&nbsp;&nbsp;Option={quick&nbsp;|&nbsp;fast&nbsp;|&nbsp;medium&nbsp;|&nbsp;extended&nbsp;|&nbsp;changed&nbsp;}</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">检查表主要是检查一个或多个表是否有错误。Check&nbsp;table&nbsp;对Myisam和InnoDB表有作用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">检查表：&nbsp;mysql&gt;&nbsp;check&nbsp;table&nbsp;xz_article;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">优化表语法&nbsp;optimize&nbsp;[local&nbsp;|&nbsp;no_write_to_binlog]&nbsp;table&nbsp;table_name&nbsp;[,table_name1]&nbsp;..&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果已经删除了表的一大部分，或者对可变列(varchar,blob或text)进行了大修改，则需要使用optimize优化，这个命令可以将表中的空间碎片进行合并，并且可以消除由删除或更新造成的空间浪费。但optimize命令只对myisam,bdb,innodb表有用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：analyze,check,optimize在执行期间会自动将表锁定，因此一定要在数据库不繁忙的时候执行操作。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">常用的SQL的优化</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">前面记录的都是与查询有关的优化，现在主要记录其他一些insert,group&nbsp;by等sql语句的优化。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.大批量插入数据</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用load命令导入数据&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;LOAD&nbsp;DATA&nbsp;INFILE&nbsp;''data.txt''&nbsp;INTO&nbsp;TABLE&nbsp;db.my_table;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Disable&nbsp;keys&nbsp;和&nbsp;Enable&nbsp;keys用来打开和关闭Myisam表非唯一索引的更新，在导入大量数据到一个非空的Myisam表时，通过这2个命令可以提高导入效率。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">正确的导入方法是(只对Myisam有效):&nbsp;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.先关闭keys:&nbsp;alter&nbsp;table&nbsp;&nbsp;my_table&nbsp;disable&nbsp;keys&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.导入数据:&nbsp;LOAD&nbsp;DATA&nbsp;INFILE&nbsp;''data.txt''&nbsp;INTO&nbsp;TABLE&nbsp;db.my_table;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.开启&nbsp;keys:&nbsp;alter&nbsp;table&nbsp;my_table&nbsp;enable&nbsp;keys&nbsp;;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于InnodB导入大量数据时，因为innodb类型是按主键顺序保存的，所以有以下几种方法提高效率：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.当导入的文件数据按主键顺序存储的时候比不按主键顺序存储的效率高。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.在导入前执行set&nbsp;unique_checks&nbsp;=&nbsp;0&nbsp;关闭唯一性校验，导入结束后执行&nbsp;set&nbsp;unique_checks&nbsp;=&nbsp;1&nbsp;恢复唯一校验。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.在导入前可以执行&nbsp;set&nbsp;autocommit&nbsp;=&nbsp;0&nbsp;关闭自动提交，导入结束后开启set&nbsp;autocommit&nbsp;=&nbsp;1&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">优化insert语句</span>\r\n</p>\r\n<p>\r\n	<img height="317" width="554" alt="18&nbsp;&lt;wbr&gt;SQL优化--其他SQL的优化" title="18&nbsp;&lt;wbr&gt;SQL优化--其他SQL的优化" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">优化Group&nbsp;By语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">因为使用group&nbsp;by&nbsp;分组后会自动进行排序，所以在使用order&nbsp;by&nbsp;也就没什么意义了，如果不需要排序造成的消耗，可以使用order&nbsp;by&nbsp;null&nbsp;解决。如：&nbsp;explain&nbsp;select&nbsp;*&nbsp;from&nbsp;table&nbsp;group&nbsp;by&nbsp;col1&nbsp;order&nbsp;by&nbsp;null\\G;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">结论是如果不加order&nbsp;by&nbsp;null,extra则是Using&nbsp;filesoft，加了则是Using&nbsp;temporary。(filesoft文件排序是最耗费时间的)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">优化Order&nbsp;By&nbsp;语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有以下几种情况不能使用索引：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.select&nbsp;*&nbsp;from&nbsp;table&nbsp;order&nbsp;by&nbsp;col1&nbsp;desc,col2&nbsp;asc&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Order&nbsp;by&nbsp;字段混合了desc和asc</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;2.select&nbsp;*&nbsp;from&nbsp;table&nbsp;where&nbsp;col1&nbsp;=&nbsp;constant&nbsp;order&nbsp;by&nbsp;col2;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用于查询的关键字和order&nbsp;by中使用的不同</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.select&nbsp;*&nbsp;from&nbsp;table&nbsp;order&nbsp;by&nbsp;col1,col2&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对不同的关键字使用order&nbsp;by</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">优化嵌套查询</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般使用join来代替子查询</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql优化Or条件</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于含有OR的查询子句，如果要利用索引，则OR之间的每个条件必须都要使用到索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用SQL提示</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Use&nbsp;Index:在查询语句表面后面添加Use&nbsp;index来提供希望Mysql去参考的索引列表，就可以让mysql不再考虑其他可用的索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如：explain&nbsp;select&nbsp;*&nbsp;from&nbsp;table&nbsp;use&nbsp;index&nbsp;(ind_email)&nbsp;where&nbsp;email&nbsp;=&nbsp;''zhexiao@163.com''&nbsp;\\G&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ignore&nbsp;Index:在查询的时候可以让Mysql忽略索引，用法同Use&nbsp;index。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如：explain&nbsp;select&nbsp;*&nbsp;from&nbsp;table&nbsp;ignore&nbsp;index(ind_email)&nbsp;where&nbsp;email&nbsp;=&nbsp;</span><a href="mailto:''zhexiao@163.com''"><span style="font-size:14px;">''zhexiao@163.com''</span></a><span style="font-size:14px;">&nbsp;\\G;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Force&nbsp;Index:在查询时，可以强制Mysql使用某个索引进行扫描。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如:explain&nbsp;select&nbsp;*&nbsp;from&nbsp;table&nbsp;where&nbsp;id&nbsp;&gt;&nbsp;0&nbsp;\\G&nbsp;;因为条件是&nbsp;id&nbsp;&gt;&nbsp;0&nbsp;，所以不会执行索引，但是我们可以用force&nbsp;index强制加上索引，用法如上。</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:28:29'),
(271, '18 SQL优化--查询优化', '<p>\r\n	<span style="font-size:14px;">优化SQL语句的一般步骤</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.通过show&nbsp;status&nbsp;命令了解各种sql的执行频率</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在Mysql客户端连接成功后，可以使用show&nbsp;[session&nbsp;|&nbsp;global]&nbsp;status;命令获得服务器状态信息,默认是session。或者在CMD中使用Mysqladmin&nbsp;extended-status;命令获得信息。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：show&nbsp;status&nbsp;like&nbsp;''Com_%'';&nbsp;Com_xxx表示每个xxx语句执行的次数，通常我们关心以下几个参数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Com_select:执行select的次数，执行一次累加一次。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Com_insert:执行insert的次数，对于批量插入只记为一次。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Con_update:执行update的次数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Com_delete:执行delete的次数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">上面的这些参数对于所有的表都会进行累加，下面的只针对于InnoDB引擎，累加的算法也略有不同。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_rows_read:select查询返回的行数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_rows_inserted:执行Insert插入的行数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_rows_updated:执行update更新的行数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Innodb_rows_deleted:执行delete删除的行数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">通过以上几个参数，可以很容易的了解当前数据库的应用是以插入为主还是查询为主。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于事务型的应用，通过Com_commit和Com_rollback可以了解情况，如果回滚操作非常频繁，则意味着需要重新编写。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">此外以下几个参数便于用户了解数据库的基本情况：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Connections:试图连接Mysql服务器的次数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Uptime:服务器工作时间。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Slow_queries：慢查询的次数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.定位执行效率较低的SQL语句</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">法1:通过查看慢查询日志定位。用--log-slow-queries[=file_name]选项启动时，mysqld写一个包含所有执行时间超过long_query_time秒的sql语句的日志文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">法2：慢查询日志在查询结束后才可以记录，可以使用show&nbsp;processlist&nbsp;;查看当前Mysql在进行的线程，包括线程状态，是否锁表等，可以实时查看SQL的执行情况。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.通过explain分析低效的SQL的执行计划</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Explain的详细用法和explain的列解释在pdf文件mysql_explain中有详细说明，请常看。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.确定问题并采取相应的措施</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般为添加索引给查询type为all或者extra为fliesort的表。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">索引问题</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看某个表中的索引:show&nbsp;index&nbsp;form&nbsp;table&nbsp;\\G;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.使用索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a.Mysql中使用索引，对于多列索引，只有使用最左边的列才能使用索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">b.对于like查询，后面如果是常量并且%不在第一个字符才能使用索引。另外如果like后面跟的是一个列的名字，也不会使用索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">c.如果对大文本进行搜索，必须使用全文索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">d.如果列明是索引，则使用查询...where&nbsp;name&nbsp;is&nbsp;null也是使用了索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.存在索引不使用索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A.如果mysql估计使用索引比全表索引慢，则不会。如列key均分布在1~100之间，则下列查询使用索引就不好.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Select&nbsp;*&nbsp;from&nbsp;table&nbsp;where&nbsp;key&nbsp;&gt;&nbsp;10&nbsp;and&nbsp;key&nbsp;&lt;80&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B.如果使用Memory/heap表并且where&nbsp;条件中不使用&nbsp;=&nbsp;进行判断，则不会使用索引，heap表只有在&nbsp;=&nbsp;条件下才能使用索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C.用or分割开的条件，如果or前的条件中的列有索引而后面的列没有索引，则涉及的索引都不会使用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">D.组合索引使用的不是最左边的列</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">F.如果like是以%开始的</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">E.如果列类型是string类型，那么一定要把where语句中的字符常量用引号引起来。如：explain&nbsp;select&nbsp;*&nbsp;from&nbsp;table&nbsp;where&nbsp;name&nbsp;=&nbsp;''247''&nbsp;\\G&nbsp;;&nbsp;如果不加引号，因为name的索引为string而常量为int，所以不会使用索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看索引的使用情况</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果索引正在工作，Handler_read_key的值将很高。如果这个值不高，代表增加索引的性能改善不高。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Handle_read_rnd_next的值高意味着查询效率低，并且应该建立索引补救。这个值的含义是在数据文件中读下一行的请求数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如:show&nbsp;status&nbsp;like&nbsp;''Handle_read%''&nbsp;;&nbsp;</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:28:47');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(272, '16 SQL Mode及相关问题', '<p>\r\n	<span style="font-size:14px;">查看默认的sql_mode的命令：select&nbsp;@@sql_mode&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">一般默认的SQL_MODE为(ANSI)：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">REAL_AS_FLOAT,PIPES_AS_CONCAT,ANSI_QUOTES,IGNORE_SPACE,ANSI。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">(我的sql&nbsp;mode默认：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&nbsp;)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这种情况允许你插入的数据超过定义的长度(会产生一个warning，可以用show&nbsp;warnings查看)，但是会自动截断。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">现在设置SQl&nbsp;Mode为严格模式(STRICT_TRANS_TABLES)：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql&gt;&nbsp;set&nbsp;session&nbsp;sql_mode=''STRICT_TRANS_TABLES''&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">插入数据就不会提示warning而是error.</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设置语法:&nbsp;set&nbsp;[session&nbsp;|&nbsp;global]&nbsp;sql_mode&nbsp;=&nbsp;''mode''&nbsp;;&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;其中:session代表只在本次有效。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;global选项代表本次无效，而对于新的连接生效。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ANSI:非法日期可以插入，但会提示Warning。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Traditional:严格模式，不能插入非法日期等非法值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">NO_BACKSLASH_ESCAPES:使反斜杠成为普通字符。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">PIPES_AS_CONCAT:将“||”视为字符串连接操作符</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如:select&nbsp;''xiaozhe''||''abc'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">常用的Sql&nbsp;Mode：</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01014nh6&amp;url=http://s15.sinaimg.cn/orignal/788e5b7atf6a0d59e9aae" target="_blank"><img src="http://s15.sinaimg.cn/middle/788e5b7atf6a0d59e9aae&amp;690" alt="16&nbsp;&lt;wbr&gt;SQL&nbsp;&lt;wbr&gt;Mode及相关问题" title="16&nbsp;&lt;wbr&gt;SQL&nbsp;&lt;wbr&gt;Mode及相关问题" /></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">数据库在迁移过程中的各个Sql&nbsp;Mode:</span>\r\n</p>\r\n<p>\r\n	<img src="http://s4.sinaimg.cn/middle/788e5b7atbdce230a5703&amp;690" alt="16&nbsp;&lt;wbr&gt;SQL&nbsp;&lt;wbr&gt;Mode及相关问题" title="16&nbsp;&lt;wbr&gt;SQL&nbsp;&lt;wbr&gt;Mode及相关问题" /> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:29:03'),
(273, '14 事务控制(XA分布式事务)和锁定语句 ', '<p>\r\n	<span style="font-size:14px;">表锁机制</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql支持对MyISAM和Memory的存储引擎的表进行表级锁定，对BDB存储引擎的表进行页级锁定，对InnoDB的表进行行级锁定。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建语法：Lock&nbsp;tables&nbsp;table_name&nbsp;[as&nbsp;alias]&nbsp;{Read&nbsp;[Local]&nbsp;|&nbsp;[Low_Priortiy]&nbsp;Write}&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">事务控制</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql默认是自动提交的(Autocommit)&nbsp;语法如下：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Start&nbsp;Transaction&nbsp;|&nbsp;Begin&nbsp;[work]&nbsp;&nbsp;代表开启一项新的事务。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Commit&nbsp;[work]&nbsp;[And&nbsp;[NO]&nbsp;Chain]&nbsp;[[NO]&nbsp;Release]&nbsp;提交事务，Chain定义提交后的操作，会立即启动一个新事务。Release则会断开与客户端的连接。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Rollback&nbsp;[work]&nbsp;[And&nbsp;[No]&nbsp;Chain]&nbsp;[[NO]&nbsp;Release]&nbsp;回滚事务。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Set&nbsp;Autocommit&nbsp;=&nbsp;{0&nbsp;|&nbsp;1}&nbsp;设置是否自动提交。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在事务中可以通过定义SavePoint&nbsp;name，指定回滚事务的一个部分，但是不能指定提交事务的一个部分。对于复杂的应用可以定义多个不同的SavePoint。对于不再使用的SavePoint，可以通过Release&nbsp;SavePoint&nbsp;name命令删除。对于删除的SavePoint，不能使用Rollback&nbsp;to&nbsp;SavePoint&nbsp;name命令。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分布式事务的使用</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在Mysql中，使用分布式事务的应用程序涉及一个或多个资源管理器(RM)和一个事务管理器(TM)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">资源管理器(RM)：用于提供通向事务资源的途径。数据库服务器是一种资源管理器，该管理器必须可以提交或回滚RM管理的事务。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">事务管理器(TM)：用于协调作为一个分布式事务一部分的事务。TM与管理每个事务的RMs进行通信。一个分布式事务中各个单个事务都是该分布式事务的分支事务。分布式事务和各分支通过一种命令方法进行标示。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用于执行分布式事务的过程使用有2个阶段，发生时间在由分布式事务的各个分支需要进行的行动已经被执行后。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">A.第一阶段，所有的分支被预备好。即他们被TM告知要准备提交。通常这意味着用于管理分支的每个RM会记录对于被稳定保存的分支的行动。分支指示他们可以这么做。这些结果被用于第二阶段。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">B.第二阶段，TM告知RMs是否要提交或回滚。如果在预备分支时所有分支能够提交则所有分支被告知提交。如果有任何一分支不能提交，则所有分支被告知回滚。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">C.特殊情况，当一个分布式事务只有一个RM(即单一分支)，则只会有第一阶段，预备和提交或回滚同时执行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">分布式事务(XA事务)的语法（例子在226页）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">XA&nbsp;{Start&nbsp;|&nbsp;Begin}&nbsp;xid&nbsp;[Join&nbsp;|&nbsp;Resume]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Xa&nbsp;Start&nbsp;xid&nbsp;用于启动一个带给定xid值的XA事务，每个事务必须给定一个唯一的xid值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Xid：gtrid&nbsp;[,&nbsp;bqual&nbsp;[,&nbsp;formatId]]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.gtrid是标识符，让明确知道xa属于哪个分布式事务。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.bqual是一个分支限定符，默认是空串。对一个分布式事务中的每个分支事务，bqual值必须唯一。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.formatID是一个数字，用于标识由gtrid和bqual值使用的格式，默认值是1。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面XA语法操作的xid值必须和start的xid值相同。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">XA&nbsp;END&nbsp;xid&nbsp;[Suspend&nbsp;[For&nbsp;Migrate]]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">XA&nbsp;Prepare&nbsp;xid&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;使事务进入预备状态(先end在prepare)，也就是第一阶段</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">XA&nbsp;Commit&nbsp;xid&nbsp;[One&nbsp;Phase]&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">XA&nbsp;Rollback&nbsp;xid</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">提交或回滚，也就是第二阶段</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">XA&nbsp;Recover&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">返回当前数据库处于预备状态的分支事务信息</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:29:20'),
(274, '11 mysql视图 ', '<p>\r\n	<span style="font-size:14px;">视图相对于普通表的优势：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.简单：使用视图的用户不必关心表的结构，关联条件或筛选条件，对用户来说已经是过滤好的复合条件结果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.安全：使用视图的用户只能看到被写入视图的列，而不能看到表中所有的列。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.数据独立：一旦视图结构确定了，可以屏蔽表结构变化对用户的影响，如果源表修改列名，则可以通过修改视图来解决。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">视图的操作：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MySQL中创建视图可以通过create&nbsp;view语句来实现，具体创建格式如下：&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">create&nbsp;[&nbsp;or&nbsp;deplace&nbsp;]&nbsp;[algorithm={merge&nbsp;|&nbsp;temptable&nbsp;|&nbsp;undefined}]&nbsp;view&nbsp;view_name&nbsp;[(&nbsp;column_list)]&nbsp;as&nbsp;select_statement&nbsp;[with&nbsp;[cascaded&nbsp;|&nbsp;local]&nbsp;check&nbsp;option]&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MySQL中修改视图的语法：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Alter&nbsp;[algorithm={merge&nbsp;|&nbsp;temptable&nbsp;|&nbsp;undefined}]&nbsp;view&nbsp;view_name&nbsp;[(&nbsp;column_list)]&nbsp;as&nbsp;select_statement&nbsp;[with&nbsp;[cascaded&nbsp;|&nbsp;local]&nbsp;check&nbsp;option]&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">algorithm={merge&nbsp;|&nbsp;temptable&nbsp;|&nbsp;undefined}属性用于优化MySQL视图的执行，该属性有3个可用的设置。下面将介绍这3个设置的使用方法&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">merge：该参数使MySQL执行视图时传入的任何子句合并到视图的查询定义中。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">temptable：如果视图低层表中的数据有变化，这些变化将在下次通过表时立即反映出来。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">undefined：当查询结果和视图结果为一一对应关系时，MySQL将algorithm设定为temptable。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql视图的定义有一些限制，例如from&nbsp;关键字后面不能包含子查询，如果视图是从其他数据库迁移过来的，那么可以先将子查询的内容定义成一个视图，然后在对该视图创建视图就可以实现类似的功能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">视图的可更新性与视图中查询的定义有关系，以下类型的视图是不可更新的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.包含以下关键字的SQL语句：&nbsp;聚合函数(SUM，MIN，MAX，COUNT等)，Distinct&nbsp;,&nbsp;Group&nbsp;By&nbsp;,&nbsp;Having&nbsp;,&nbsp;Union或Union&nbsp;ALL&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.常量视图</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.Join</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.From一个不能更新的视图</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.Where子句的子查询引用了from子句中的表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如以下视图是不可更新的</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-----包含聚合函数</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Create&nbsp;or&nbsp;replace&nbsp;view&nbsp;view_name&nbsp;as&nbsp;select&nbsp;id&nbsp;,sum(acount)&nbsp;from&nbsp;tablename&nbsp;group&nbsp;by&nbsp;id&nbsp;;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-----常量视图</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;Create&nbsp;or&nbsp;replace&nbsp;view&nbsp;view_pi&nbsp;as&nbsp;select&nbsp;3.1415926&nbsp;as&nbsp;pi;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">------select&nbsp;中包含子查询</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;Create&nbsp;or&nbsp;replace&nbsp;view&nbsp;city_view&nbsp;as&nbsp;select&nbsp;(select&nbsp;city&nbsp;from&nbsp;city&nbsp;where&nbsp;city_id&nbsp;=&nbsp;1);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">With&nbsp;[cascaded&nbsp;|&nbsp;local&nbsp;]&nbsp;check&nbsp;option&nbsp;决定了是否允许更新数据使记录不再满足视图的条件，默认是Cascaded。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.local&nbsp;只要满足本视图的条件就可以更新</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.Cascaded&nbsp;必须满足所有针对该视图的所有视图条件才可以更新。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt;&nbsp;create&nbsp;or&nbsp;replace&nbsp;view&nbsp;test_view1&nbsp;as&nbsp;select&nbsp;*&nbsp;from&nbsp;test&nbsp;where&nbsp;id&nbsp;&lt;=5&nbsp;with&nbsp;local&nbsp;check&nbsp;option;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：我的测试结果为，如果加上With....属性，不管是1还是2，只要更新的结果&nbsp;id&nbsp;大于5&nbsp;，则不能更新成功。如果不加With......属性，假如更新一行&nbsp;id&nbsp;为10，则也能更新成功，但因为不符合where条件，所以查询视图不会查到。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除视图：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">用户可以一次删除一个或多个视图</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Drop&nbsp;view&nbsp;[&nbsp;if&nbsp;exists&nbsp;]&nbsp;view_name&nbsp;[&nbsp;,view_name1&nbsp;]&nbsp;......[restrict&nbsp;|&nbsp;cascade]</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看视图：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以使用show&nbsp;tables;&nbsp;查看。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看某个视图的定义：&nbsp;show&nbsp;create&nbsp;view&nbsp;view_name&nbsp;\\G&nbsp;;</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:30:02'),
(275, '10 索引的设计和使用', '<p>\r\n	<span style="font-size:14px;">创建索引的语法：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Create&nbsp;[unique&nbsp;|&nbsp;fulltext&nbsp;|&nbsp;spatial]&nbsp;index&nbsp;index_name&nbsp;[using&nbsp;index_type]&nbsp;on&nbsp;table_name(index_col_name)&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如给city表的city字段创建了10个字段的索引：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ex:&nbsp;create&nbsp;index&nbsp;index_cityname&nbsp;on&nbsp;city(city(10));</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除索引的语法：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Drop&nbsp;index&nbsp;index_name&nbsp;on&nbsp;table_name</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">设计索引的原则：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.最适合索引的列应该是where语句后面出现的列而不应该是select&nbsp;关键字后面的列。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.使用唯一索引。应该考虑列中的分布，如出生日期具有大量不同的值而性别只有M或F值，所以给性别加唯一索引没多大用处。索引列的基数越大，效果越好。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.使用短索引。如果对字符串列进行索引，应该指定一个前缀长度，只要有可能，就应该这样做。如有一个char(200)列，如果在前10个或20个字符内，多数值是唯一的，那么就不必对全列进行索引。对前10个或20个字符索引能节约大量索引空间，查询更快，较小索引涉及的磁盘I/O更少。更重要的是较短的键值，使索引高速缓存中的块能容纳更多的键值，因此，Mysql也可以在内存中容纳更多的值。这样就增加了找到行而不用读取索引中较多块的可能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.利用最左前缀。在创建一个N列的索引时，实际是创建了Mysql可利用的N个索引。多列索引可以起多个索引的作用，因为可利用索引最左边的列集来匹配行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5.不要过度索引。每个额外的索引都要占用额外的磁盘空间，并降低写操作的性能。在修改表内容的时候，索引必须进行更新，有时还需要重构，因此，索引越多，所花费的时间越长。如果有一个索引很少用或不用，会减缓表的修改速度。此外Mysql在生成一个执行计划时，必须考虑各个索引，这也要花费时间。索引太多，也可能使Mysql选择不到所要使用的最好索引。因此只保留所需索引有利于查询优化。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6.对于InnoDB。如果有主键则按主键顺序保存，如果没有主键有唯一索引则按唯一索引保存，如果二者都没则InnoDB内部会自动生成一个内部列，按照这个列保存。按主键或内部列访问速度最快，所以应该尽量自己定义主键。当表中有几个列都是唯一的，应该使用最常用的列作为主键，提高表的查询效率。注意，因为InnoDB会保存主键的键值，所以主键要尽可能选择较短的数据类型，可以有效的减少索引的磁盘占用，提高索引的缓存效果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Btree索引与Hash索引：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Hash索引的特征和使用注意：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.只用于使用&nbsp;=&nbsp;或&nbsp;&lt;=&gt;&nbsp;操作符的等式比较。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.优化器不能使用Hash索引来加速Order&nbsp;By&nbsp;的操作。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.Mysql不能确定在二个值之间有多少行，如果将一个MyISAM表改为Hash索引的Memory表，会影响一些查询效率。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4.只能使用关键字来搜索一行。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于Btree索引：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">当使用&nbsp;&gt;&nbsp;,&nbsp;&lt;&nbsp;,&nbsp;&gt;=,&nbsp;&lt;=&nbsp;,&nbsp;Between&nbsp;,&nbsp;!=&nbsp;或者&nbsp;&lt;&gt;&nbsp;,或者&nbsp;like&nbsp;''str''&nbsp;操作符时，都可以使用相关列上的索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ex:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下列查询适用于btree索引和hash索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Select&nbsp;*&nbsp;from&nbsp;table&nbsp;where&nbsp;col1&nbsp;=&nbsp;1&nbsp;or&nbsp;col2&nbsp;in&nbsp;(15,20,25);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下列查询适用于btree索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Select&nbsp;*&nbsp;from&nbsp;table&nbsp;where&nbsp;col1&nbsp;&gt;&nbsp;10&nbsp;and&nbsp;col2&nbsp;&lt;&nbsp;20;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Select&nbsp;*&nbsp;from&nbsp;table&nbsp;where&nbsp;col1&nbsp;like&nbsp;''ab''&nbsp;or&nbsp;col2&nbsp;between&nbsp;''andy''&nbsp;and&nbsp;''luoru'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01014ngx&amp;url=http://s11.sinaimg.cn/orignal/788e5b7atbdce0d96afca" target="_blank"><img src="http://s11.sinaimg.cn/middle/788e5b7atbdce0d96afca&amp;690" height="277" width="554" alt="10&nbsp;&lt;wbr&gt;索引的设计和使用" title="10&nbsp;&lt;wbr&gt;索引的设计和使用" /></a><br />\r\n<br />\r\n<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01014ngx&amp;url=http://s12.sinaimg.cn/orignal/788e5b7atbdce0db4cd7b" target="_blank"><img src="http://s12.sinaimg.cn/middle/788e5b7atbdce0db4cd7b&amp;690" alt="10&nbsp;&lt;wbr&gt;索引的设计和使用" title="10&nbsp;&lt;wbr&gt;索引的设计和使用" /></a><br />\r\n<br />\r\n<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01014ngx&amp;url=http://s8.sinaimg.cn/orignal/788e5b7atbdce0dce1437" target="_blank"><img src="http://s8.sinaimg.cn/middle/788e5b7atbdce0dce1437&amp;690" alt="10&nbsp;&lt;wbr&gt;索引的设计和使用" title="10&nbsp;&lt;wbr&gt;索引的设计和使用" /><span style="font-size:14px;">&nbsp;</span></a> \r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:30:20'),
(276, '7 mysql表类型(存储引擎)的选择 ', '<p>\r\n	<span style="font-size:14px;">Mysql支持许多的存储引擎，但是只要Innode和BDB支持事务类型。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">查看当前默认的存储引擎：show&nbsp;variables&nbsp;like&nbsp;''table_type'';</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以通过show&nbsp;engines&nbsp;\\G&nbsp;或show&nbsp;variables&nbsp;like&nbsp;''have%''&nbsp;查看支持的引擎</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改表的引擎：alter&nbsp;table&nbsp;tablename&nbsp;engine&nbsp;=&nbsp;type;</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01014ngv&amp;url=http://s4.sinaimg.cn/orignal/788e5b7atbdce066fb213" target="_blank"><img src="http://s4.sinaimg.cn/middle/788e5b7atbdce066fb213&amp;690" alt="7&nbsp;&lt;wbr&gt;表类型(存储引擎)的选择" title="7&nbsp;&lt;wbr&gt;表类型(存储引擎)的选择" /></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面介绍常用的存储引擎：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MyISAM：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">优势速度快，一般用于没有事务要求，以select&nbsp;和&nbsp;insert为主的应用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">表在磁盘上存储分成3个文件：.frm(表定义)，.MYD(MyData,存储数据)，.MYI(MyIndex,存储索引)。数据文件和索引文件可以放置在不同的目录，达到平均分布IO，获得更快的速度，文件路径需要在建表的时候通过data&nbsp;directory和index&nbsp;directory语句指定,文件路径需要是绝对路径。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">支持的3种不同的存储格式：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.静态（固定长度）表：速度快，易缓存，易修复，但占用空间大</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.动态表：占用空间少，但会产生碎片需要定期执行optimize&nbsp;table改善</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3.压缩表：由myisampack工具创建，记录被单独压缩了</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">InnoDB：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">具有提交，回滚和崩溃恢复能力的事务安全。但效率比MyISAM写的处理效率差一些并且会占用更多的磁盘空间以保存数据和索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">对于InnoDB表，自动增长列必须是索引，如果是组合索引，也必须是组合索引的第一列。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">特性-------外键约束</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql支持外键的存储引擎只有InnoDB,在创建外键的时候，要求父表必须有对应的索引，子表在创建外键的时候也会自动创建对应的索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">具体详细资料已做整理，人人网，博客hi.baidu.com/xiaozhe/home都有资料。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">特性-------存储方式</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">InnoDB存储表和索引有以下两种方式：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1.&nbsp;使用共享表空间存储，这种方式创建的表结构保存在.frm文件中，数据和索引在innodb_data_home_dir和innode_data_file_path定义的表空间中，可以是多个文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2.&nbsp;使用多表空间存储，这种方式创建的表结构仍在.frm文件中，但是每个表的数据和索引单独保存在.ibd中。如果是分区表，则每个分区对应单独的.ibd文件，文件名是"表名+分区名"，可以在创建分区的时候指定每个分区的数据文件的位置，以此来将表的IO均匀分布在多个磁盘上。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">要开启多表空间的存储方式，需要设置参数innode_file_per_table,并重启服务器后才生效。多表空间的数据文件没有大小限制，不需要设置初始大小，文件限制和扩展大小。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MEMORY：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用存在内存中的内容来创建表。每个memory表实际对应一个磁盘文件，格式是.frm。Memory访问速度非常快，因为数据都保存在内存中，默认使用HASH索引，但一旦服务器关闭，表中数据就会丢失。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建方式：假如我有一个products表里面有10条数据，则可以将这10条数据存入一个memory表中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql-&gt;create&nbsp;table&nbsp;product_memory&nbsp;engine&nbsp;=&nbsp;memory</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;select&nbsp;*&nbsp;from&nbsp;products;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">这样就将products表中的数据都插入到了新表product_memory中。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">你可以通过show&nbsp;create&nbsp;table&nbsp;product_memory&nbsp;\\G;查看结构或show&nbsp;table&nbsp;status&nbsp;like&nbsp;"product_memory";查看一些属性。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">加索引：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">可以为memory表建立HASH索引或BTREE索引，如create&nbsp;index&nbsp;index_name&nbsp;using&nbsp;HASH&nbsp;on&nbsp;product_memory(name);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">释放memory占用的缓存：Delete&nbsp;from&nbsp;或&nbsp;truncate&nbsp;table&nbsp;或者删除整个表drop&nbsp;table。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Memory表中存放数据的大小受到系统变量max_heap_table_size的约束，初始16M。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：Memory表主要用于那些内容不频繁变化的或者作为统计操作的中间结果表。因为Memory数据存在内存没有写入磁盘文件，所以要对下一次重新启动服务器时如何获取数据考虑。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MERGE：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">是一组MyISAM表的组合，这些MyISAM表必须结构相同。MERGE表本身没有数据，对MERGE类型操作其实是对内部的MyISAM表操作。对MERGE类型表插入操作，是通过INSERT_METHOD子句定义插入的表，可以有3个不同值first，last，no，分别代表插入操作作用在第一个表或最后一个表或不能插入。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果对MERGE表进行DROP删除，则只删除MERGE定义，对内部表没有任何影响。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">它在磁盘上保留2个文件，一个是.frm文件存储表定义，一个是.MRG文件包含组合表的信息，可以通过修改.MRG文件来修改MERGE表，修改后通过flush&nbsp;tables&nbsp;刷新。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">创建语法：假设3个表xiaozhe1,xiaozhe2为MyiSAM并且结构一样，而xiaozhe为MEMRG。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql-&gt;create&nbsp;table&nbsp;xiaozhe(</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;-&gt;id&nbsp;int,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;name&nbsp;varchar(50),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;index(id)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-&gt;)engine=merge&nbsp;union=(xiaozhe1,xiaozhe2)&nbsp;INSERT_METHOD=LAST;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">注：xiaozhe表的结构必须与xiaozhe1,xiaozhe2一样(索引不是结构，可以不同)，因为INSERT_METHOD=LAST，所以向xiaozhe插入数据实际会插入到xiaozhe2，如果select&nbsp;*&nbsp;from&nbsp;xiaozhe；则实际是查出xiaozhe1,xiaozhe2合并后的结果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如何选择合适的存储引擎：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MyISAM:默认的存储引擎，如果主要以插入和读操作为主，并且对事务的完整性，并发性要求不高。经常用于WEB，数据仓储和其他应用环境下。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">InnoDB:用于事务处理应用程序，支持外键。对事务的完整性要求比较高，在并发条件下要求数据一致，有大量的更新和删除操作，则适合使用。能有效降低删除和更新导致的锁定，还可以确保事务的完整性commit和rollback。对于财务或收费类系统适合。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MEMORY：将数据存在RAM中，在需要快速定位和其他类似数据的环境下，可提供极快的访问，能快速定位记录通常用于不大更新频繁的小表。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MERGE:用于将一系列等同的MyISAM表以逻辑方式组合在一起，并作为一个对象引用它们，MERGE表的优点在与可以突破单个MyISAM表大小的限制，并且通过将不同的表分布在多个磁盘上，可以有效的改善MERGE表的访问效率。这对于诸如数据仓促等VLDB环境十分适合。</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:30:42');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(277, '5 Mysql常用函数', '<p>\r\n	<span style="font-size:14px;">Mysql中的常用字符串函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Cancat(s1,s2,s3....,sn)&nbsp;连接s1,s2,s3,..sn为一个字符串。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Lower(str)&nbsp;将字符串变为小写。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Upper(str)&nbsp;将字符串变为大写。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Left(str,x)&nbsp;返回最左边的x个字符。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Right(str,x)&nbsp;返回最右边的x个字符&nbsp;。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Lpad(str,n,pad)&nbsp;用字符pad对str最左边进行补充，直到总字符长度达到n为止。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Rpad(str,n,pad)&nbsp;用字符pad对str最右边进行补充，直到总字符长度达到n为止。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ltrim(str)和Rtrim(str)&nbsp;去掉str左边或右边的空格。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Trim(str)&nbsp;去掉两边的空格。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Repeat(str,x)&nbsp;返回str重复x次的结果。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Replace(str,a,b)&nbsp;用字符串b替换在str中的所有a字符。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Strcmp(s1,s2)&nbsp;比较字符串s1和s2。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Substring(str,x,y)&nbsp;返回str从x位置开始的y个字符长度的字串，x的位置从1开始的，即第一个字符位置为1。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Insert(str,x,y,replace_str)&nbsp;将str字符串从x位置开始,y个长度的字符串替换为replace_str，注意一点是x位置是从1开始的，即第一个字符位置为1。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql中常用的数值函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Abs(x)&nbsp;返回x的绝对值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ceil(x)&nbsp;返回大于x的最大整数值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Floor(x)&nbsp;返回小于x的最大整数值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mod(x,y)&nbsp;返回x%y。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Rand()&nbsp;返回0~1内的随机数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Round(x,y)&nbsp;返回x的四舍五入后有y位小数的值，如果不写y，默认为0。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Truncate(x,y)&nbsp;返回数字x截断为y位的小数的结果，与round()的区别在于它仅仅是截断而不会四舍五入。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql中常用的&nbsp;日期和时间函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Curdate()&nbsp;返回当前日期</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Curtime()&nbsp;返回当前时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Now()&nbsp;返回当前的日期和时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Unix_timestamp(date)&nbsp;返回日期date的Unix时间戳</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">From_unixtime(timestamp)&nbsp;返回时间戳timestamp的日期和时间</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Week(date)&nbsp;返回date为该年中的第几周</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Year(date)&nbsp;返回日期date的年份</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Hour(time)&nbsp;返回time的小时值</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Minute(time)&nbsp;返回time的分钟值</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Monthname(date)&nbsp;返回date的月份名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Datediff(expr,expr2)&nbsp;返回起始时间expr和结束时间expr2之间的天数。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Date_add(date,INTERVAL&nbsp;expr&nbsp;type)&nbsp;返回一个日期或时间加上一个时间间隔的时间值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：SELECT&nbsp;DATE_ADD(now(),INTERVAL&nbsp;2&nbsp;DAY)&nbsp;表示得到2天后的时间，具体的type值可以去</span><a href="http://www.w3school.com.cn/sql/func_date_add.asp"><span style="font-size:14px;">http://www.w3school.com.cn/sql/func_date_add.asp</span></a><span style="font-size:14px;">&nbsp;查看</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Date_sub(date,INTERVAL&nbsp;expr&nbsp;type)返回一个日期或时间减上上一个时间间隔的时间值。&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Date_format(date,fmt)&nbsp;返回按字符串fmt格式化日期date值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如&nbsp;DATE_FORMAT(NOW(),''%b&nbsp;%d&nbsp;%Y&nbsp;%h:%i&nbsp;%p'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">DATE_FORMAT(NOW(),''%m-%d-%Y'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">DATE_FORMAT(NOW(),''%d&nbsp;%b&nbsp;%y'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">DATE_FORMAT(NOW(),''%d&nbsp;%b&nbsp;%Y&nbsp;%T:%f'')</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">格式</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">描述</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%a</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">缩写星期名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%b</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">缩写月名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%c</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">月，数值</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%D</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">带有英文前缀的月中的天</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%d</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">月的天，数值(00-31)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%e</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">月的天，数值(0-31)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%f</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">微秒</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%H</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">小时&nbsp;(00-23)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%h</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">小时&nbsp;(01-12)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%I</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">小时&nbsp;(01-12)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%i</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">分钟，数值(00-59)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%j</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">年的天&nbsp;(001-366)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%k</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">小时&nbsp;(0-23)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%l</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">小时&nbsp;(1-12)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%M</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">月名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%m</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">月，数值(00-12)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%p</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">AM&nbsp;或&nbsp;PM</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%r</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">时间，12-小时（hh:mm:ss&nbsp;AM&nbsp;或&nbsp;PM）</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%S</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">秒(00-59)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%s</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">秒(00-59)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%T</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">时间,&nbsp;24-小时&nbsp;(hh:mm:ss)</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%U</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">周&nbsp;(00-53)&nbsp;星期日是一周的第一天</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%u</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">周&nbsp;(00-53)&nbsp;星期一是一周的第一天</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%V</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">周&nbsp;(01-53)&nbsp;星期日是一周的第一天，与&nbsp;%X&nbsp;使用</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%v</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">周&nbsp;(01-53)&nbsp;星期一是一周的第一天，与&nbsp;%x&nbsp;使用</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%W</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">星期名</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%w</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">周的天&nbsp;（0=星期日,&nbsp;6=星期六）</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%X</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">年，其中的星期日是周的第一天，4&nbsp;位，与&nbsp;%V&nbsp;使用</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%x</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">年，其中的星期一是周的第一天，4&nbsp;位，与&nbsp;%v&nbsp;使用</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%Y</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">年，4&nbsp;位</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">%y</span>\r\n				</p>\r\n			</td>\r\n			<td>\r\n				<p>\r\n					<span style="font-size:14px;">年，2&nbsp;位</span>\r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Mysql中的流程函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">If(value,t,f)&nbsp;如果value为真，返回t；否则返回f</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01014ngr&amp;url=http://s6.sinaimg.cn/orignal/788e5b7atbdcdf183cb85" target="_blank"><img src="http://s6.sinaimg.cn/middle/788e5b7atbdcdf183cb85&amp;690" height="445" width="554" alt="5&nbsp;&lt;wbr&gt;Mysql常用函数" title="5&nbsp;&lt;wbr&gt;Mysql常用函数" /></a>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Ifnull(value1,value2)&nbsp;如果value1为Null值，则用value2代替。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Case&nbsp;when&nbsp;[value1]&nbsp;then&nbsp;[result1]&nbsp;........&nbsp;else&nbsp;[default]&nbsp;end</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Case&nbsp;&nbsp;[expr]&nbsp;when&nbsp;[value1]&nbsp;then&nbsp;[result1]&nbsp;......&nbsp;else&nbsp;[defualt]&nbsp;end</span>\r\n</p>\r\n<p>\r\n	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=788e5b7a01014ngr&amp;url=http://s1.sinaimg.cn/orignal/788e5b7atbdcdf1cccdf0" target="_blank"><img src="http://s1.sinaimg.cn/middle/788e5b7atbdcdf1cccdf0&amp;690" alt="5&nbsp;&lt;wbr&gt;Mysql常用函数" title="5&nbsp;&lt;wbr&gt;Mysql常用函数" /></a> \r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其他的一些常用函数：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Database()&nbsp;返回当前数据库名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Version()&nbsp;返回当前数据库版本</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">User()&nbsp;返回当前登陆用户名</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Inet_aton(ip)&nbsp;返回IP地址的数字表示</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Inet_ntoa(num)&nbsp;返回数字代表的IP地址</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Password(str)&nbsp;返回字符串str的加密版本</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Md5()&nbsp;返回字符串str的Md5值</span>\r\n</p>', 12, 'mysql,笔记', 1, 0, 1, '2013-03-10 13:31:07'),
(278, 'SQL优化 ', '<p>\r\n	<span style="font-size:14px;">通常网站的性能瓶颈在数据库查询，如果你希望你的网站在一定阶段之内保持稳定，优化你的SQL和数据库是非常必要的一个优化环节。优化数据库是一个很大的话题，这里只是摘要一些比较关键的优化参考建议，并且需要具体分析项目的情况才能给出最合理的优化建议，所以具体的优化建议你应该咨询你公司的架构师或者DBA。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">下面是一部分比较重要的建议：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">1、选择正确的存储引擎</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">以&nbsp;MySQL为例，包括有两个存储引擎&nbsp;MyISAM和&nbsp;InnoDB，每个引擎都有利有弊。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">MyISAM适合于一些需要大量查询的应用，但其对于有大量写操作并不是很好。甚至你只是需要update一个字段，整个表都会被锁起来，而别的进程，就算是读进程都无法操作直到读操作完成。另外，MyISAM对于&nbsp;SELECT&nbsp;COUNT(*)这类的计算是超快无比的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">InnoDB的趋势会是一个非常复杂的存储引擎，对于一些小的应用，它会比&nbsp;MyISAM还慢。他是它支持“行锁”，于是在写操作比较多的时候，会更优秀。并且，他还支持更多的高级应用，比如：事务。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、优化字段的数据类型</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">记住一个原则，越小的列会越快。对于大多数的数据库引擎来说，硬盘操作可能是最重大的瓶颈。所以，把你的数据变得紧凑会对这种情况非常有帮助，因为这减少了对硬盘的访问。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果一个表只会有几列罢了（比如说字典表，配置表），那么，我们就没有理由使用&nbsp;INT来做主键，使用&nbsp;MEDIUMINT,&nbsp;SMALLINT或是更小的&nbsp;TINYINT会更经济一些。如果你不需要记录时间，使用&nbsp;DATE要比&nbsp;DATETIME好得多。当然，你也需要留够足够的扩展空间。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3、为搜索字段添加索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">索引并不一定就是给主键或是唯一的字段。如果在你的表中，有某个字段你总要会经常用来做搜索，那么最好是为其建立索引，除非你要搜索的字段是大的文本字段，那应该建立全文索引。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4、避免使用Select&nbsp;*</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">从数据库里读出越多的数据，那么查询就会变得越慢。并且，如果你的数据库服务器和WEB服务器是两台独立的服务器的话，这还会增加网络传输的负载。即使你要查询数据表的所有字段，也尽量不要用*通配符，善用内置提供的字段排除定义也许能给带来更多的便利。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5、使用&nbsp;ENUM而不是&nbsp;VARCHAR</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ENUM类型是非常快和紧凑的。在实际上，其保存的是&nbsp;TINYINT，但其外表上显示为字符串。这样一来，用这个字段来做一些选项列表变得相当的完美。例如，性别、民族、部门和状态之类的这些字段的取值是有限而且固定的，那么，你应该使用&nbsp;ENUM而不是&nbsp;VARCHAR。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6、尽可能的使用&nbsp;NOT&nbsp;NULL</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">除非你有一个很特别的原因去使用&nbsp;NULL值，你应该总是让你的字段保持&nbsp;NOT&nbsp;NULL。&nbsp;NULL其实需要额外的空间，并且，在你进行比较的时候，你的程序会更复杂。当然，这里并不是说你就不能使用NULL了，现实情况是很复杂的，依然会有些情况下，你需要使用NULL值。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7、固定长度的表会更快</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果表中的所有字段都是“固定长度”的，整个表会被认为是&nbsp;“static”或&nbsp;“fixed-length”。&nbsp;例如，表中没有如下类型的字段：&nbsp;VARCHAR，TEXT，BLOB。只要你包括了其中一个这些字段，那么这个表就不是“固定长度静态表”了，这样，MySQL引擎会用另一种方法来处理。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">固定长度的表会提高性能，因为MySQL搜寻得会更快一些，因为这些固定的长度是很容易计算下一个数据的偏移量的，所以读取的自然也会很快。而如果字段不是定长的，那么，每一次要找下一条的话，需要程序找到主键。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">并且，固定长度的表也更容易被缓存和重建。不过，唯一的副作用是，固定长度的字段会浪费一些空间，因为定长的字段无论你用不用，他都是要分配那么多的空间。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用“垂直分割”技术，你可以分割你的表成为两个一个是定长的，一个则是不定长的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">8、垂直分割</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">“垂直分割”是一种把数据库中的表按列变成几张表的方法，这样可以降低表的复杂度和字段的数目，从而达到优化的目的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：在User表中有一个字段是家庭地址，这个字段是可选字段，相比起，而且你在数据库操作的时候除了个人信息外，你并不需要经常读取或是改写这个字段。那么，为什么不把他放到另外一张表中呢？这样会让你的表有更好的性能，大家想想是不是，大量的时候，我对于用户表来说，只有用户ID，用户名，口令，用户角色等会被经常使用。小一点的表总是会有好的性能。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">另外，你需要注意的是，这些被分出去的字段所形成的表，你不会经常性地去Join他们，不然的话，这样的性能会比不分割时还要差，而且，会是极数级的下降。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">9、EXPLAIN你的&nbsp;SELECT查询；</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">使用&nbsp;EXPLAIN关键字可以让你知道MySQL是如何处理你的SQL语句的。这可以帮你分析你的查询语句或是表结构的性能瓶颈。EXPLAIN的查询结果还会告诉你你的索引主键被如何利用的，你的数据表是如何被搜索和排序的……等等，等等。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">通常我们可以对比较复杂的尤其是涉及到多表的SELECT语句，把关键字EXPLAIN加到前面。你可以使用phpmyadmin来做这个事。</span>\r\n</p>', 11, '优化,mysql', 1, 0, 1, '2013-03-10 13:31:36'),
(279, 'apache基于主机的域名指向', '<p>\r\n	<span style="font-size:14px;">这是虚拟主机的样板</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;VirtualHost *:80&gt;</span><br />\r\n<span style="font-size:14px;"> ServerAdmin webmaster@example.com ——管理员邮箱（可以随便写一个）</span><br />\r\n<span style="font-size:14px;"> DocumentRoot "/home/phpok-com" ——网站目录</span><br />\r\n<span style="font-size:14px;"> ServerName&nbsp;example.com —— 要绑定的域名</span><br />\r\n<span style="font-size:14px;"> ServerAlias&nbsp;www.example.com&nbsp;——要绑定的别名，如果有多个别名就用英文逗号隔开</span><br />\r\n<span style="font-size:14px;"> CustomLog&nbsp;&nbsp;logs/example.com_custom_log——用户日志格式（这一行也可以为空）</span><br />\r\n<span style="font-size:14px;"> ErrorLog logs/example.com_error_log ——错误日志（也可以为空）</span><br />\r\n<span style="font-size:14px;"> &lt;/VirtualHost&gt;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">假如我买了个域名是www.xiaozhe.com,要指向到本机/var/www/xz目录的步骤如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">把#Include conf/extra/httpd-vhosts.conf前面的#去掉，意思是让httpd.conf文件包含httpd-vhosts.conf这个配置文件。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">修改httpd-vhosts.conf</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 添加或修改如下代码：</span><br />\r\n<br />\r\n<span style="font-size:14px;"> NameVirtualHost *</span><br />\r\n<span style="font-size:14px;"> &lt;VirtualHost *:80&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;ServerName localhost</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;DocumentRoot &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/var/www &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//这个目录必须与httpd.conf里面的全局根目录一致</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/VirtualHost&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;VirtualHost *:80&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ServerName www.xiaozhe.com</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DocumentRoot /var/www/xz</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&lt;Directory "/var/www/xz"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//这里设置目录的权限</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Options None&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//不允许查看目录列</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AllowOverride &nbsp;&nbsp;None &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//不允许重写</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Order deny,allow</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deny from all</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Satisfy all</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;&lt;/Directory&gt;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;Errorlog &nbsp;&nbsp;"/var/www/xz/error-log"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;&nbsp;Customlog &nbsp;&nbsp;"/var/www/xz/cus-log"</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&lt;/VirtualHost&gt;</span>\r\n</p>', 16, 'apache', 1, 0, 1, '2013-03-10 13:32:08'),
(280, 'mysql innodb 外键关联约束讲解 ', '<p>\r\n	<span style="font-size:14px;">可通过查表信息查看外键的创建信息：Show create table tablename \\G;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">从mysql&nbsp;3.23.44开始,innodb支持外键约束,跟Oracle基本相同,语法形式如下</span><br />\r\n<span style="font-size:14px;"> [CONSTRAINT symbol] FOREIGN KEY [id] (index_col_name, ...)</span><br />\r\n<span style="font-size:14px;"> REFERENCES tbl_name (index_col_name, ...)</span><br />\r\n<span style="font-size:14px;"> [ON DELETE {RESTRICT | CASCADE | SET NULL | NO ACTION}]</span><br />\r\n<span style="font-size:14px;"> [ON UPDATE {RESTRICT | CASCADE | SET NULL | NO ACTION}]</span><br />\r\n<br />\r\n<span style="font-size:14px;"> ALTER TABLE yourtablename</span><br />\r\n<span style="font-size:14px;"> ADD [CONSTRAINT&nbsp;symbol] FOREIGN KEY [id] (index_col_name, ...)</span><br />\r\n<span style="font-size:14px;"> REFERENCES&nbsp;tbl_name&nbsp;(index_col_name, ...)</span><br />\r\n<span style="font-size:14px;"> [ON DELETE {RESTRICT | CASCADE | SET NULL | NO ACTION}]</span><br />\r\n<span style="font-size:14px;"> [ON UPDATE {RESTRICT | CASCADE | SET NULL | NO ACTION}]</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">外键约束对子表的含义:</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;如果在父表中找不到该键的值,则不允许在子表上进行insert/update。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 外键约束对父表的含义:</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;在父表上进行update/delete以更新或删除,在子表中有一条或多条对应匹配行的外键时,父表的行为取决于：在定义子表的外键时指定的on update/on delete子句, InnoDB支持５种方式, 分列如下</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">事件触发限制:</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CASCADE:&nbsp;从父表删除或更新且自动删除或更新子表中匹配的行。ON DELETE CASCADE和ON UPDATE CASCADE都可用。在两个表之间，你不应定义若干在父表或子表中的同一列采取动作的ON UPDATE CASCADE子句。&nbsp;</span><br />\r\n<span style="font-size:14px;"> SET NULL:&nbsp;从父表删除或更新行，并设置子表中的外键列为NULL。如果外键列没有指定NOT NULL限定词，这就是唯一合法的。ON DELETE SET NULL和ON UPDATE SET NULL子句被支持。&nbsp;</span><br />\r\n<span style="font-size:14px;"> NO ACTION:&nbsp;在ANSI SQL-92标准中，NO ACTION意味这不采取动作，就是如果有一个相关的外键值在被参考的表里，删除或更新主要键值的企图不被允许进行（Gruber, 掌握SQL, 2000:181）。 InnoDB拒绝对父表的删除或更新操作。&nbsp;</span><br />\r\n<span style="font-size:14px;"> RESTRICT:&nbsp;拒绝对父表的删除或更新操作。NO ACTION和RESTRICT都一样，删除ON DELETE或ON UPDATE子句。（一些数据库系统有延期检查，并且NO ACTION是一个延期检查。在MySQL中，外键约束是被立即检查的，所以NO ACTION和RESTRICT是同样的）。&nbsp;</span><br />\r\n<span style="font-size:14px;"> SET DEFAULT:&nbsp;这个动作被解析程序识别，但InnoDB拒绝包含ON DELETE SET DEFAULT或ON UPDATE SET DEFAULT子句的表定义。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">在已存在的表中创建外键</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">alter table 外键所在的表名 add constraint 外键名 foreign key(外键所在的列名) references 对应主键所在表名(主键所在列名);</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">alter table 外键所在的表名 add constraint 外键名 foreign key(外键所在的列名) references 对应主键所在表名(主键所在列名) ON DELETE CASCADE &nbsp;ON UPDATE NO ACTION;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">删除外键</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">alter table tablename drop foreign key namefk;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">外键的作用：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">保持数据一致性，完整性，主要目的是控制存储在外键表中的数据。 使两张表形成关联，外键只能引用外表中的列的值！</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例如：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a b 两个表</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">a表中存有 客户号，客户名称</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">b表中存有 每个客户的订单</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">有了外键后</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">你只能在确信b 表中没有客户x的订单后，才可以在a表中删除客户x</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">建立外键的前提： 本表的列必须与外键类型相同(外键必须是外表主键)。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">指定主键关键字： foreign key(列名)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">引用外键关键字： references &nbsp;外键表名(外键列名)</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">例子：</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">products 和 serial是一对多的关系</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">serial.pid字段是外键，products.id字段是外表对应的主键</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-- 表的结构 `products`</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">DROP TABLE IF EXISTS `products`;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CREATE TABLE IF NOT EXISTS `products` (</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;`id` int(11) NOT NULL auto_increment,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;`name` varchar(55),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;PRIMARY KEY &nbsp;(`id`),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;KEY `name` (`name`)</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">) ENGINE=InnoDB;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">-- 表的结构 `serial`</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">--</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">DROP TABLE IF EXISTS `serial`;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">CREATE TABLE IF NOT EXISTS `serial` (</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;`id` int(11) NOT NULL auto_increment,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;`name` varchar(55) ,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;`pid` int(11) default NULL,</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;PRIMARY KEY &nbsp;(`id`),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;KEY `name` (`name`),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;KEY `pid` (`pid`),</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;CONSTRAINT `pidfk` FOREIGN KEY (`pid`) REFERENCES `products` (`id`)&nbsp;ON DELETENO ACTION&nbsp;ON UPDATE&nbsp;CASCADE&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">) ENGINE=InnoDB ;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">//可以修改表添加约束</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">mysql&gt; alter table `serial` add constraint `keyname` foreign key(`pid`) references products(`id`) on delete cascade on update cascade;</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">其它</span><br />\r\n<span style="font-size:14px;"> 1, mysqldump在dump数据时，会加入外键信息</span><br />\r\n<span style="font-size:14px;"> 2, 也可以用SHOW TABLE STATUS FROM db_name LIKE ''tbl_name'';查看外键信息, 在comment列中</span><br />\r\n<span style="font-size:14px;"> 3, 注意innodb中如果设置了lower_case_table_names,对外键的影响</span><br />\r\n<span style="font-size:14px;"> 4, 在创建外键时，可以加入backtricks(反引号),将外键名，列名包括起来</span><br />\r\n<span style="font-size:14px;"> 5, 如果是在mysql3.23.50之前版本,注意如果表上有外键或者作为父表被refer,不要使用alter table , create index命令</span><br />\r\n<span style="font-size:14px;"> 6, Innodb要进行外键check时，需要在父或子表上加共享行级锁(shared row lock),不是事务级</span><br />\r\n<span style="font-size:14px;"> 7, 从mysql4.1.1开始，为了使reload dumpfile更容易进行,mysqldump生成的文件自动添加了FOREIGN_KEY_CHECKS=0选项以禁止外键约束检查</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;对于早期版本，可以用下面方法达到同样目的</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;mysql&gt; SET FOREIGN_KEY_CHECKS = 0;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;mysql&gt; SOURCE dump_file_name</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;mysql&gt; SET FOREIGN_KEY_CHECKS = 1;</span><br />\r\n<span style="font-size:14px;"> 8, 在alter table或load data时，可能也需要进行上述设置以临时禁止外键约束检查</span><br />\r\n<span style="font-size:14px;"> 9, 除非设置了FOREIGN_KEY_CHECKS = 0, Innodb禁止drop父表（被子表外键引用的表）</span><br />\r\n<span style="font-size:14px;"> 10, 当设置FOREIGN_KEY_CHECKS = 0后drop一个父子.&nbsp;</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style="font-size:14px;">&nbsp; 下次重新创建这个父表时，必须跟drop之前一样(正确的列/数据类型/被参照的列上必须有索引), 否则系统会报1005 refer to errno 150&nbsp;&nbsp;(这一点前述测试中没有发现报错</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<br />\r\n</p>', 12, 'innodb,mysql', 1, 0, 1, '2013-03-10 13:32:37'),
(281, 'CSS Sprites : 样式表贴图定位 –SpriteMe 详解 ', '<p>\r\n	<span style="font-size:14px;">sprite me 是一个bookmark（书签），因此大家只需要把spriteMe添加到自己的书签的工具栏中，访问任意网站需要使用它的时候，只需要轻轻点击一下sprite me就可以哈~</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">点击以后会在页面的右上方弹出一个覆层。</span>\r\n</p>', 15, '', 1, 0, 1, '2013-03-10 13:32:55'),
(282, 'firefox一些推荐的插件', '<p>\r\n	<span style="font-size:14px;">Foxmarks/ Xmarks</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;别误会，这是同一个插件。之前的版本叫Foxmarks，在某个版本之后改名叫Xmarks。说起来从这个插件开始这次介绍的第一款真正含义以上火狐的功能插件吧（前面两个，一个是便携版，一个是调IE，呵呵）。这个插件的功能太强大了，他的作用是在多台电脑间同步你的书签（也就是IE里的收藏夹）。具体来说，你一定有这样的体会，当你用IE的时候，当你重做系统的时候，当你又一不小心忘了备份你的收藏夹的时候，或者当你去网吧或公司换了一台电脑而没带备份的收藏夹的时候，那么恭喜你，重新收藏吧。</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;Firefox就可以完全避免此类情况的发生。通过Xmars插件，你可以在该插件的公司注册帐号，之后本地的收藏夹会同步到该公司的服务器上。同步是什么意思？简而言之，就是让服务器上的数据和你本机的保持一致。所以，假如你第一次使用这个插件，他会把你本地的所有书签，按照你的分类格式上传服务器。那么当你下班回家，打开Firefox，他会自动从服务器上下载下来。同样，这时候你又新收藏了一个网页，他也会自动把这个新增加的书签上传，你第二天到公司打开Firefox&nbsp;就会发现，书签已经自动更新了。怎么样，很酷吧！如此一来，你再也不用担心收藏夹丢失的事情了，即使你所有的电脑同时全部重做系统，那么你要做的也仅仅是下载Firefox，安装Xmarks插件，接下来的事情，就是等着看你的书签重新出现吧！</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Adblock plus</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;这个东西其实现在IE&nbsp;上也有了，就是屏蔽广告。但是他的效果可比IE好得多了。除了常规的屏蔽弹出广告窗口功能外，更可以让你自定义屏蔽内容。现在的网络是很不干净的，弹出窗口早已不是唯一的广告途径，到处充斥着乱七八糟的图片，浮动广告，但是有了Adblock plus，你只要在图片，flash等元素上右键-&gt;过滤图片/过滤帧等，一切就清静了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Firebug</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;这个插件对于从事网页开发的人来说简直是太棒了！所有开发网页的同学都知道，javascript这个东西是很烦人的，尤其是调试的时候，尤其尤其是在IE&nbsp;下调试（现在IE8好一点了），出错了连个p都不放，所谓详细信息也只提示‘缺少对象’云云。而在Firefox下，使用Firebug插件不仅可以明确的在他的控制台告诉你哪错了，而且这个错误还是一个链接，点击可以直接到达错误代码处。这还不够，Firefox甚至可以对页面上执行的代码进行断点跟踪调试，监视变量的值!</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Tab Mix Plus/Lite</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;Tab Mix插件是对Firefox标签进行增强的工具。他可以改变标签的很多属性，增加很多功能。比如在标签上分别显示各个页面的载入进度，已读和未读的标签用颜色区分。对标签进行各种动作（单机，双击，鼠标中建等）的定义。plus版比lite版功能更加强劲一些，不过占用资源也更多一些，其中很有用的一个功能是按ctrl+tab切换标签的功能。以往，当你从A标签离开，往往需要不停的按ctrl+tab循环一个来回后才能再定位到A标签。Plus版的一个功能就是智能标签切换。比如你想对比A页面和C页面的不同，你可以只在A和C之间来回切换，而不会涉及Ｂ，Ｄ，Ｅ……。我个人觉得Lite版就已经不错了</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">FireGestures</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;又是一个鼠标增强插件，这个功能大家都知道，鼠标手势。我听过网上很多人都BS Firefox没有鼠标手势功能。其实那只是他们不了解Firefox罢了，就像我前面所所，Firefox只是一块主板，上面装什么东西取决于你自己，你就是Firefox的上帝。如果你说：要有鼠标手势，于是就有了这个插件（当然，实现鼠标手势的插件有很多）。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Text Link</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;相对前几个插件，这个插件只是完成一个很小的功能，不过我认为还是很实用的。我们经常在浏览网页时看到文章里有一些网页链接，这些链接有些是超链接形式，有些只是文字而已。对于第一种不必多说，点一下就好，对于第二种，我们一般的做法是选中，ctrl+c复制，然后在地址栏ctrl+v粘帖。这个插件的作用就是在第二种情况的时候，你只要在链接文字上双击鼠标，就可以方便的打开这个链接。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">colorful</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;&nbsp;让你的标签显示出不同的颜色。</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;IETab</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;这可是个好东西。前面说了，很多网页在Firefox上的显示效果并不好，遇到这种情况，以往我们的做法是关掉Firefox，打开IE。而现在不同了，因为我们有了IETab。这个插件的作用就是调用IE核心！有了这个插件，你可以随时切换FireFox的内核，如果你发现页面排版很乱，那么试试点击一下右下角火狐图标一样的小图标，这时这个图标会变成IE经典的蓝色e图标，这就表示现在是在用IE浏览这个网页了，怎么样，一切正常了吧？什么？还不对？那一定是他们的网页做出问题了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">ColorZilla</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">颜色拾取器</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">Web Developer</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">开发工具</span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">DownThemAll</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;这是一个下载增强插件。我对他的定位是，高于默认下载，低于专业下载。默认下载就不说了，专业下载就是指Flashget，迅雷等工具。当你只想下一些小东西，也许打开迅雷的时间就够下载完毕了。这时候他就派上用场了，简单的操作，快速的下载，都是相当不错的。</span><br />\r\n<br />\r\n<span style="font-size:14px;"> FlashGot</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;既然说到下载，那么这个东西就不能不说了。先看清楚了，这是FlashGot，不是FlashGet。下载软件中，绝大多数是支持IE的，在Firefox下怎么调用它们进行下载呢？就是这个FlashGot了，通过它，你可以调用快车，迅雷还有很多国内不用国外却很流行的下载工具。另外，这个插件是我所知道所有插件中更新升级最频繁的，没有之一。</span>\r\n</p>', 11, 'firefox', 1, 0, 1, '2013-03-10 13:34:11');
INSERT INTO `mb_blog` (`id`, `title`, `content`, `c_id`, `tags`, `comment_conf`, `click`, `active`, `datetime`) VALUES
(283, 'mysql优化方案', '<span style="font-size:14px;">1、 在一般情况下，应该尝试以非冗余方式(查看数据库理论中的第三正则形式)保存数据，但是为了获得更快的速度，可以冗余字段或创建总结表。</span>\r\n<p>\r\n	<span style="font-size:14px;">2、当MyISAM使用动态表格式时，偶尔使用OPTIMIZETABLE可以避免碎片。可以写一个脚本程序定时执行优化。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3、在Web服务器中，图象和其它二进制资源应该作为文件存储。也就是仅在数据库中存储的文件的引用地址而不是文件本身。大多数Web服务器在缓存文件方面比数据库内容要好得多，因此使用文件一般要快得多。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4、对经常访问的不重要数据(如session)使用内存表。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5、在MYSQL的主写从读的架构中，一般将主库的表类型使用innoDB类型，而从库则使用myisam的表结构。因为innoDB支持事务，而且它是行锁，对插入、更新、删除的影响比较小，更改数据的性能也更高（很多人测试过）。</span><br />\r\n<span style="font-size:14px;"> 注：一定要记得要将innodb的auto_commit的默认值设置成0或false，它是默认值是1</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如updatetable set num=1 where name like “�a%”</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6、用DELAY_KEY_WRITE=1选项声明MyISAM表可以使索引更新更快，因为在表关闭之前它们不刷新到硬盘上。不利之处是当表打开时如果杀掉服务器，应确保用–myisam-recover选项运行服务器保证没有问题，或者在重启服务器之前运行myisamchk。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">【查询优化】</span><br />\r\n<span style="font-size:14px;"> 1、索引实际上是一个单独的、物理的数据库结构，它是某个表中一列或若干列值的集合和相应的指向表中物理标识这些值的数据页的逻辑指针清单。理解了这个概念，对于合理使用索引很重要，比如单独查询一个索引列的时候速度非常快，因为mysql根本不去检索实际表，而只要查询排序好的索引表就行了。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、使用explain EXTENDEDSELECT…，可以得到重写并且执行优化规则后SELECT语句，其中查询时必须检查的行数[rows]的乘积（笛卡尔乘积）越小，查询效率越高。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3、MySQL用一遍扫描多次联接（single-sweepmulti-join）的方式解决所有联接。这意味着MySQL从第一个表中读一行，然后找到在第二个表中的一个匹配行，然后在第3个表中等等。</span><br />\r\n<span style="font-size:14px;"> 　 所以关联的表的顺序应该是记录数从多到少的顺序，这样它的笛卡尔乘积就越小，查询效率就越高。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4、join的条件字段考虑实际情况建立索引，条件字段的类型、长度要一致。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5、使用</span><a href="http://dev.mysql.com/doc/refman/5.1/en/information-functions.html"><span style="font-size:14px;">FOUND_ROWS</span></a><span style="font-size:14px;">和</span><a href="http://dev.mysql.com/doc/refman/5.1/en/information-functions.html"><span style="font-size:14px;">SQL_CALC_FOUND_ROWS</span></a><span style="font-size:14px;">来计算分页，它们的主要作用是计算SQL语句中除去LIMIT的查询结果集的行数，因为它是在查询表扫描行时计算出来的，所以性能会更高。[见</span><a href="http://www.junney.cn/archives/83"><span style="font-size:14px;">MYSQL分页统计的新方法</span></a><span style="font-size:14px;">]</span><br />\r\n<span style="font-size:14px;"> 如：</span><br />\r\n<span style="font-size:14px;"> mysql&gt;SELECT SQL_CALC_FOUND_ROWS * FROMtbl_name&nbsp;WHERE id &gt; 100 LIMIT10;</span><br />\r\n<span style="font-size:14px;"> mysql&gt;SELECTFOUND_ROWS();</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">【插入优化】</span><br />\r\n<span style="font-size:14px;"> 1、插入一条记录大致的时间使用情况是：</span><br />\r\n<span style="font-size:14px;"> 　连接：(3)</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;发送查询给服务器：(2)</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;分析查询：(2)</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;插入记录：（1x记录大小）</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;插入索引：（1x索引）</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;关闭：(1)</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;表的大小以logN 的速度减慢索引的插入。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;2、尽量使用INSERT INTO TABLE(xxx,xxx),(xxx,xxx)，这比使用单行INSERT语句快（在某些情况下快几倍）。</span><br />\r\n<span style="font-size:14px;"> &nbsp;　 使用set bulk_insert_buffer_size=xxx，MyISAM使用专用树状缓存来使INSERT … SELECT、INSERT … VALUES (…)、(…)、 …和LOAD DATAINFILE的大块插入更快。将它设置为0禁用优化。注释：只有向非空表添加数据时才使用该缓存。 默认值是8MB。</span><br />\r\n<span style="font-size:14px;"> &nbsp;</span><br />\r\n<span style="font-size:14px;"> &nbsp;3、当不需要知道何时写入数据时，使用INSERTDELAYED。这样可以加快处理，因为很多记录可以通过一次性写入硬盘。比如记录日志。</span><br />\r\n<span style="font-size:14px;"> 注：DELAYED和LOW_PRIORITY的区别是LOW_PRIORITY强迫客户端等待，直到那些数据行可以被插入数据表。DELAYED则允许客户端继续操作而无须等待。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4、可以使用INSERT `pv_table`(page_id, pv) VALUES (1, 20) ON DUPLICATE KEY UPDATEPV=PV+20&nbsp;的方式来代替先查询表记录是否存在再插入或者更新的业务逻辑。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">【索引】</span><br />\r\n<span style="font-size:14px;"> 1、一般来说，如果选择性超过 20%那么全表扫描比使用索引性能更优。比如性别字段。也就是说如果字段值的可能性小于6个的话，是不用建立索引的。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">2、组合索引比单一索引更有效，但是需要合理使用，清楚你在干什么，组合索引采用B树类型，最左前缀的特性，创建组合索引的时候，要考虑到具体的使用场景和逻辑。</span><br />\r\n<span style="font-size:14px;"> 最左前缀的特性：比如我们建立(filed_1,filed_2,filed_3)的索引的话，相当于我们建立了创建了(filed_1,filed_2,filed_3)、(filed_1,filed_2)以及(filed_1)这三种索引</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">3、在需要创建索引的字段上，不能设置默认值为NULL，或者也不能插入NULL值，否则索引没有意义。（好像5.1后部分类型的表可以支持NULL的索引）</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">4、不是索引越多越好，过多索引容易导致更新和插入数据效率大大降低。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">5、要理解最基本的索引概念，只有在where和join用到的字段上创建索引才有价值，另外Max()和Min()函数用到的字段也需要</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">6、Where条件里面，有些情况下也是用不到索引的，比如&lt;&gt;,NOT IN, LIKE语句以 %_开头的时候，这时，可以用 id&gt;m or id，用 NOTEXISTS代替NOTIN，可以用到索引的WHERE条件有：&lt;，&lt;=，=，&gt;，&gt;=，BETWEEN，IN，不以%_开头的LIKE。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">7、对于CHAR和VARCHAR字段，只用字段的一部分就可创建索引。创建索引时，使用col_name(length)语法，因为多数字段的前10个字符通常不同，所以此索引不会比使用字段的全名创建的索引速度慢很多。另外，使用字段的一部分创建索引可以使索引文件大大减小，从而节省了大量的磁盘空间，有可能提高INSERT操作的速度。尤其一些md5()后结果的字段比较适用。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">【附录】</span><br />\r\n<span style="font-size:14px;"> 有关EXPLAIN参数的说明</span><br />\r\n<span style="font-size:14px;"> EXPLAIN列的解释：</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style="font-size:14px;">table：显示这一行的数据是关于哪张表的</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">type：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、indexhe和ALL</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">possible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一个合适的语句</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">key：实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MYSQL会选择优化不足的索引。这种情况下，可以在SELECT语句中使用USEINDEX（indexname）来强制使用一个索引或者用</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">IGNORE INDEX（indexname）来强制MYSQL忽略索引</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">key_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">ref：显示索引的哪一列被使用了，如果可能的话，是一个常数</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">rows：MYSQL认为必须检查的用来返回请求数据的行数</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">Extra：关于MYSQL如何解析查询的额外信息。将在表4.3中讨论，但这里可以看到的坏的例子是Usingtemporary和Using filesort，意思MYSQL根本不能使用索引，结果是检索会很慢</span>\r\n	</li>\r\n</ul>\r\n<p>\r\n	<span style="font-size:14px;">extra列返回的描述的意义</span>\r\n</p>\r\n<ul>\r\n	<li>\r\n		<span style="font-size:14px;">Distinct:一旦MYSQL找到了与行相联合匹配的行，就不再搜索了</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">Not exists: MYSQL优化了LEFT JOIN，一旦它找到了匹配LEFT JOIN标准的行，就不再搜索了</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">Range checked for each Record（indexmap:#）:没有找到理想的索引，因此对于从前面表中来的每一个行组合，MYSQL检查使用哪个索引，并用它来从表中返回行。这是使用索引的最慢的连接之一</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">Using filesort:看到这个的时候，查询就需要优化了。MYSQL需要进行额外的步骤来发现如何对返回的行排序。它根据连接类型以及存储排序键值和匹配条件的全部行的行指针来排序全部行</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">Using index:列数据是从仅仅使用了索引中的信息而没有读取实际的行动的表返回的，这发生在对表的全部的请求列都是同一个索引的部分的时候</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">Using temporary看到这个的时候，查询需要优化了。这里，MYSQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDERBY上，而不是GROUP BY上</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">Where used使用了WHERE从句来限制哪些行将与下一张表匹配或者是返回给用户。如果不想返回表中的全部行，并且连接类型ALL或index，这就会发生，或者是查询有问题不同连接类型的解释（按照效率高低的顺序排序）</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">system 表只有一行：system表。这是const连接类型的特殊情况</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">const:表中的一个记录的最大值能够匹配这个查询（索引可以是主键或惟一索引）。因为只有一行，这个值实际就是常数，因为MYSQL先读这个值然后把它当做常数来对待</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">eq_ref:在连接中，MYSQL在查询时，从前面的表中，对每一个记录的联合都从表中读取一个记录，它在查询使用了索引为主键或惟一键的全部时使用</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">ref:这个连接类型只有在查询使用了不是惟一或主键的键或者是这些类型的部分（比如，利用最左边前缀）时发生。对于之前的表的每一个行联合，全部记录都将从表中读出。这个类型严重依赖于根据索引匹配的记录多少—越少越好</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">range:这个连接类型使用索引返回一个范围中的行，比如使用&gt;或&lt;查找东西时发生的情况</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">index: 这个连接类型对前面的表中的每一个记录联合进行完全扫描（比ALL更好，因为索引一般小于表数据）</span>\r\n	</li>\r\n	<li>\r\n		<span style="font-size:14px;">ALL:这个连接类型对于前面的每一个记录联合进行完全扫描，这一般比较糟糕，应该尽量避免</span>\r\n	</li>\r\n</ul>', 11, '优化,mysql', 1, 0, 1, '2013-03-10 13:34:35'),
(284, 'PHP优化总结', '<span style="font-size:14px;">1、如果一个方法可静态化，就对它做静态声明。速率可提升至4倍。</span><br />\r\n<span style="font-size:14px;"> 2、echo 比 print 快。</span><br />\r\n<span style="font-size:14px;"> 3、使用echo的多重参数（译注：指用逗号而不是句点）代替字符串连接。</span><br />\r\n<span style="font-size:14px;"> 4、在执行for循环之前确定最大循环数，不要每循环一次都计算最大值。</span><br />\r\n<span style="font-size:14px;"> 5、注销那些不用的变量尤其是大数组，以便释放内存。</span><br />\r\n<span style="font-size:14px;"> 6、尽量避免使用__get，__set，__autoload。</span><br />\r\n<span style="font-size:14px;"> 7、require_once()代价昂贵。</span><br />\r\n<span style="font-size:14px;"> 8、在包含文件时使用完整路径，解析操作系统路径所需的时间会更少。</span><br />\r\n<span style="font-size:14px;"> 9、如果你想知道脚本开始执行（译注：即服务器端收到客户端请求）的时刻，使用$_SERVER[‘REQUEST_TIME’]要好于time()。</span><br />\r\n<span style="font-size:14px;"> 10、函数代替正则表达式完成相同功能。</span><br />\r\n<span style="font-size:14px;"> 11、str_replace函数比preg_replace函数快，但strtr函数的效率是str_replace函数的四倍。</span><br />\r\n<span style="font-size:14px;"> 12、如果一个字符串替换函数，可接受数组或字符作为参数，并且参数长度不太长，那么可以考虑额外写一段替换代码，使得每次传递参数是一个字符，而不是只写一行代码接受数组作为查询和替换的参数。</span><br />\r\n<span style="font-size:14px;"> 13、使用选择分支语句（译注：即switch case）好于使用多个if，else if语句。</span><br />\r\n<span style="font-size:14px;"> 14、用@屏蔽错误消息的做法非常低效。</span><br />\r\n<span style="font-size:14px;"> 15、打开apache的mod_deflate模块。</span><br />\r\n<span style="font-size:14px;"> 16、数据库连接当使用完毕时应关掉。</span><br />\r\n<span style="font-size:14px;"> 17、$row[‘id’]的效率是$row[id]的7倍。</span><br />\r\n<span style="font-size:14px;"> 18、错误消息代价昂贵。</span><br />\r\n<span style="font-size:14px;"> 19、尽量不要在for循环中使用函数，比如for ($x=0; $x &lt; count($array);$x)每循环一次都会调用count()函数。</span><br />\r\n<span style="font-size:14px;"> 20、在方法中递增局部变量，速度是最快的。几乎与在函数中调用局部变量的速度相当。</span><br />\r\n<span style="font-size:14px;"> 21、递增一个全局变量要比递增一个局部变量慢2倍。</span><br />\r\n<span style="font-size:14px;"> 22、递增一个对象属性（如：$this-&gt;prop++）要比递增一个局部变量慢3倍。</span><br />\r\n<span style="font-size:14px;"> 23、递增一个未预定义的局部变量要比递增一个预定义的局部变量慢9至10倍。</span><br />\r\n<span style="font-size:14px;"> 24、仅定义一个局部变量而没在函数中调用它，同样会减慢速度（其程度相当于递增一个局部变量）。PHP大概会检查看是否存在全局变量。</span><br />\r\n<span style="font-size:14px;"> 25、方法调用看来与类中定义的方法的数量无关，因为我（在测试方法之前和之后都）添加了10个方法，但性能上没有变化。</span><br />\r\n<span style="font-size:14px;"> 26、派生类中的方法运行起来要快于在基类中定义的同样的方法。</span><br />\r\n<span style="font-size:14px;"> 27、调用带有一个参数的空函数，其花费的时间相当于执行7至8次的局部变量递增操作。类似的方法调用所花费的时间接近于15次的局部变量递增操作。</span><br />\r\n<span style="font-size:14px;"> 28、用单引号代替双引号来包含字符串，这样做会更快一些。因为PHP会在双引号包围的字符串中搜寻变量，单引号则不会。当然，只有当你不需要在字符串中包含变量时才可以这么做。</span><br />\r\n<span style="font-size:14px;"> 29、输出多个字符串时，用逗号代替句点来分隔字符串，速度更快。注意：只有echo能这么做，它是一种可以把多个字符串当作参数的“函数”（译注：PHP手册中说echo是语言结构，不是真正的函数，故把函数加上了双引号）。</span><br />\r\n<span style="font-size:14px;"> 30、Apache解析一个PHP脚本的时间要比解析一个静态HTML页面慢2至10倍。尽量多用静态HTML页面，少用脚本。</span><br />\r\n<span style="font-size:14px;"> 31、除非脚本可以缓存，否则每次调用时都会重新编译一次。引入一套PHP缓存机制通常可以提升25%至100%的性能，以免除编译开销。</span><br />\r\n<span style="font-size:14px;"> 32、尽量做缓存，可使用memcached。memcached是一款高性能的内存对象缓存系统，可用来加速动态Web应用程序，减轻数据库负载。对运算码(OP code)的缓存很有用，使得脚本不必为每个请求做重新编译。</span><br />\r\n<span style="font-size:14px;"> 33、当操作字符串并需要检验其长度是否满足某种要求时，你想当然地会使用strlen()函数。此函数执行起来相当快，因为它不做任何计算，只返回在zval结构（C的内置数据结构，用于存储PHP变量）中存储的已知字符串长度。但是，由于strlen()是函数，多多少少会有些慢，因为函数调用会经过诸多步骤，如字母小写化（译注：指函数名小写化，PHP不区分函数名大小写）、哈希查找，会跟随被调用的函数一起执行。在某些情况下，你可以使用isset()技巧加速执行你的代码。</span><br />\r\n<span style="font-size:14px;"> （举例如下）</span><br />\r\n<span style="font-size:14px;"> if (strlen($foo) &lt; 5) { echo “Foo is too short”$$}</span><br />\r\n<span style="font-size:14px;"> （与下面的技巧做比较）</span><br />\r\n<span style="font-size:14px;"> if (!isset($foo{5})) { echo “Foo is too short”$$ }</span><br />\r\n<span style="font-size:14px;"> 调用isset()恰巧比strlen()快，因为与后者不同的是，isset()作为一种语言结构，意味着它的执行不需要函数查找和字母小写化。也就是说，实际上在检验字符串长度的顶层代码中你没有花太多开销。</span><br />\r\n<span style="font-size:14px;"> 34、当执行变量$i的递增或递减时，$i++会比++$i慢一些。这种差异是PHP特有的，并不适用于其他语言，所以请不要修改你的C或Java代码并指望它们能立即变快，没用的。++$i更快是因为它只需要3条指令(opcodes)，$i++则需要4条指令。后置递增实际上会产生一个临时变量，这个临时变量随后被递增。而前置递增直接在原值上递增。这是最优化处理的一种，正如Zend的PHP优化器所作的那样。牢记这个优化处理不失为一个好主意，因为并不是所有的指令优化器都会做同样的优化处理，并且存在大量没有装配指令优化器的互联网服务提供商（ISPs）和服务器。</span><br />\r\n<span style="font-size:14px;"> 35、并不是事必面向对象(OOP)，面向对象往往开销很大，每个方法和对象调用都会消耗很多内存。</span><br />\r\n<span style="font-size:14px;"> 36、并非要用类实现所有的数据结构，数组也很有用。</span><br />\r\n<span style="font-size:14px;"> 37、不要把方法细分得过多，仔细想想你真正打算重用的是哪些代码？</span><br />\r\n<span style="font-size:14px;"> 38、当你需要时，你总能把代码分解成方法。</span><br />\r\n<span style="font-size:14px;"> 39、尽量采用大量的PHP内置函数。</span><br />\r\n<span style="font-size:14px;"> 40、如果在代码中存在大量耗时的函数，你可以考虑用C扩展的方式实现它们。</span><br />\r\n<span style="font-size:14px;"> 41、评估检验(profile)你的代码。检验器会告诉你，代码的哪些部分消耗了多少时间。Xdebug调试器包含了检验程序，评估检验总体上可以显示出代码的瓶颈。</span><br />\r\n<span style="font-size:14px;"> 42、mod_zip可作为Apache模块，用来即时压缩你的数据，并可让数据传输量降低80%。</span><br />\r\n<span style="font-size:14px;"> 43、在可以用file_get_contents替代file、fopen、feof、fgets等系列方法的情况下，尽量用file_get_contents，因为他的效率高得多！但是要注意file_get_contents在打开一个URL文件时候的PHP版本问题；</span><br />\r\n<span style="font-size:14px;"> 44、尽量的少进行文件操作，虽然PHP的文件操作效率也不低的；</span><br />\r\n<span style="font-size:14px;"> 45、优化SelectSQL语句，在可能的情况下尽量少的进行Insert、Update操作(在update上，我被恶批过)；</span><br />\r\n<span style="font-size:14px;"> 46、尽可能的使用PHP内部函数（但是我却为了找个PHP里面不存在的函数，浪费了本可以写出一个自定义函数的时间，经验问题啊！）；</span><br />\r\n<span style="font-size:14px;"> 47、循环内部不要声明变量，尤其是大变量：对象(这好像不只是PHP里面要注意的问题吧？)；</span><br />\r\n<span style="font-size:14px;"> 48、多维数组尽量不要循环嵌套赋值；</span><br />\r\n<span style="font-size:14px;"> 49、在可以用PHP内部字符串操作函数的情况下，不要用正则表达式；</span><br />\r\n<span style="font-size:14px;"> 50、foreach效率更高，尽量用foreach代替while和for循环；</span><br />\r\n<span style="font-size:14px;"> 51、用单引号替代双引号引用字符串；</span><br />\r\n<span style="font-size:14px;"> 52、“用i+=1代替i=i+1。符合c/c++的习惯，效率还高”；</span><br />\r\n<span style="font-size:14px;"> 53、对global变量，应该用完就unset()掉；</span>', 11, '优化,php', 1, 0, 1, '2013-03-10 13:34:52'),
(285, 'SQL Error (1130): Host ''192.168.1.100'' is not allowed to connect', '<p>\r\n	<span style="font-size:14px;">例如，你想myuser使用mypassword从任何主机连接到mysql</span><a href="http://hi.baidu.com/webhtml/show_838.html"><span style="font-size:14px;">服务器</span></a><span style="font-size:14px;">的话。</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">GRANT ALL PRIVILEGES ON *.* TO ''myuser''@''%'' IDENTIFIED BY ''mypassword'' WITH GRANT OPTION;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">FLUSH&nbsp;&nbsp;&nbsp;PRIVILEGES;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你想允许用户myuser从ip为192.168.1.6的主机连接到mysql</span><a href="http://hi.baidu.com/webhtml/show_838.html"><span style="font-size:14px;">服务器</span></a><span style="font-size:14px;">，并使用mypassword作为密码</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">GRANT ALL PRIVILEGES ON *.* TO ''myuser''@''192.168.1.3'' IDENTIFIED BY ''mypassword'' WITH GRANT OPTION;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">FLUSH&nbsp;&nbsp;&nbsp;PRIVILEGES;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">&nbsp;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">如果你想允许用户myuser从ip为192.168.1.6的主机连接到mysql</span><a href="http://hi.baidu.com/webhtml/show_838.html"><span style="font-size:14px;">服务器</span></a><span style="font-size:14px;">的dk数据库，并使用mypassword作为密码</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">GRANT ALL PRIVILEGES ON dk.* TO ''myuser''@''192.168.1.3'' IDENTIFIED BY ''mypassword'' WITH GRANT OPTION;</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">FLUSH&nbsp;&nbsp;&nbsp;PRIVILEGES;</span>\r\n</p>', 12, 'mysql', 1, 0, 1, '2013-03-10 13:35:18'),
(286, 'php中使用parse_url()对网址进行解析 ', '<p>\r\n	<span style="font-size:14px;">PHP中一个好用的函数parse_url,特别方便用来做信息抓取的分析,举例子如下:</span>\r\n</p>\r\n<span style="font-size:14px;">$url = ''http://www.electrictoolbox.com/php-extract-domain-from-full-url/'';\r\n$parts = parse_url($url);\r\nprint_r($parts);</span>\r\n<p>\r\n	<span style="font-size:14px;">输出:</span><br />\r\n<span style="font-size:14px;"> Array</span><br />\r\n<span style="font-size:14px;"> (</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[scheme] =&gt; http</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[host] =&gt;&nbsp;</span><a href="http://www.electrictoolbox.com/" target="_blank"><span style="font-size:14px;">www.electrictoolbox.com</span></a><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[path] =&gt; /php-extract-domain-from-full-url/</span><br />\r\n<span style="font-size:14px;"> )</span>\r\n</p>\r\n<p>\r\n	<span style="font-size:14px;">又如:</span>\r\n</p>\r\n<span style="font-size:14px;">&lt;?php\r\n$url = ''http://username:password@hostname/path?arg=value#anchor'';\r\nprint_r(parse_url($url));\r\n?&gt;</span>\r\n<p>\r\n	<span style="font-size:14px;">输出:</span><br />\r\n<span style="font-size:14px;"> Array</span><br />\r\n<span style="font-size:14px;"> (</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[scheme] =&gt; http</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[host] =&gt; hostname</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[user] =&gt; username</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[pass] =&gt; password</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[path] =&gt; /path</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[query] =&gt; arg=value</span><br />\r\n<span style="font-size:14px;"> &nbsp;&nbsp;&nbsp;&nbsp;[fragment] =&gt; anchor</span><br />\r\n<span style="font-size:14px;"> )</span><br />\r\n<br />\r\n<span style="font-size:14px;"> 可以看到,可以很容易分解出一个URL的各个部,那如果要拿指定的部分出来的话也很容易,如</span>\r\n</p>\r\n<span style="font-size:14px;">echoparse_url($url, PHP_URL_PATH);</span>\r\n<p>\r\n	<span style="font-size:14px;">就是在第二个参数中,设定如下的参数:</span><br />\r\n<span style="font-size:14px;"> PHP_URL_SCHEME, PHP_URL_HOST, PHP_URL_PORT, PHP_URL_USER, PHP_URL_PASS, PHP_URL_PATH, PHP_URL_QUERY or PHP_URL_FRAGMENT.</span>\r\n</p>', 9, '函数,php', 1, 0, 1, '2013-03-10 13:35:37');

-- --------------------------------------------------------

--
-- 表的结构 `mb_category`
--

CREATE TABLE IF NOT EXISTS `mb_category` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `u_id` int(10) unsigned NOT NULL,
  `category` varchar(20) NOT NULL,
  `datetime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=18 ;

--
-- 转存表中的数据 `mb_category`
--

INSERT INTO `mb_category` (`id`, `u_id`, `category`, `datetime`) VALUES
(9, 2, 'PHP', '2013-03-10 11:46:12'),
(10, 2, 'Linux', '2013-03-10 11:49:57'),
(11, 2, '技术文摘', '2013-03-10 11:50:53'),
(12, 2, 'Mysql', '2013-03-10 11:59:09'),
(13, 2, 'Js', '2013-03-10 12:02:05'),
(14, 2, 'PHP框架', '2013-03-10 12:07:06'),
(15, 2, 'CSS', '2013-03-10 12:09:08'),
(16, 2, '服务器', '2013-03-10 12:41:35'),
(17, 2, 'Nosql', '2013-03-10 13:00:31');

-- --------------------------------------------------------

--
-- 表的结构 `mb_comment`
--

CREATE TABLE IF NOT EXISTS `mb_comment` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `blogId` int(10) unsigned NOT NULL,
  `name` varchar(100) NOT NULL,
  `avatar` varchar(7) NOT NULL COMMENT '头像图片序号',
  `email` varchar(50) NOT NULL,
  `content` text NOT NULL,
  `datetime` int(10) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `blogId` (`blogId`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--
-- 转存表中的数据 `mb_comment`
--


-- --------------------------------------------------------

--
-- 表的结构 `mb_tags`
--

CREATE TABLE IF NOT EXISTS `mb_tags` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `u_id` int(10) unsigned NOT NULL,
  `tag` varchar(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `u_id` (`u_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=73 ;

--
-- 转存表中的数据 `mb_tags`
--

INSERT INTO `mb_tags` (`id`, `u_id`, `tag`) VALUES
(38, 2, 'php'),
(39, 2, ' xml'),
(40, 2, 'curl'),
(41, 2, 'github'),
(42, 2, ' linux'),
(43, 2, 'mac'),
(44, 2, '域名'),
(45, 2, 'ubuntu'),
(46, 2, ' svn'),
(47, 2, 'coreseek'),
(48, 2, 'mysql'),
(49, 2, 'sphinx'),
(50, 2, ' Jquery'),
(51, 2, '函数'),
(52, 2, 'thinkphp'),
(53, 2, 'keycode'),
(54, 2, 'css3'),
(55, 2, '字体'),
(56, 2, 'nginx'),
(57, 2, 'codeigniter'),
(58, 2, 'lnmp'),
(59, 2, ' lamp'),
(60, 2, ' 笔记'),
(61, 2, 'pcre'),
(62, 2, 'json'),
(63, 2, 'mongodb'),
(64, 2, 'zend'),
(65, 2, 'squid'),
(66, 2, '字符集'),
(67, 2, 'ftp'),
(68, 2, 'lvs'),
(69, 2, '优化'),
(70, 2, 'apache'),
(71, 2, 'innodb'),
(72, 2, 'firefox');

-- --------------------------------------------------------

--
-- 表的结构 `mb_users`
--

CREATE TABLE IF NOT EXISTS `mb_users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `email` varchar(25) NOT NULL,
  `password` char(32) NOT NULL,
  `nickname` varchar(25) NOT NULL,
  `icon` char(18) NOT NULL DEFAULT 'default_icon.jpg',
  `disabled` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `type` smallint(1) unsigned NOT NULL DEFAULT '0',
  `datetime` datetime NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- 转存表中的数据 `mb_users`
--

INSERT INTO `mb_users` (`id`, `email`, `password`, `nickname`, `icon`, `disabled`, `type`, `datetime`) VALUES
(2, 'zhexiao@163.com', '5806863d91f77da3c5f6e239aaced81e', 'Andybegin', 'default_icon.jpg', 0, 0, '2013-03-09 22:44:58');
